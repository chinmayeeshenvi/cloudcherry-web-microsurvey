{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap 794fdea612f4b4b3e96a","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss?59d5","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/templates/Survey.html","webpack:///./src/templates/QuestionStart.html","webpack:///./src/templates/QuestionSingleline.html","webpack:///./src/templates/QuestionNumber.html","webpack:///./src/templates/QuestionMultiline.html","webpack:///./src/templates/QuestionCheckbox.html","webpack:///./src/templates/QuestionRadio.html","webpack:///./src/templates/QuestionRadioMore.html","webpack:///./src/templates/QuestionRadioImage.html","webpack:///./src/templates/QuestionScale.html","webpack:///./src/templates/QuestionCSATAgreement5.html","webpack:///./src/templates/QuestionCSATSatisfaction5.html","webpack:///./src/templates/QuestionNPS.html","webpack:///./src/templates/QuestionSelect.html","webpack:///./src/templates/QuestionMultiSelect.html","webpack:///./src/templates/QuestionSmile.html","webpack:///./src/templates/QuestionSmileInverted.html","webpack:///./src/templates/QuestionStar.html","webpack:///./src/templates/QuestionSlider.html","webpack:///./src/templates/OptionRadioImage.html","webpack:///./src/templates/OptionRadio.html","webpack:///./src/templates/OptionCheckbox.html","webpack:///./src/templates/OptionCheckboxImage.html","webpack:///./src/templates/ThankYou.html","webpack:///./src/templates/LanguageSelector.html","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts"],"names":["root","factory","exports","module","define","amd","cc","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","parents","push","listener","evt","sel","handler","internalHandler","event","t","target","matches","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","e","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","indexOf","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","isArray","res","generateLanguageSelectOptions","checkOptionContainsImage","opt","includes","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","addSurvey","ccsdkDebug","console","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","unsetSurveyRunning","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","text","qText","translated","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","makeRequest","method","postParams","headers","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","response","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","Content-Type","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioMore","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio_more","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","DomUtilities_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","selfOption","selectOptions","selectWrapper","selectedOptionText","textContent","ref","ccSelect","stopPropagation","destroyListeners","_a","setValue","selectOption","csv","allOptions","allOptions_1","domOptions","LanguageTextFilter_1","ConditionalFlowFilter","filterQuestion","aAddedCount","aRemovedCount","getAnswerForQuestionId","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","isAnd","doesSatisfy","isOr","getSurveyQuestions","removeAnswer","sort","questionCompare","a","sequence","groupBy","toUpperCase","isNumberCheck","answerCheck","toLowerCase","questionId","numberInput","number","iFoundAll","getQuestionById","questionAnswer","questionAnswerText","textInput","aAnswer","surveyToken","arguments","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","destroy","callback","prefill","answerObject","prefillByTag","questionTag","answer","fillPrefill","prefillByNote","questionNote","fillPrefillByNote","show","hide","localCCSDK","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","login","loginURL","loginResponse","grant_type","debug","then","logindata","loginData","getSurveyThrottlingLogic","getThrottleUrl","access_token","getThrottleResponse","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","htmlDir","direction","setAttribute","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","fetchQuestions","dom","hideLoader","initSurveyQuestions","DomSurvey","setTheme","keepAlive","displayWelcomeQuestion","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","surveyPopupAnimation","domListeners","questions","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","replaceInQuestionsContainer","thankyouContainer","setTimeout","destroySurveyCb","onSurveyEndEvent","acceptAnswersCb","Number","postPartialAnswer","domSelectElements","setQIndex","randomNumber","String","random","surveyUrl","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","surveyHtml","appendInBody","displayQuestionSelector","onSurveyImpressionEvent","surveyStartTime","welcomeHtml","welcomeText","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","acceptAnswers","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","postPrefillPartialAnswer","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","fillPrefillQuestionObject","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","displayType","surveyPartialUrl","partialResponseId","resp","comparator","onSurveyAnswerEvent","postSurveyFinalUrl","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","floor","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","initial_1","optionLeftExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","bodyElement","content","transform","locals","list","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","newUrl","conditionaText","conditionaText_1","leadingDisplayTexts","fOption","filterByQuestion","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","startSurvey","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","match","currentQuestionId","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","token","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","encodeURI","inputRange","rangeTip","speed","min","max","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","undefined","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (t.matches(sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && opt.includes(';') && opt.includes('.');\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, arr[i]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, arr[i].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + arr[i] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n            else {\r\n                if (question.text != null) {\r\n                    var qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.text == null ? '' : question.text;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (question.text != null) {\r\n                var qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            }\r\n            else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        // console.log(effectiveMultiselect);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers) {\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(method, url);\r\n        xhr.onload = function () {\r\n            if (this.status >= 200 && this.status < 300) {\r\n                var res = xhr.response ? JSON.parse(xhr.response) : '';\r\n                resolve(res);\r\n            }\r\n            else {\r\n                reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            reject({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        };\r\n        if (headers) {\r\n            Object.keys(headers).forEach(function (key) {\r\n                xhr.setRequestHeader(key, headers[key]);\r\n            });\r\n        }\r\n        // var params : any = postParams;\r\n        // We'll need to stringify if we've been given an object\r\n        // If we have a string, this is skipped.\r\n        // if (params && typeof params === 'object') {\r\n        //   params = Object.keys(params).map(function (key) {\r\n        //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        //   }).join('&');\r\n        // }\r\n        xhr.send(postParams);\r\n    });\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers) {\r\n        return makeRequest(\"GET\", url, null, headers);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers) {\r\n        headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers);\r\n    };\r\n    RequestHelper.get = function (url) {\r\n        return makeRequest(\"GET\", url, null, null);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\": \"application/json; charset=utf-8\" });\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(13);\r\nvar QuestionSurvey = __webpack_require__(18);\r\nvar QuestionStart = __webpack_require__(19);\r\nvar QuestionSingleline = __webpack_require__(20);\r\nvar QuestionNumber = __webpack_require__(21);\r\nvar QuestionMultiline = __webpack_require__(22);\r\nvar QuestionCheckbox = __webpack_require__(23);\r\nvar QuestionRadio = __webpack_require__(24);\r\nvar QuestionRadioMore = __webpack_require__(25);\r\nvar QuestionRadioImage = __webpack_require__(26);\r\nvar QuestionScale = __webpack_require__(27);\r\nvar QuestionCSATAgreement5 = __webpack_require__(28);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(29);\r\nvar QuestionNPS = __webpack_require__(30);\r\nvar QuestionSelect = __webpack_require__(31);\r\nvar QuestionMultiSelect = __webpack_require__(32);\r\nvar QuestionSmile = __webpack_require__(33);\r\nvar QuestionSmileInverted = __webpack_require__(34);\r\nvar QuestionStar = __webpack_require__(35);\r\nvar QuestionSlider = __webpack_require__(36);\r\nvar OptionRadioImage = __webpack_require__(37);\r\nvar OptionRadio = __webpack_require__(38);\r\nvar OptionCheckbox = __webpack_require__(39);\r\nvar OptionCheckboxImage = __webpack_require__(40);\r\nvar ThankYou = __webpack_require__(41);\r\nvar LanguageSelector = __webpack_require__(42);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio_more: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_more = QuestionRadioMore;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            //select all cc-select-option and remove class selection\r\n            // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\r\n            // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    if (selectedOptionText.indexOf(selfOption.textContent) == 0) {\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '');\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else if (selectedOptionText.indexOf(selfOption.textContent) > 0) {\r\n                        selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else {\r\n                        selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\r\n                    }\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\r\n                if (selectedOptionText.length < 1) {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\r\n                }\r\n                else {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0].textContent = value;\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (ConditionalFlowFilter.isAnd(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalFlowFilter.isOr(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (!surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            surveyHandler.getSurveyQuestions().push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            aRemovedCount++;\r\n                            surveyHandler.getSurveyQuestions().splice(surveyHandler.getSurveyQuestions().indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(ConditionalFlowFilter.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        window.ccsdkDebug ? console.log(surveyHandler.getSurveyQuestions()) : '';\r\n    };\r\n    ConditionalFlowFilter.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    ConditionalFlowFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isNumberCheck = function (filterQuestion) {\r\n        if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n     *\r\n     * @param filterQuestion\r\n     * @return\r\n     */\r\n    ConditionalFlowFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalFlowFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n            var questionAnswer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n            var questionAnswerText = questionAnswer != null && questionAnswer.textInput != null ? questionAnswer.textInput : '';\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                if (question.multiSelect instanceof Array) {\r\n                    aAnswer = LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, aAnswer);\r\n                }\r\n                //   console.log('hello', question.multiSelect instanceof Array,surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n                if (questionAnswer != null)\r\n                    if (questionAnswer.textInput != null && questionAnswer.textInput.includes(aAnswer)) {\r\n                        questionAnswerText = questionAnswerText.replace(aAnswer, '');\r\n                        //   console.log(questionAnswerText);\r\n                        iFoundAll = true;\r\n                        //   break;\r\n                    }\r\n                    else {\r\n                        iFoundAll = false;\r\n                        break;\r\n                    }\r\n            }\r\n            if (questionAnswer) {\r\n                questionAnswerText = questionAnswerText.replace(/,/g, '');\r\n                //   console.log(questionAnswerText);\r\n            }\r\n            if (iFoundAll && questionAnswerText.length < 1)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(11);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n            // console.log(this.time);\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            // console.log(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    // console.log(arguments[arguments.length - 1]);\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    // this.survey.destroy();\r\n    //remove from trigger manager, delete instance.\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken, questionId, answerObject) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken, questionTag, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken, questionNote, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n//on exit detect\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(12);\r\nvar DomSurvey_1 = __webpack_require__(44);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(47);\r\nvar Triggers_1 = __webpack_require__(48);\r\nvar Request_1 = __webpack_require__(6);\r\nvar Config_1 = __webpack_require__(5);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        // this.setupSurvey();\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.login = function (cb) {\r\n        var loginURL = Config_1.Config.API_URL + Config_1.Config.POST_LOGIN_TOKEN;\r\n        var loginResponse = Request_1.RequestHelper.post(loginURL, { grant_type: Constants_1.Constants.GRANT_TYPE, username: this.config.username, password: this.config.password });\r\n        var self = this;\r\n        this.debug ? console.log(\"login\") : '';\r\n        loginResponse.then(function (logindata) {\r\n            self.debug ? console.log(logindata) : '';\r\n            self.loginData = logindata;\r\n            if (self.isThrottled) {\r\n                self.getSurveyThrottlingLogic(cb);\r\n            }\r\n            else {\r\n                cb();\r\n                return;\r\n            }\r\n        });\r\n    };\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var getThrottleResponse = Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers);\r\n        var self = this;\r\n        getThrottleResponse.then(function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        });\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var postThrottleResponse = Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers);\r\n        postThrottleResponse.then(function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        });\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var addThrottleUrlResponse = Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers);\r\n        addThrottleUrlResponse.then(function (throttleResponse) {\r\n            this.debug ? console.log(throttleResponse) : '';\r\n        });\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var htmlDir = document.getElementsByTagName('html')[0].getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (htmlDir ? htmlDir : \"ltr\");\r\n        document.getElementsByTagName('html')[0].setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var data = this.survey.fetchQuestions();\r\n        var self = this;\r\n        data.then(function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            //copy data.\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            self.dom.hideLoader();\r\n            self.initSurveyQuestions();\r\n        });\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        self.survey.displayWelcomeQuestion();\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (questionId, answer) {\r\n        //save this in this.surveyHandler\r\n        // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n        this.survey.fillPrefillDirect(questionId, answer);\r\n    };\r\n    Survey.prototype.fillPrefill = function (questionTag, answer) {\r\n        //save this in this.surveyHandler\r\n        this.survey.fillPrefill(questionTag, answer);\r\n    };\r\n    Survey.prototype.fillPrefillByNote = function (questionNote, answer) {\r\n        this.survey.fillPrefillByNote(questionNote, answer);\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(5);\r\nvar Request_1 = __webpack_require__(6);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(43);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar Select_1 = __webpack_require__(8);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost();\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            // let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function () {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        var data = Request_1.RequestHelper.get(surveyUrl);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        return data;\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function () {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            self.postPrefillPartialAnswer();\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (tag, value) {\r\n        this.prefillWithTags[tag.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (note, value) {\r\n        this.prefillWithNote[note.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (questionId, value) {\r\n        this.prefillDirect[questionId] = value;\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        // console.log(this.questions);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function () {\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, this.prefillResponses);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                return response;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (question.id == id) {\r\n                return question;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response) {\r\n        // let data = new FormData();\r\n        //in case of file.\r\n        // let input = document.querySelector('input[type=\"file\"]') ;\r\n        // data.append('file', input.files[0]);\r\n        var question = this.questionsToDisplay[index];\r\n        if (typeof question === 'undefined') {\r\n            //now?\r\n            // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n        }\r\n        var data = {\r\n            comparator: 0,\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        // if(this.isPartialAvailable == false) {\r\n        //   this.answers.push(data);\r\n        //   return;\r\n        // }\r\n        // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        //if this is the last of displayed question\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"true\");\r\n        }\r\n        else {\r\n            surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        }\r\n        // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        // let result = RequestHelper.post(surveyPartialUrl, \"[\" + JSON.stringify(data) + \"]\");\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, data);\r\n        }\r\n        else {\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, data);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function () {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        for (var answer in this.surveyAnswers) {\r\n            answersAll.push(this.surveyAnswers[answer]);\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        return Request_1.RequestHelper.post(postSurveyFinalUrl, finalData);\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (optMin[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, optMin[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (optMax[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, optMax[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.attributes != null && question.attributes.scaleColor.length > 0) {\r\n                            tileColor = question.attributes.scaleColor;\r\n                        }\r\n                        else if (question.presentationMode != null && question.presentationMode.includes(\"Color\")) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\n                <style>\\\n                #id' + question.id + ' .option-number-item.option-scale{\\\n                  background-color : ' + tileColor + ';\\\n                }\\\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\n                  background-color : ' + tileColorDark + ';\\\n                }\\\n                </style>\\\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var displayLegend = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend) {\r\n                            if (displayLegend.length > 0) {\r\n                                startRangeLabel_1 = displayLegend[0] ? displayLegend[0] : null;\r\n                                endRangeLabel_1 = displayLegend[1] ? displayLegend[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        // console.log((window as any).isMobile);\r\n                        if (window.isMobile) {\r\n                            if (endRange > 6 && endRange < 11) {\r\n                                optionStyle = 'width:' + ((100 / (endRange - startRange + 1)) - .5) + '%';\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                            options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                        }\r\n                        if ((endRange - startRange + 1) <= 11) {\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                            var optionMaxWidth = (((endRange - startRange + 1) * 38 / 2) - 5) + 'px';\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].includes(\"Male\"))\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Yes\"))\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(multiSelect1);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].includes(\"Male\"))\r\n                                || ((multiSelect.length > 0) && multiSelect[0].includes(\"Yes\"))\r\n                                || ((multiSelect.length > 1) && multiSelect[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(multiSelect);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log('prefillTags', this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    // if (this.isPrefillTags(question)) {\r\n                    //   self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    //   continue;\r\n                    // }\r\n                    if (question.conditionalFilter != null &&\r\n                        (question.conditionalFilter.filterquestions == null\r\n                            || question.conditionalFilter.filterquestions.length == 0)) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        console.log(\"isPrefillTags\", typeof this.prefillWithTags[tag.toLowerCase()]);\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined') {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug ? console.log('fillprefillwithtags', this.prefillWithTags) : '';\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug ? console.log('fillprefillwithtags', tag) : '';\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    window.ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags) : '';\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        var bodyElement = document.\r\n            getElementsByTagName(\"body\")[0];\r\n        this.util.removeClass(bodyElement, \"blurr\");\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(14);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(16)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul{padding-right:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{margin-left:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;right:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;left:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-left:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px}.cc-sdk .form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-sdk .cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:right}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-left:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:left;bottom:9px;left:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:767px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-left:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-right:0}.cc-sdk .submit-icon{margin-left:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.cc-sdk .radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-right:15px}.cc-sdk .cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-sdk .cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{margin-right:0}.cc-sdk .submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-sdk.cc-popup-container{position:fixed;top:0;right:0;left:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-question-container__required-label{display:block;right:0;top:2px}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] .cc-sdk ul{padding-left:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}html[dir=rtl] .cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .cc-sdk.cc-question-container{margin-right:147px;margin-left:0;left:0;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__required,html[dir=rtl] .cc-sdk .cc-question-container__validation{left:0;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__required-label{top:-2px;left:-2px;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}html[dir=rtl] .cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}html[dir=rtl] .cc-sdk .cc-question-container:before{margin-right:-4px;margin-left:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0 0 0 50px}html[dir=rtl] .cc-sdk .hl.dropdown{background-position:3%;text-align:left}html[dir=rtl] .cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-sdk .cc-nps-image{right:31px}html[dir=rtl] .cc-sdk .cc-question-container__content{text-align:left}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-sdk .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-sdk .cc-question-container__list{text-align:left}html[dir=rtl] .cc-sdk .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .cc-question-container__text{padding-right:20px;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:767px){html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}html[dir=rtl] .cc-sdk .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container{right:auto;left:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0}html[dir=rtl] .cc-sdk .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container__list li{padding-right:0;padding-left:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.left-icon{right:0;left:auto}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.right-icon{left:0;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.cc-sdk .option-number-item{color:#fff;float:right;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-seven{margin-right:4px}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-right:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;right:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-left-rating-text-small-container-smile{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:7px;bottom:-12px}.cc-sdk .option-right-rating-text{right:auto;left:5px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:36px;bottom:-12px}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk .option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.one.selected,.cc-sdk .option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two.selected,.cc-sdk .option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three.selected,.cc-sdk .option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four.selected,.cc-sdk .option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five.selected,.cc-sdk .option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-right:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.cc-sdk .option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;top:-10px;text-align:right;width:100%}.cc-sdk .option-csat .cc-checkbox{top:8px}.cc-sdk .option-csat .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:4px}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-left:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:16px}}@media (max-width:767px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-right:74px;top:0}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:19px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:right;font-size:15px;height:35px;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;right:0}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-number-item{margin-left:1px;margin-right:0;float:left}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}html[dir=rtl] .cc-sdk .option-right-rating-text{right:calc(100% - 418px);left:auto!important}html[dir=rtl] .cc-sdk .option-left-rating-text{left:0;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:8px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}html[dir=rtl] .cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{right:0}html[dir=rtl] .cc-sdk .rating-color{position:relative}html[dir=rtl] .cc-sdk .option-smile-box img{margin-left:29px;margin-right:0}html[dir=rtl] .cc-sdk .option-star-box img{margin-right:19px;margin-left:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:35px;right:auto!important}html[dir=rtl] .cc-sdk .option-csat{width:auto;padding-right:0;margin-left:13px}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 19px)) 50%;text-align:left}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{margin-right:0;margin-left:10px}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 30px)) 50%}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .cc-sdk .option-left-rating-text{left:10px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}html[dir=rtl] .cc-sdk .option-right-rating-text{right:calc(100% - 322px);left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .cc-sdk .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-right:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-right:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-sdk .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}html[dir=rtl] .cc-sdk .cc-select-trigger:after{top:50%;right:2px;left:auto}html[dir=rtl] .cc-sdk .cc-select-option{text-align:left}html[dir=rtl] .cc-sdk .cc-select-option:first-of-type{border-radius:0 4px 4px 0}html[dir=rtl] .cc-sdk .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-sdk .cc-checkbox{display:table-cell;position:relative;text-align:right;vertical-align:middle}.cc-sdk .cc-checkbox label{cursor:pointer}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{bottom:0;content:\\\"\\\";right:0;margin:auto;position:absolute;top:0}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{margin-left:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;right:4px;top:-3px;transform:rotate(45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{margin-left:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:15px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:10px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:0;display:inline-block;padding-left:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .range{-webkit-appearance:none;-moz-appearance:none;width:500px}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.range-slider{height:50px;padding-top:9px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .range{width:100%}}.cc-sdk input.range.blue::-moz-range-track,.cc-sdk input.range.blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .chart canvas{right:0;position:absolute;top:0}.cc-sdk .loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.cc-sdk .chart canvas{margin-right:10px}}@media (max-width:767px){.cc-sdk .loader{position:relative;right:auto;top:0;left:auto}}html[dir=rtl] .cc-sdk .chart canvas{left:0;right:auto}html[dir=rtl] .cc-sdk .loader{left:28px;right:auto}@media (min-width:767px){html[dir=rtl] .cc-sdk .chart canvas{margin-left:10px;margin-right:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{left:0}.left{right:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.cc-sdk .form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;right:auto;top:0;left:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .cc-sdk .submit-icon{right:0;left:auto;margin-right:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .cc-sdk .submit-icon{position:absolute;left:30px;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-sdk .red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.hide-left-right{-webkit-transform:translateX(100%);transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}html[dir=rtl] .cc-sdk svg.timer{left:0;right:auto}.cc-sdk svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\" : \".cc-sdk ul{padding-left:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{margin-right:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;left:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;right:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-right:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px}.cc-sdk .form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-sdk .cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:left}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-right:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:right;bottom:9px;right:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:767px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-right:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-left:0}.cc-sdk .submit-icon{margin-right:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.cc-sdk .radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-left:15px}.cc-sdk .cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-sdk .cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{margin-left:0}.cc-sdk .submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-sdk.cc-popup-container{position:fixed;top:0;left:0;right:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-question-container__required-label{display:block;left:0;top:2px}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] .cc-sdk ul{padding-right:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}html[dir=rtl] .cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .cc-sdk.cc-question-container{margin-left:147px;margin-right:0;right:0;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__required,html[dir=rtl] .cc-sdk .cc-question-container__validation{right:0;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__required-label{top:-2px;right:-2px;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}html[dir=rtl] .cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}html[dir=rtl] .cc-sdk .cc-question-container:before{margin-left:-4px;margin-right:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0 50px 0 0}html[dir=rtl] .cc-sdk .hl.dropdown{background-position:97%;text-align:right}html[dir=rtl] .cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-sdk .cc-nps-image{left:31px}html[dir=rtl] .cc-sdk .cc-question-container__content{text-align:right}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-sdk .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-sdk .cc-question-container__list{text-align:right}html[dir=rtl] .cc-sdk .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .cc-question-container__text{padding-left:20px;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:767px){html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}html[dir=rtl] .cc-sdk .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container{left:auto;right:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0}html[dir=rtl] .cc-sdk .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container__list li{padding-left:0;padding-right:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.left-icon{left:0;right:auto}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.right-icon{right:0;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.cc-sdk .option-number-item{color:#fff;float:left;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-seven{margin-left:4px}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-left:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;left:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-left-rating-text-small-container-smile{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:7px;bottom:-12px}.cc-sdk .option-right-rating-text{left:auto;right:5px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:36px;bottom:-12px}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk .option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.one.selected,.cc-sdk .option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two.selected,.cc-sdk .option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three.selected,.cc-sdk .option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four.selected,.cc-sdk .option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five.selected,.cc-sdk .option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-left:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.cc-sdk .option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;top:-10px;text-align:left;width:100%}.cc-sdk .option-csat .cc-checkbox{top:8px}.cc-sdk .option-csat .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:4px}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-right:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:16px}}@media (max-width:767px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-left:74px;top:0}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:19px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:left;font-size:15px;height:35px;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;left:0}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-number-item{margin-right:1px;margin-left:0;float:right}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}html[dir=rtl] .cc-sdk .option-right-rating-text{left:calc(100% - 418px);right:auto!important}html[dir=rtl] .cc-sdk .option-left-rating-text{right:0;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:8px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}html[dir=rtl] .cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{left:0}html[dir=rtl] .cc-sdk .rating-color{position:relative}html[dir=rtl] .cc-sdk .option-smile-box img{margin-right:29px;margin-left:0}html[dir=rtl] .cc-sdk .option-star-box img{margin-left:19px;margin-right:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:35px;left:auto!important}html[dir=rtl] .cc-sdk .option-csat{width:auto;padding-left:0;margin-right:13px}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 19px) 50%;text-align:right}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{margin-left:0;margin-right:10px}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 30px) 50%}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .cc-sdk .option-left-rating-text{right:10px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}html[dir=rtl] .cc-sdk .option-right-rating-text{left:calc(100% - 322px);right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .cc-sdk .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-left:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-left:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-sdk .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}html[dir=rtl] .cc-sdk .cc-select-trigger:after{top:50%;left:2px;right:auto}html[dir=rtl] .cc-sdk .cc-select-option{text-align:right}html[dir=rtl] .cc-sdk .cc-select-option:first-of-type{border-radius:4px 0 0 4px}html[dir=rtl] .cc-sdk .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-sdk .cc-checkbox{display:table-cell;position:relative;text-align:left;vertical-align:middle}.cc-sdk .cc-checkbox label{cursor:pointer}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{bottom:0;content:\\\"\\\";left:0;margin:auto;position:absolute;top:0}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{margin-right:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;left:4px;top:-3px;transform:rotate(-45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{margin-right:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:15px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:10px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:0;display:inline-block;padding-right:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .range{-webkit-appearance:none;-moz-appearance:none;width:500px}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.range-slider{height:50px;padding-top:9px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .range{width:100%}}.cc-sdk input.range.blue::-moz-range-track,.cc-sdk input.range.blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .chart canvas{left:0;position:absolute;top:0}.cc-sdk .loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.cc-sdk .chart canvas{margin-left:10px}}@media (max-width:767px){.cc-sdk .loader{position:relative;left:auto;top:0;right:auto}}html[dir=rtl] .cc-sdk .chart canvas{right:0;left:auto}html[dir=rtl] .cc-sdk .loader{right:28px;left:auto}@media (min-width:767px){html[dir=rtl] .cc-sdk .chart canvas{margin-right:10px;margin-left:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{right:0}.left{left:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.cc-sdk .form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;left:auto;top:0;right:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .cc-sdk .submit-icon{left:0;right:auto;margin-left:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .cc-sdk .submit-icon{position:absolute;right:30px;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-sdk .red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(5px);transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(100%);transform:translateX(100%)}.hide-left-right{-webkit-transform:translateX(-100%);transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}html[dir=rtl] .cc-sdk svg.timer{right:0;left:auto}.cc-sdk svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(17);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id={{surveyToken}}-survey> <div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\"> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-popup-container-2__icons cc-left-icon\\\"> <span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span> <ul class=loader> <li class=chart data-percent=75></li> </ul> </div> <div class=\\\"cc-popup-container-2__icons cc-right-icon\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\"> </div> <div class=cc-survey-container> <div class=cc-survey-content> <div class=cc-questions-container> </div> </div> <div class=\\\"submit-icon act-cc-button-next\\\"></div> <div class=\\\"{{location}} progress-bar\\\" id=progressBar> <span class=progress-line id=progress-line></span> </div> </div> </div> </div> \";\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id={{surveyToken}}-welcome> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-loaderimg hide\\\"> <svg version=1.1 id=L9 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=preserve> <path fill=red d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\"> <animateTransform attributeName=transform attributeType=XML type=rotate dur=1s from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=indefinite /> </path> </svg> </div> <svg class=timer> <circle r=8 cx=20 cy=20 stroke=black stroke-width=0 fill=red></circle> </svg> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\"> <div class=cc-message-box> <h2 class=cc-message-box__text>{{question}}</h2> <a href=javascript:void(0) class=\\\"cc-message-box__btn act-cc-survey-start mobile-hide\\\" id=\\\"\\\">{{button}}</a> <div class=\\\"submit-icon act-cc-survey-start desktop-hide\\\"></div> </div> </div> \";\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=singleline data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=number data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=multiline data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <textarea class=\\\"multiline-box form-control\\\" id={{questionId}} placeholder=\\\"Share your thoughts...\\\"></textarea> </div> </div> \";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=checkbox data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-big-list-container\\\" id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=radio data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--more-option\\\" data-required={{isRequired}} data-type=radioMore data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-one> <label class=\\\"ui checkbox\\\" for=service-one></label> </div> <span><label for=service-one>Learn more about a product</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-two> <label class=\\\"ui checkbox\\\" for=service-two></label> </div> <span><label for=service-two>Troubleshoot an error</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-three> <label class=\\\"ui checkbox\\\" for=service-three></label> </div> <span><label for=service-three>Understand a product</label></span> </li> </ul> </div> </div> \";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required={{isRequired}} data-type=radioImage data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=scale data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id={{questionId}}> <div class=cc-question-container__list> {{optionsRange}} <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=0 title=0 href=# class=option-number-item data-rating=0 coords=83,193,62,228,38,212,23,193,57,167 shape=poly> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=54,165,21,189,11,173,4,154,2,140,43,134 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=43,131,2,135,1,118,5,93,8,83,45,97 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=48,92,10,78,17,61,28,44,39,32,66,66 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=70,61,42,30,55,20,70,14,91,5,101,45 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=105,44,92,5,113,2,134,3,147,5,139,46 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=141,46,150,6,169,11,184,19,200,30,172,63 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=175,63,202,34,218,48,227,66,232,78,194,93 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=196,97,233,81,239,103,240,118,240,135,199,130 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=199,135,240,140,236,159,229,175,221,189,187,167 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=183,169,217,191,204,212,178,229,158,192 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map2 /> <map name=Map2 id=Map2> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=67,180,40,210,26,195,15,176,11,169,47,152 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=48,149,9,163,2,140,1,124,3,110,45,115 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=44,110,4,105,8,79,17,67,22,57,58,79 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=58,76,24,54,33,39,48,29,65,18,85,54 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=87,51,68,15,85,7,106,3,120,3,122,45 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=123,42,123,0,141,2,163,8,176,14,157,52 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=159,53,180,16,201,30,212,44,220,54,186,77 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=188,80,222,55,229,69,236,83,241,108,199,111 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=200,116,239,112,241,128,240,146,234,165,196,150 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=193,153,233,168,225,187,212,202,202,212,175,181 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text {{optionLeftExtraClass}}\\\" style=max-width:maxWidth>{{leftLabel}}</span> <span class=\\\"option-right-rating-text {{optionRightExtraClass}}\\\" style=max-width:maxWidth>{{rightLabel}}</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> {{style}} \";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Agree</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Agree</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Agree</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Disagree</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Disagree</span> </span> </div> </div> </div> \";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Extremely Satisfied</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Satisfied</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Satisfied</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Dissatisfied</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Dissatisfied</span> </span> </div> </div> </div> \";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=nps data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id={{questionId}}> <div class=cc-question-container__list> <div class=cc-options-container> <span data-rating=0 class=\\\"option-number-item mobile-hide option-zero\\\">0</span> <span data-rating=1 class=\\\"option-number-item mobile-hide option-one\\\">1</span> <span data-rating=2 class=\\\"option-number-item mobile-hide option-two\\\">2</span> <span data-rating=3 class=\\\"option-number-item mobile-hide option-three\\\">3</span> <span data-rating=4 class=\\\"option-number-item mobile-hide option-four\\\">4</span> <span data-rating=5 class=\\\"option-number-item mobile-hide option-five\\\">5</span> <span data-rating=6 class=\\\"option-number-item mobile-hide option-six\\\">6</span> <span data-rating=7 class=\\\"option-number-item mobile-hide option-seven\\\">7</span> <span data-rating=8 class=\\\"option-number-item mobile-hide option-eight\\\">8</span> <span data-rating=9 class=\\\"option-number-item mobile-hide option-nine\\\">9</span> <span data-rating=10 class=\\\"option-number-item mobile-hide option-ten\\\">10</span> <div class=\\\"circle-image desktop-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/circle.svg class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=0 coords=86,199,61,177,25,201,38,219,52,230,66,238 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=1 coords=59,173,22,198,12,180,5,160,4,146,44,138 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=2 coords=44,134,49,101,8,84,3,98,0,116,2,141 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=3 coords=49,97,71,68,42,33,25,54,14,71,10,81 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=4 coords=74,65,106,47,94,5,70,14,46,31 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=5 coords=144,47,154,4,135,1,114,1,98,4,108,48 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=6 coords=149,48,157,5,183,15,209,30,180,65 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=7 coords=183,67,211,34,231,56,243,79,204,97 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=8 coords=203,100,245,85,251,106,252,124,251,141,207,135 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=9 coords=208,140,251,146,245,169,231,197,194,172 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=10 coords=193,179,229,201,218,218,202,230,185,238,166,200 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text mobile-hide\\\">Not at all likely</span> <span class=\\\"option-right-rating-text mobile-hide\\\">Very likely</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select data-type=multiple> {{options}} </select> </div> </div> </div> \";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=max-width:200px>{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=max-width:200px>{{rightLabel}}</span> </div> </div> </div> \";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=option-right-rating-text>{{leftLabel}}</span> <span class=option-left-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=star data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=option-star-box data-rating=1></span> <span class=option-star-box data-rating=2></span> <span class=option-star-box data-rating=3></span> <span class=option-star-box data-rating=4></span> <span class=option-star-box data-rating=5></span> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=max-width:200px>{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=max-width:200px>{{rightLabel}}</span> </div> </div> </div> \";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-required={{isRequired}} data-type=slider data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color range-slider\\\" id={{questionId}}> <div class=cc-question-container__slider> <input type=range name=\\\"\\\" value={{min}} min={{min}} max={{max}} class=\\\"range blue\\\"> <span class=option-left-rating-text>{{minLabel}}{{min}}</span> <span class=option-right-rating-text>{{maxLabel}}{{max}}</span> <span class=\\\"slider-tip act-slider-tip\\\"></span> </div> </div> </div> \";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-img-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-img-service-{{labelFor}}></label> </div> <span><label for={{qId}}-img-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\"><img src={{image}} /> {{label}}</label></span> </li> \";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-service-{{labelFor}}></label> </div> <span><label for={{qId}}-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label></span> </li>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}>{{label}}</label></span> </li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}><img src={{image}} /> {{label}}</label></span> </li> \";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=cc-thankyou-container> <div class=cc-question-container__text> <p>{{question}}</p> <p class=cc-thankyou-powered><span class=cc-thankyou-logo></span>Delight powered by Cloudcherry</p> </div> <div class=cc-question-container__content> </div> </div> \";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label></span>Select language</p> <span class=cc-question-container__required>* Mandatory</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionaText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionaText_1 = question.text.split(':');\r\n            if (question.text.includes(\":\")) {\r\n                conditionaText_1 = conditionaText_1[0] + ': <br><span class=\"text-normal\">' + conditionaText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionaText_1 = conditionaText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionaText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionaText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionaText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionaText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (ConditionalTextFilter.isAnd(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalTextFilter.isOr(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        conditionaText = fOption.text;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionaText;\r\n    };\r\n    ConditionalTextFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isNumberCheck = function (filterQuestion) {\r\n        if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"gt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"eq\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                        iFoundAll = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        iFoundAll = false;\r\n                        break;\r\n                    }\r\n            }\r\n            if (iFoundAll)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(8);\r\nvar Theme_1 = __webpack_require__(45);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar Slider_1 = __webpack_require__(46);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (typeof this.ccsdk.surveyData.translated == undefined || Object.keys(this.ccsdk.surveyData.translated).length < 1) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    console.log('test regex text', regex.test(this.qResponse.text));\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            window.ccsdkDebug ? console.log('previous answer', this.ccsdk.survey.answers[this.currentQuestionId]) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        window.ccsdkDebug ? console.log('next question q response end', this.qResponse) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        window.ccsdkDebug ? console.log(this.qIndex) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"language select - previous listeners exists\") : '';\r\n            this.removePrevListener('.cc-language-select');\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"scale question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('scale question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('scale previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"nps question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            window.ccsdkDebug ? console.log('Checkbox selected', rating) : '';\r\n            // console.log('Checkbox selected', rating);\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        console.log('singleline qResponse', self.qResponse);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = '\\\n\t\t.cc-sdk #progressBar{ \\\n\t\t\tbackground : ' + this.brandColorDark + ';\\\n\t\t}\\\n\t\t.cc-sdk #progress-line{ \\\n\t\t\tbackground: ' + brandColor + ' \\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\n\t\t\tbackground:' + brandColor + ';\\\n\t\t}\\\n\t\t.overlay.glass{\\\n\t\t\tbackground-color:' + this.util.hexToRGB(brandColor, .5) + ';\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\n\t\t\tborder-color: #fff;\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\\\n\t\t\tbackground: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-sdk .form-control:focus {\\\n\t\t\tborder-color: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-sdk .cc-message-box__btn{\\\n\t\t\tbackground: ' + brandColor + ';\\\n\t\t\tcolor:#fff;\\\n\t\t}\\\n\t\t.cc-sdk .submit-icon{\\\n\t\t\t background-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3Cfilter x=\\'-18.1%25\\' y=\\'-12.9%25\\' width=\\'136.2%25\\' height=\\'136.2%25\\' filterUnits=\\'objectBoundingBox\\' id=\\'filter-2\\'%3E%3CfeOffset dx=\\'0\\' dy=\\'2\\' in=\\'SourceAlpha\\' result=\\'shadowOffsetOuter1\\'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation=\\'2\\' in=\\'shadowOffsetOuter1\\' result=\\'shadowBlurOuter1\\'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values=\\'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0\\' type=\\'matrix\\' in=\\'shadowBlurOuter1\\'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'1-copy-20\\' transform=\\'translate%28-1246.000000, -664.000000%29\\'%3E%3Cg id=\\'Group-16\\' transform=\\'translate%281250.000000, 666.000000%29\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cuse fill=\\'white\\' fill-opacity=\\'1\\' filter=\\'url%28%23filter-2%29\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3Cuse fill=\\'' + encodeURI(brandColor) + '\\' fill-rule=\\'evenodd\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23FFFFFF\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\\\n\t\t }\\\n\t\thtml[dir=\"rtl\"] .cc-sdk .submit-icon{\\\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'Submit_Icon\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cg id=\\'path-1-link\\' fill-rule=\\'nonzero\\' fill=\\'%23white\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3Cg id=\\'path-1-link\\' fill=\\'' + encodeURI(brandColor) + '\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23ffffff\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\' transform=\\'translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 \\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\");\\\n\t\t}\\\n\t\t.cc-sdk .cc-question-container__required-label{\\\n\t\t\tcolor: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\\\n\t\t\tbackground: ' + brandColor + ' !important;\\\n\t\t\t   background: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\n\t\t\t   background: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\t   background: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\n\t\t   }\\\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\\\n\t\t\tbackground: ' + brandColor + ' !important;\\\n\t\t\tbackground: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\tbackground: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\n\t\t}\\\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\\\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\\\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   .cc-sdk svg.timer circle {\\\n\t\t\tanimation: countdown ' + time + 's linear 1 forwards;\\\n\t\t\tstroke: ' + brandColor + ';\\\n\t\t   }\\\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\\n\t\t\t\tbackground-color: ' + brandColor + ';\\\n\t\t\t}\\\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\\n\t\t\t\tbackground-color: ' + brandColor + ';\\\n\t\t\t}\\\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\\\n\t\t\t\tborder: solid 1px ' + brandColor + ';\\\n\t\t\t}\\\n\t\t @media (max-width: 767px){\\\n\t \t\t\t.overlay.glass{\\\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\n\t \t\t\tbackground-image:none;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-sdk.cc-popup-container{\\\n\t\t\t\t\tbackground-color : transparent;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-sdk.cc-popup-container .overlay.glass{\\\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB(brandColor, .9) + ';\\\n\t\t\t\t}\\\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\\n\t\t\t\t\tcolor:#fff;\\\n\t\t\t\t}\\\n\t\t';\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\r\n        // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\r\n        // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\r\n        // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\r\n        // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\r\n        // } else {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\r\n        // }\r\n        // if(parseInt(this.rangeTip.style.left) <= 50 ){\r\n        //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\r\n        // }else{\r\n        //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\r\n        // }\r\n        // console.log(this.rangeTip.style.left);\r\n        // if(this.timeout){\r\n        //   clearTimeout(this.timeout);\r\n        // }\r\n        // this.timeout = setTimeout(function(){\r\n        //   self.rangeTip.style.display = 'none' ;\r\n        // },300)\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(49);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self); \r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 794fdea612f4b4b3e96a","import { templates } from '../templates';\nimport { Config } from '../../Config';\n\nclass DomUtilities{\n\n  sbcRip : any;\n\n  constructor(){\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\n    // HTMLElement.prototype.matchesSelector ||\n    // HTMLElement.prototype.webkitMatchesSelector ||\n    // HTMLElement.prototype.mozMatchesSelector ||\n    // HTMLElement.prototype.msMatchesSelector ||\n    // HTMLElement.prototype.oMatchesSelector;\n  }\n\n  get(selector : string){\n    return document.querySelectorAll(selector);\n  }\n\n   appendStyle(css : string) : void {\n\t\tlet head : any = document.head || document.getElementsByTagName('head')[0];\n    let style : any = document.createElement('style');\n\t\tstyle.type = 'text/css';\n\t\tif (style.styleSheet){\n\t\t  style.styleSheet.cssText = css;\n\t\t} else {\n\t\t  style.appendChild(document.createTextNode(css));\n\t\t}\n\t\thead.appendChild(style);\n\t}\n\n  remove( el : any ){\n    el.parentNode.removeChild(el);\n  }\n\n  removeAll(elements : any) : void {\n\t\tArray.prototype.forEach.call(elements, (el, i) => {\n      el.parentNode.removeChild(el);\n\t\t});\n  }\n  \n  css(elements : any, property: string, value : any){\n    Array.prototype.forEach.call(elements, (el, i) => {\n      el.style[property] = value; \n    });\n  }\n\n\tremoveClassAll(elements : any, className : string) : void {\n\t\tArray.prototype.forEach.call(elements, (el, i) => {\n\t\t\tthis.removeClass(el,className);\n\t\t});\n\t}\n\n\taddClassAll(elements : any, className : string) : void {\n\t\tArray.prototype.forEach.call(elements, (el, i) => {\n\t\t\tthis.addClass(el,className);\n\t\t});\n\t}\n\n\tremoveClass(el : any, className : string) : void{\n    // console.log(el);\n\t\tif (el.classList)\n\t\t  el.classList.remove(className);\n\t\telse\n\t\t  el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n\t}\n\taddClass(el : any, className : string){\n\t\tif (el.classList)\n\t\t  el.classList.add(className);\n\t\telse\n\t\t  el.className += ' ' + className;\n\t}\n\ttoggleClass(el : any, className : string) : void {\n\t\tif (el.classList){\n\t\t\tif(el.classList.contains(className))\n\t\t\t\tel.classList.remove(className);\n\t\t\telse\n\t\t\t\tel.classList.add(className);\n\t\t}\n\n\n  }\n  hasClass(el:any, className:string){\n    if (el.classList)\n      return el.classList.contains(className);\n    else\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\n  }\n\tready(fn : any) : void {\n\t  if ((<any>document).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\"){\n\t    fn();\n\t  } else {\n\t    document.addEventListener('DOMContentLoaded', fn);\n\t  }\n\t}\n\n\tgetParents(el : any, parentSelector : any) : any {\n    // If no parentSelector defined will bubble up all the way to *document*\n    if (parentSelector === undefined) {\n        parentSelector = document;\n    }\n\n    var parents = [];\n    var p = el.parentNode;\n\n    while (p !== parentSelector) {\n        var o = p;\n        parents.push(o);\n        p = o.parentNode;\n    }\n    parents.push(parentSelector); // Push that parentSelector you wanted to stop at\n\n    return parents;\n\t}\n\n\tlistener(el : any, evt : any, sel : any, handler : any) : any {\n    let internalHandler = function(event) {\n        var t = event.target;\n        while (t && t !== this) {\n            if (t.matches(sel)) {\n                handler.call(t, event);\n            }\n            t = t.parentNode;\n        }\n    };\n    el.addEventListener(evt, internalHandler);\n    return internalHandler;\n  }\n\n\n\n  initListener(type : string, id : string, cb : any) {\n    let ref : any =  {\n      id : id,\n      type : type,\n      cb : cb,\n      internalHandler: undefined,\n    };\n    return ref;\n  }\n\n  checkIfListenerExists(id : string, ar : any) : boolean {\n    for(let listener of ar) {\n      if(listener.id == id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  on( evt : any, el : any, handler : any){\n    el.addEventListener(evt, handler);\n  }\n  off( evt : any, el : any, handler : any){\n    el.removeEventListener(evt, handler);\n  }\n  removeListener(el : any, evt : any, handler : any ){\n    el.removeEventListener(evt, handler);\n  }\n  removeAllListeners(ar:any) : boolean {\n    for(let listener of ar) {\n        this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\n    }\n    return true;\n  }\n\n  trigger(el : any, eventName : string, data : Object){\n    if (typeof CustomEvent === 'function') {\n      var event = <any>new CustomEvent(eventName, {detail: data});\n    } else {\n      var event = <any>document.createEvent('CustomEvent');\n      event.initCustomEvent(eventName, true, true, data);\n    }\n\n    el.dispatchEvent(event);\n  }\n\n  removeTrigger(el : any, eventName : string){\n    el.removeEventListener(eventName);\n  }\n\n   shadeBlendConvert(p : number, from : any, to : string) : string {\n\t    if(typeof(p)!=\"number\"||p<-1||p>1||typeof(from)!=\"string\"||(from[0]!='r'&&from[0]!='#')||(typeof(to)!=\"string\"&&typeof(to)!=\"undefined\"))return null; //ErrorCheck\n\t    if(!this.sbcRip)this.sbcRip=function(d){\n\t        var l=d.length,RGB=new Object();\n\t        if(l>9){\n\t            d=d.split(\",\");\n\t            if(d.length<3||d.length>4)return null;//ErrorCheck\n\t            RGB[0]=i(d[0].slice(4)),RGB[1]=i(d[1]),RGB[2]=i(d[2]),RGB[3]=d[3]?parseFloat(d[3]):-1;\n\t        }else{\n\t            if(l==8||l==6||l<4)return null; //ErrorCheck\n\t            if(l<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(l>4?d[4]+\"\"+d[4]:\"\"); //3 digit\n\t            d=i(d.slice(1),16),RGB[0]=d>>16&255,RGB[1]=d>>8&255,RGB[2]=d&255,RGB[3]=l==9||l==5?r(((d>>24&255)/255)*10000)/10000:-1;\n\t        }\n\t        return RGB;}\n\t    var i=parseInt,r=Math.round,h=from.length>9,h=typeof(to)==\"string\"?to.length>9?true:to==\"c\"?!h:false:h,b=p<0,p=b?p*-1:p,to=to&&to!=\"c\"?to:b?\"#000000\":\"#FFFFFF\",f=this.sbcRip(from),t=this.sbcRip(to);\n\t    if(!f||!t)return null; //ErrorCheck\n\t    if(h)return \"rgb(\"+r((t[0]-f[0])*p+f[0])+\",\"+r((t[1]-f[1])*p+f[1])+\",\"+r((t[2]-f[2])*p+f[2])+(f[3]<0&&t[3]<0?\")\":\",\"+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*10000)/10000:t[3]<0?f[3]:t[3])+\")\");\n\t    else return \"#\"+(0x100000000+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*255):t[3]>-1?r(t[3]*255):f[3]>-1?r(f[3]*255):255)*0x1000000+r((t[0]-f[0])*p+f[0])*0x10000+r((t[1]-f[1])*p+f[1])*0x100+r((t[2]-f[2])*p+f[2])).toString(16).slice(f[3]>-1||t[3]>-1?1:3);\n\t}\n\n   hexToRGB(hex : string, alpha : any) : string {\n\t    if (!hex || [4, 7].indexOf(hex.length) === -1) {\n\t        return; // throw new Error('Bad Hex');\n\t    }\n\n\t    hex = hex.substr(1);\n\t    // if shortcuts (#F00) -> set to normal (#FF0000)\n\t    if (hex.length === 3) {\n\t        hex = hex.split('').map(function(el){\n\t              return el + el + '';\n\t            }).join('');\n\t    }\n\n\t    var r = parseInt(hex.slice(0, 2), 16),\n\t        g = parseInt(hex.slice(2, 4), 16),\n\t        b = parseInt(hex.slice(4, 6), 16);\n\n\t    if (alpha) {\n\t        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n\t    } else {\n\t        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n\t    }\n\t}\n\n\n  arrayContains(needle) {\n    // Per spec, the way to identify NaN is that it is not equal to itself\n    var findNaN = needle !== needle;\n    var indexOf;\n\n    if(!findNaN && typeof Array.prototype.indexOf === 'function') {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function(needle) {\n            var i = -1, index = -1;\n\n            for(i = 0; i < this.length; i++) {\n                var item = this[i];\n\n                if((findNaN && item !== item) || item === needle) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        };\n    }\n\n    return indexOf.call(this, needle) > -1;\n}\n\ngenerateSelectOptions(arr : any){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : string = '';\n    for(i=0;i<arr.length;i++){\n       res += '<option value=\"'+arr[i]+'\">'+arr[i]+'</option>';\n    }\n    return res;\n  }\n}\n  generateLanguageSelectOptions(arr: any) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        if (arr[i] == 'default'){\n          res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\n        }else{\n          res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\n        }\n      }\n      return res;\n    }\n  }\ncheckOptionContainsImage(arr : any){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : boolean = true;\n    for(i=0;i<arr.length;i++){\n       let opt : any = arr[i];\n       res = res && opt.includes(';') && opt.includes('.');\n    }\n    return res;\n  }\n}\n\ngenerateRadioImageOptions(arr : any, id : string){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : string = '' ;\n    for(i=0;i<arr.length;i++){\n       let optHtml : string = templates.option_radio_image;\n       let opt : any = arr[i].split(';')\n      //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n      //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n       optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/'+opt[1] );\n       optHtml = optHtml.replace(/{{qId}}/g, \"nm\"+id );\n       optHtml = optHtml.replace(/{{label}}/g, opt[0] );\n      optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n       optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"' );\n       res += optHtml;\n\n    }\n    return res;\n  }\n}\n  generateRadioIgnoreImageOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_radio;\n        let opt: any = arr[i].split(';')\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n\n\n  generateRadioOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_radio;\n        let opt: any = arr[i].split(';')\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n  generateCheckboxImageOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_checkbox_image;\n        let opt: any = arr[i].split(';')\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n        optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n\n  generateCheckboxIgnoreImageOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_checkbox;\n        let opt: any = arr[i].split(';')\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n\ngenerateCheckboxOptions(arr : any, id : string){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : string = '' ;\n    for(i=0;i<arr.length;i++){\n       let optHtml : string = templates.option_checkbox;\n       let opt : any = arr[i].split(';')\n       optHtml = optHtml.replace(/{{label}}/g, arr[i] );\n      optHtml = optHtml.replace(/{{labelFor}}/g, arr[i].replace(/\\s+/g, '-'));\n      optHtml = optHtml.replace(/{{value}}/g, '\"'+arr[i]+'\"');\n       \n       res += optHtml;\n\n    }\n    return res;\n  }\n}\n\n\n\n}\n\n\n//add Math.round\n\n\nexport { DomUtilities };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\n  static SURVEY_START_EVENT = \"onStart\";\n  static SURVEY_DATA_EVENT = \"onData\";\n  static SURVEY_END_EVENT = \"onEnd\";\n  static SURVEY_CLOSE_EVENT = \"onClose\";\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\n  static SURVEY_CLICK_EVENT = \"onClick\";\n  static GRANT_TYPE = \"password\";\n  static AUTHORIZATION = \"Authorization\";\n  static AUTHORIZATION_BEARER = \"Bearer\";\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\n}\n\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\n    /**\n     * Set/Overwrite a cookie value\n     *\n     * @param name\n     * @param value\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\n     * @param path      OPTIONAL domain root will be used by default\n     */\n    static set(name : any, value : any, days : any, path : any) {\n      if (days) {\n          var date = new Date();\n              date.setTime(date.getTime()+(days*24*60*60*1000));\n          var expires = \"; expires=\"+date.toUTCString();\n      } else var expires = \"\";\n\n      var dir = path || '/';\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\n  }\n\n  /**\n   * Retrieve a cookie value\n   *\n   * @param name\n   * @return String|null\n   */\n  static get(name) {\n      var nameEQ = name + \"=\";\n      var ca = document.cookie.split(';');\n      for(var i=0;i < ca.length;i++) {\n          var c = ca[i];\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n      }\n      return null;\n  }\n\n  /**\n   * Remove a cookie\n   *\n   * @param name\n   */\n  static delete(name) {\n    Cookie.set(name,\"\",-1, undefined);\n  }\n\n  static getParameterByName(name : string, url : any) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n}\n\nexport { Cookie };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue : any = [];\r\n  static processQueueInterval : any = null;\r\n\r\n  static surveyInstances : any = {};\r\n\r\n  static initializeSurvey(surveyId : string) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n  }\r\n\r\n  static addSurvey(surveyId) {\r\n    (window as any).ccsdkDebug?console.log(\"Adding survey ID : \" + surveyId):'';\r\n    SurveyManager.surveyQueue.push(surveyId);\r\n    if(SurveyManager.processQueueInterval == null) {\r\n      SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId) {\r\n    if(SurveyManager.surveyQueue.length > 0) {\r\n      for(let survey in SurveyManager.surveyQueue) {\r\n        if(SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n          SurveyManager.surveyQueue.splice(survey, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if(SurveyManager.surveyQueue.length == 0) {\r\n      clearInterval(SurveyManager.processQueueInterval);\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if((window as any).globalSurveyRunning == true) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      (window as any).ccsdkDebug?console.log(\"Processing survey ID \" + surveyId):'';\r\n      if(surveyId == undefined) {\r\n        clearInterval(SurveyManager.processQueueInterval);\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        (window as any).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey(surveyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    (window as any).globalSurveyRunning = true;\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    (window as any).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText(surveyHandler : any, question : any) {\r\n        if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if( question.translated != null && \r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    let qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                } else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            } else {\r\n                if(question.text != null){\r\n                    let qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText ;\r\n                }else{\r\n                    return question.text == null ? '':question.text;\r\n                }\r\n            }\r\n        } else {\r\n            if (question.text != null) {\r\n                let qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            } else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateMessages(surveyHandler : any, type : string) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    } else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption(surveyHandler: any, question: any, option: any){\r\n        let effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        // console.log(effectiveMultiselect);\r\n        if ( (effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0 ){\r\n            for(let i=0; i < question.multiSelect.length; i++){\r\n                let opt: any = question.multiSelect[i].split(';')\r\n                if(opt[0] == option ){\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }else{\r\n    \r\n                }\r\n            }\r\n        }\r\n        return option;\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\n  static API_URL : String = \"https://api.getcloudcherry.com\";\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\n  static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}\";\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\n  static CDN_URL : string = \"https://cx.getcloudcherry.com/\";\n  static CDN_ASSET_URL : string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\n  static POST_THROTTLING = \"/api/Throttling\";\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\n}\n\nexport {Config};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","// import 'whatwg-fetch';\n\nfunction makeRequest (method : string, url : string, postParams : string, headers : any) : any {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n    xhr.onload = function () {\n      if ((this as any).status >= 200 && (this as any).status < 300) {\n        let res : any = xhr.response?JSON.parse(xhr.response):'';\n        resolve(res);\n      } else {\n        reject({\n          status: (this as any).status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n    xhr.onerror = function () {\n      reject({\n        status: (this as any).status,\n        statusText: xhr.statusText\n      });\n    };\n    if (headers) {\n      Object.keys(headers).forEach(function (key) {\n        xhr.setRequestHeader(key, headers[key]);\n      });\n    }\n    // var params : any = postParams;\n    // We'll need to stringify if we've been given an object\n    // If we have a string, this is skipped.\n    // if (params && typeof params === 'object') {\n    //   params = Object.keys(params).map(function (key) {\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n    //   }).join('&');\n    // }\n    xhr.send(postParams);\n  });\n}\n\nclass RequestHelper {\n\n  static getWithHeaders(url : string, headers : any) {\n    return makeRequest(\"GET\", url, null, headers);\n  }\n\n  static postWithHeaders(url : string, data : Object, headers : any) {\n    headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n    return makeRequest(\"POST\", url, JSON.stringify(data), headers);\n    \n  }\n\n  static get(url : string) {\n    return makeRequest(\"GET\", url, null, null);\n    // let request : Request = new Request( (url as any) , new Object());\n    // return fetch(request).then( (response : Response) => {\n    //   if (response.status >= 200 && response.status < 300) {\n    //     return Promise.resolve(response);\n    //   } else {\n    //     var error = new Error(response.statusText);\n    //     // error.response = response;\n    //     throw error;\n    //   }\n    // }).then( (response : Response) => {\n    //   return response.json();\n    // }).catch( (error : Error) => {\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\n    // });\n  }\n\n  /**\n   *\n   * var data = new FormData()\n   *  data.append('file', input.files[0])\n   *  data.append('user', 'hubot')\n   *\n   * @static\n   * @param {any} url\n   * @param {any} data\n   * @memberof Request\n   */\n  static post(url : string, data : Object) {\n    //consider, file upload?\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\n    (window as any).ccsdkDebug?console.log(\"Sending : \" + data):'';\n    return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\" : \"application/json; charset=utf-8\" });\n    // let request : Request = new Request( (url as any), {\n    //   method : \"POST\",\n    //   headers : {\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\n    //   },\n    //   body : JSON.stringify(data)\n    // });\n    // return fetch(request).then( (response : Response) => {\n    //   if (response.status >= 200 && response.status < 300) {\n    //     return Promise.resolve(response);\n    //   } else {\n    //     let error : Error = new Error(response.statusText);\n    //     // error.response = response;\n    //     throw error;\n    //   }\n    // }).then( (response : Response) => {\n    //   return response.json();\n    // }).catch( (error : Error) => {\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\n    // });\n  }\n\n}\n\nexport { RequestHelper };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","import '../css/main.scss';\nimport  * as QuestionSurvey from '../templates/Survey.html';\nimport  * as QuestionStart from '../templates/QuestionStart.html';\nimport  * as QuestionSingleline from '../templates/QuestionSingleline.html';\nimport  * as QuestionNumber from '../templates/QuestionNumber.html';\nimport  * as QuestionMultiline from '../templates/QuestionMultiline.html';\nimport  * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\nimport  * as QuestionRadio from '../templates/QuestionRadio.html';\nimport  * as QuestionRadioMore from '../templates/QuestionRadioMore.html';\nimport  * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\nimport  * as QuestionScale from '../templates/QuestionScale.html';\nimport  * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\nimport  * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\nimport  * as QuestionNPS from '../templates/QuestionNPS.html';\nimport  * as QuestionSelect from '../templates/QuestionSelect.html';\nimport  * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\nimport  * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\nimport  * as QuestionStar from '../templates/QuestionStar.html';\nimport  * as QuestionSlider from '../templates/QuestionSlider.html';\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\nimport  * as OptionRadio from '../templates/OptionRadio.html';\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\nimport  * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\nimport  * as ThankYou from '../templates/ThankYou.html';\n\nimport  * as LanguageSelector from '../templates/LanguageSelector.html';\n\nlet templates = {\n  question_survey : \"\",\n  question_start : \"\",\n  question_text : \"\",\n  question_number: \"\",\n  question_scale : \"\",\n  question_csat_agreement_5 : \"\",\n  question_csat_satisfaction_5 : \"\",\n  question_nps : \"\",\n  question_multi_line_text : \"\",\n  question_multi_select : \"\",\n  question_radio_more : \"\",\n  question_radio : \"\",\n  question_radio_image : \"\",\n  question_checkbox : \"\",\n  question_select : \"\",\n  question_smile_5: \"\",\n  question_smile_5_inverted : \"\",\n  question_star_5 : \"\",\n  question_slider : \"\",\n  option_radio_image: \"\",\n  option_radio : \"\",\n  option_checkbox: \"\",\n  option_checkbox_image : \"\",\n  thankyou : \"\",\n  language_selector : \"\"\n\n};\n\n\ntemplates.question_survey = QuestionSurvey;\n\ntemplates.question_start = QuestionStart;\n\ntemplates.question_text = QuestionSingleline;\ntemplates.question_number= QuestionNumber;\n\n\ntemplates.question_scale = QuestionScale;\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\ntemplates.question_nps = QuestionNPS;\n\ntemplates.question_slider = QuestionSlider;\n\n\ntemplates.question_multi_line_text = QuestionMultiline;\n\n\ntemplates.question_multi_select = QuestionMultiSelect;\n\n\ntemplates.question_select = QuestionSelect;\n\n\ntemplates.question_smile_5 = QuestionSmile;\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\n\ntemplates.question_star_5 = QuestionStar;\n\ntemplates.question_checkbox = QuestionCheckbox;\n\ntemplates.question_radio = QuestionRadio;\n\ntemplates.question_radio_more = QuestionRadioMore;\n\ntemplates.question_radio_image = QuestionRadioImage;\ntemplates.option_radio_image = OptionRadioImage;\ntemplates.option_radio = OptionRadio;\ntemplates.option_checkbox = OptionCheckbox;\ntemplates.option_checkbox_image = OptionCheckboxImage;\n\ntemplates.thankyou = ThankYou;\n\ntemplates.language_selector = LanguageSelector;\n\n\nexport {templates};\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","import { DomUtilities } from \"./DomUtilities\";\nclass Select{\n  util : DomUtilities;\n  $body : any ;\n  $html : any ;\n  qId : any ;\n  select : any;\n  type : string;\n  listeners : any = [];\n  constructor(qId : string){\n    this.qId = qId;\n\t}\n  init(qId : string){\n    this.util = new DomUtilities();\n    this.$body = document.querySelectorAll(\"body\")[0];\n    this.$html = document.querySelectorAll(\"html\")[0];\n    var select = document.querySelectorAll(\"#\"+qId+\" .cc-select\");\n\n  \t\t// var divSelect = document.querySelectorAll(\"div.cc-select\");\n      // this.util.removeAll(divSelect);\n      let parent = this;\n\n      //Assumption: iterating over array but there will always be one select at a time\n      this.type = select[0].getAttribute('data-type');\n  \t\tArray.prototype.forEach.call(select, function(el, i){\n  \t\t  var self = el;\n  \t\t\tvar $selectOptions = document.querySelectorAll(\"#\"+qId+\" .cc-select-options\");\n  \t\t  var classes = self.getAttribute(\"class\"),\n  \t\t      id      = self.getAttribute(\"id\"),\n  \t\t      name    = self.getAttribute(\"name\");\n  \t\t  var template =  '<div class=\"' + classes + '\">';\n  \t\t      template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\n  \t\t      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\n  \t\t\tvar options = self.querySelectorAll(\"option\");\n  \t\t\t\tArray.prototype.forEach.call(options, function(el, i){\n  \t\t        template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML+ '</span>';\n  \t\t      });\n  \t\t  template += '</div></div></div>';\n  \t\t  parent.util.addClass(self, 'hide');\n  \t\t  self.insertAdjacentHTML('afterend',template);\n  \t\t});\n      this.setupListeners();\n  }\n\n  \n  setupListeners(){\n    var self = this;\n    var qId = self.qId;\n    let ref2 = this.util.initListener('click',  \"#\"+qId+\" .cc-select-option\", function(e){      \n    // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\n      (window as any).ccsdkDebug?console.log('click cc-select-option',this):'';\n      let selfOption = this;\n      let value = this.getAttribute('data-value');\n      //select cc-select-wrapper\n      //todo: write a function to directly select parent via selector\n      let selectOptions = this.parentNode;\n      let select = selectOptions.parentNode.parentNode;\n      this.select = select;\n      let selectWrapper = select.parentNode;\n      (window as any).ccsdkDebug?console.log(select):'';\n      (window as any).ccsdkDebug?console.log(selectOptions):'';\n      (window as any).ccsdkDebug?console.log(selectWrapper):'';\n      //select all cc-select-option and remove class selection\n      // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\n      // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\n\n      self.util.addClass(this,\"selection\");\n      let selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\n      (window as any).ccsdkDebug?console.log('select type', self.type):'';\n      if(self.type !== 'multiple'){\n        (window as any).ccsdkDebug?console.log('select type', self.type):'';\n        selectedOptionText = selfOption.textContent;\n        (window as any).ccsdkDebug?console.log('selected option', selectedOptionText):'';\n        self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\n        selectWrapper.querySelectorAll(\"select\")[0].value = value;\n        select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\n        self.util.addClass(self, 'selection');\n      \n      }else{\n        (window as any).ccsdkDebug?console.log(selectedOptionText):'' ;\n        if(selectedOptionText != 'Select'){\n          if(selectedOptionText.indexOf(selfOption.textContent) == 0){\n            selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '') ;   \n            selectedOptionText = selectedOptionText.replace(selfOption.textContent, '') ;   \n            self.util.removeClass(this,\"selection\");\n          }else if(selectedOptionText.indexOf(selfOption.textContent) > 0){\n            selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '') ;    \n            self.util.removeClass(this,\"selection\");\n          }else{\n            selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\n          }\n        \n        }else{\n          (window as any).ccsdkDebug?console.log(selfOption.textContent):'';\n          selectedOptionText = selfOption.textContent;\n        }\n        selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\n        \n        if(selectedOptionText.length < 1){\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\n        }else{\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\n        }\n        return false;\n        \n      }\n\n    });\n    this.listeners.push(ref2);    \n    ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\n    let ref = this.util.initListener('click',  \"#\"+qId+\" .cc-select-trigger\", function(e){\n      self.$html.addEventListener('click',function(e){\n        if(!self.util.hasClass(e.target, 'cc-select-option')){\n          self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\n          self.$html.removeEventListener('click', function(){\n          });\n        }\n      })\n      var ccSelect = this.parentNode;\n      (window as any).ccsdkDebug?console.log('click cc-select-trigger',ccSelect):'';\n      self.util.toggleClass(ccSelect, \"opened\");\n      e.stopPropagation();\n    });\n    this.listeners.push(ref);    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  \n  }\n\n  destroyListeners(){\n    for(let listener of this.listeners) {\n        this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n    }\n    return true;\n  }\n\n\n  setValue(value : string){\n    let self = this;\n    let qId = self.qId;\n    let select :any;\n\n    select =  document.querySelectorAll(\"#\"+qId+\" select\")[0];\n    select.value = value;\n    document.querySelectorAll(\"#\"+qId+\" .cc-select-trigger\")[0].textContent = value;\n  }\n\n  selectOption(el:any){\n    this.util.addClass(el, 'selection');\n  }\n\n  selectOptions(csv : string){\n    let self = this;\n    if(csv){\n      let allOptions = csv.split(',');\n      for(let option of allOptions){\n        let domOptions = document.querySelectorAll(\"#\"+self.qId+\" .cc-select-option\");\n        Array.prototype.forEach.call(domOptions, function(el, i){\n          if(el.getAttribute('data-value') == option){\n            self.selectOption(el);\n          }\n        });\n          \n      }\n    }\n  }\n\n}\nexport { Select }\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\n\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion(surveyHandler : any, question : any) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n        for (let aQuestion of surveyHandler.getConditionalSurveyQuestions()) {\r\n            if (aQuestion.conditionalFilter != null) {\r\n                let iSatisfied = false;\r\n                let iFailed = false;\r\n                for (let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions) {\r\n                    if (ConditionalFlowFilter.isAnd(aFilterByQuestion)) {\r\n                        if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                            iSatisfied = true;\r\n                        } else {\r\n                            iFailed = true;\r\n                            break;\r\n                        }\r\n                    } else if (ConditionalFlowFilter.isOr(aFilterByQuestion)) {\r\n                        if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                            iSatisfied = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (iSatisfied && !iFailed) {\r\n                    if (!surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                        surveyHandler.getSurveyQuestions().push(aQuestion);\r\n                        aAddedCount++;\r\n                    }\r\n                } else {\r\n                    if (surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                        aRemovedCount++;\r\n                        surveyHandler.getSurveyQuestions().splice(surveyHandler.getSurveyQuestions().indexOf(aQuestion), 1);\r\n                        // surveyHandler.removePartial(aQuestion.id);\r\n                        //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                        surveyHandler.removeAnswer(aQuestion.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (aAddedCount > 0 || aRemovedCount > 0) {\r\n        surveyHandler.getSurveyQuestions().sort(ConditionalFlowFilter.questionCompare);\r\n        // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n        return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    (window as any).ccsdkDebug?console.log(surveyHandler.getSurveyQuestions()):'';\r\n  }\r\n\r\n  private static questionCompare(a : any, b : any) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  private static isAnd(filterQuestion : any) : boolean {\r\n      if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  private static isOr(filterQuestion : any) : boolean{\r\n      if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  private static isNumberCheck(filterQuestion : any) : boolean  {\r\n      if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  /**\r\n   * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n   *\r\n   * @param filterQuestion\r\n   * @return\r\n   */\r\n  private static doesSatisfy(surveyHandler : any, filterQuestion : any) : boolean {\r\n      if (ConditionalFlowFilter.isNumberCheck(filterQuestion)) {\r\n          if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n              if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                  if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                      return true;\r\n                  }\r\n          } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n              if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                  if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                      return true;\r\n                  }\r\n          } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n              if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                  if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                      return true;\r\n                  }\r\n          }\r\n      } else {\r\n          let iFoundAll = false;\r\n          let question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n          let questionAnswer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n          let questionAnswerText = questionAnswer != null && questionAnswer.textInput != null ? questionAnswer.textInput : '';\r\n          for (let aAnswer of filterQuestion.answerCheck) {\r\n              if ( question.multiSelect instanceof Array ){\r\n                  aAnswer = LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, aAnswer);\r\n                }\r\n                //   console.log('hello', question.multiSelect instanceof Array,surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n                if (questionAnswer != null)\r\n                if (questionAnswer.textInput != null && questionAnswer.textInput.includes(aAnswer)) {\r\n                      questionAnswerText = questionAnswerText.replace(aAnswer, '');\r\n                    //   console.log(questionAnswerText);\r\n                      iFoundAll = true;\r\n                    //   break;\r\n                  } else {\r\n                      iFoundAll = false;\r\n                      break;\r\n                  }\r\n          }\r\n          if(questionAnswer){\r\n              questionAnswerText = questionAnswerText.replace(/,/g,'');\r\n            //   console.log(questionAnswerText);\r\n          }\r\n          if (iFoundAll && questionAnswerText.length < 1)\r\n              return true;    \r\n      }\r\n\r\n      return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\nimport { SurveyHandler } from \"./SurveyHandler\";\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\nimport { Cookie } from './helpers/Cookie';\nimport { Constants } from './Constants';\nimport { Slider } from \"./helpers/dom/Slider\";\nimport { SurveyManager } from \"./SurveyManager\";\nimport { Triggers } from './Triggers';\nimport { Survey } from \"./Survey\";\n/**\n * functions that are exposed to SDK User are written here.\n * Entry point for CCSDK.\n */\n\n\nlet localCCSDK = {\n  init : init,\n  destroy : destroy,\n  trigger : trigger,\n  hide : hide,\n  show : show,\n  on : on,\n  prefill : prefill,\n  prefillByTag: prefillByTag,\n  prefillByNote : prefillByNote\n};\n\n// let instances : any = {};\n\n(window as any).globalSurveyRunning = false;\n(window as any).ccsdkDebug = false;\n(window as any).isMobile = window.innerWidth <= 768 ? true:false;\n\nif(typeof (window as any).CCSDK !== 'undefined') {\n  var queue = (window as any).CCSDK.q;\n  (window as any).CCSDK = function()   {\n      if(arguments && arguments.length == 0)   {\n          var time = new Date();\n          // console.log(this.time);\n      } else {\n          (window as any).ccsdkDebug?console.log(arguments):'';\n          var args = (Array as any).from(arguments);\n          // console.log(arguments);\n          //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\n          var functionName = args.splice(0,1)[0];\n        (window as any).ccsdkDebug ?console.log(functionName):'';\n          return localCCSDK[functionName].apply(this, args);\n      }\n  };\n  if(queue){\n    for(var q of queue) {\n        var args = (Array as any).from(q);\n        var functionName = args.splice(0, 1)[0];\n        localCCSDK[functionName].apply(this, args);\n    }\n  }\n  let eventCCReady : Event = document.createEvent('Event');\n  eventCCReady.initEvent('ccready', true, true);\n  document.dispatchEvent(eventCCReady);\n\n}\n\nexport function init(surveyToken : any) {\n  //config options can be set in arguments[1]\n  //available config options : themeColor\n  // console.log(arguments[arguments.length - 1]);\n  let config = (typeof arguments[1] === 'object')? arguments[1] : {};\n  //create survey instance\n  if(typeof Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie.get(surveyToken + '-finish')) {\n    return;\n  }\n  if(typeof config.isActive !== 'undefined' && config.isActive) {\n    SurveyManager.surveyInstances[surveyToken] = (SurveyManager.surveyInstances[surveyToken]) ? SurveyManager.surveyInstances[surveyToken] : new Survey(surveyToken, config);\n    return SurveyManager.surveyInstances[surveyToken];\n  } else {\n    //do nothing\n  }\n  \n}\n\nexport function destroy(surveyToken : string){\n  // this.survey.destroy();\n  //remove from trigger manager, delete instance.\n  delete SurveyManager.surveyInstances[surveyToken];\n}\n//\nexport function trigger(surveyToken : string, type : string, target : string) {\n  (window as any).ccsdkDebug ?console.log(SurveyManager.surveyInstances):'';\n  if(typeof SurveyManager.surveyInstances[surveyToken] != 'undefined'){\n    SurveyManager.surveyInstances[surveyToken].trigger(type, target);\n  }\n  //tell trigger manager to register trigger.\n}\n\nexport function on(surveyToken : string, type : string, callback : any) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].on(type, callback);\n  }\n}\n\nexport function prefill(surveyToken : string, questionId : string, answerObject : any) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\n  }\n}\n\nexport function prefillByTag(surveyToken : string, questionTag : string, answer : any) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') { \n    SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\n  }\n}\n\nexport function prefillByNote(surveyToken : string, questionNote : string, answer : any){\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\n  }\n}\n\nexport function show(surveyToken : string) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].show();\n  }\n}\n\nexport function hide(surveyToken : string) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].hide();\n  }\n}\n\n//on exit detect\n\n\n//\n// export function prefill(id : string, value : string, valueType : string) {\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\n// }\n\n// setInterval(function() {\n//   //collect data and add to cookies.\n// }, 1000);\n\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\n\r\nimport { templates } from \"./helpers/templates\"\r\n\r\nclass Survey {\r\n  survey : SurveyHandler;\r\n  dom : DomSurvey;\r\n  surveyData : any;\r\n  util : DomUtilities;\r\n  scrollbar : Scrollbar;\r\n  slider : Slider;\r\n  config : CCSDKConfig;\r\n  surveyToken : string;\r\n  triggers : Triggers;\r\n  surveyRunning : boolean;\r\n  surveyDone : boolean;\r\n  surveyStatus : string;\r\n  isThrottled : boolean;\r\n  thorttlingLogic : any;\r\n  loginData : any;\r\n  debug : false;\r\n  surveyStartTime : number;\r\n\r\n  constructor(surveyToken : string, config : CCSDKConfig) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    if(typeof this.config.textDirection === 'undefined') {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n    // this.setupSurvey();\r\n    this.triggers = new Triggers(this);\r\n    TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n    this.survey = new SurveyHandler(this);\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor )?\r\n    this.config.brandColor:\"#db3c39\";\r\n      //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger(document, this.surveyToken + '-ready', {'survey' : this});\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger(\"click\", this.config.cssSelector);\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers(this.config);\r\n    // this.login(function() {\r\n      //on login\r\n    // });\r\n  }\r\n\r\n  login(cb) {\r\n    let loginURL = Config.API_URL + Config.POST_LOGIN_TOKEN;\r\n    let loginResponse = RequestHelper.post(loginURL,  { grant_type : Constants.GRANT_TYPE, username : this.config.username, password : this.config.password });\r\n    let self = this;\r\n    this.debug?console.log(\"login\"):'';\r\n    loginResponse.then(function(logindata) {\r\n      self.debug?console.log(logindata):'';\r\n      self.loginData = logindata;\r\n      if(self.isThrottled) {\r\n        self.getSurveyThrottlingLogic(cb);\r\n      } else {\r\n        cb();\r\n        return;\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  getSurveyThrottlingLogic(cb) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let getThrottleResponse = RequestHelper.getWithHeaders(getThrottleUrl, headers);\r\n    let self = this;\r\n    getThrottleResponse.then(function(data) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling(cb);\r\n    });\r\n  }\r\n\r\n  checkThrottling(cb) {\r\n    if(this.thorttlingLogic != null) {\r\n      if (this.thorttlingLogic.inputIds == null) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n      if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n          this.thorttlingLogic.logics[0].filter.location = [];\r\n          this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let postThrottleResponse = RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers);\r\n    postThrottleResponse.then(function(throttleResponse) {\r\n      \r\n      if(typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    });\r\n  }\r\n\r\n  addThrottlingEntries(isOpen : boolean) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token : \"help\" };\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let addThrottleUrlResponse = RequestHelper.postWithHeaders(addThrottleUrl, { \r\n      user : \"\", \r\n      mobile : \"\", \r\n      emailId : \"\", \r\n      customId : \"\", \r\n      surveySentDate : \"\", \r\n      surveyOpenDate : \"\", \r\n      channel : \"\", \r\n      isOpened : isOpen\r\n    }, headers);\r\n    addThrottleUrlResponse.then(function(throttleResponse) {\r\n      this.debug?console.log(throttleResponse):'';\r\n    })\r\n  }\r\n\r\n  setupSurvey(){\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection(){\r\n    let htmlDir : string = document.getElementsByTagName('html')[0].getAttribute('dir');\r\n    let direction : string = ( this.config && this.config.textDirection )?\r\n    this.config.textDirection:(htmlDir?htmlDir:\"ltr\");\r\n    document.getElementsByTagName('html')[0].setAttribute('dir', direction);\r\n  }\r\n\r\n  setDisplayOptions(){\r\n    this.survey.surveyDisplay.position =  this.config && this.config.position ?\r\n    this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch (this.survey.surveyDisplay.position) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData(){\r\n    let data = this.survey.fetchQuestions();\r\n    let self : Survey = this;\r\n    data.then(function(surveyData) {\r\n        self.debug?console.log(surveyData):'';\r\n        // console.log(surveyData);\r\n\r\n        self.surveyData = surveyData;\r\n        //copy data.\r\n        let event = new CustomEvent(Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken , { detail : JSON.parse(JSON.stringify(surveyData)) });\r\n        document.dispatchEvent(event);\r\n        self.dom.hideLoader();\r\n        self.initSurveyQuestions();\r\n    });\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self : Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey(this);\r\n    self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive:0);\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    \r\n    self.survey.displayWelcomeQuestion();\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions(){\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey(this.surveyData);\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  public on(type: string, callback : any) {\r\n    document.addEventListener(type + \"-\" + this.surveyToken, function(e : any) {\r\n      callback(e.detail);\r\n    });\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n  \r\n\r\n  public prefill(questionId : string, answer : any) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect(questionId, answer);\r\n  }\r\n\r\n  public fillPrefill(questionTag : string, answer : any) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill(questionTag, answer);\r\n  }\r\n\r\n  public fillPrefillByNote(questionNote : string, answer : any){\r\n    this.survey.fillPrefillByNote(questionNote, answer);\r\n  }\r\n\r\n  public trigger(type : string, target : any) {\r\n    let self : Survey = this;\r\n    switch( type ){\r\n      case 'click':\r\n        this.triggers.enableClickTrigger(target, function(){\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey(self.surveyToken);\r\n\r\n        });\r\n        break;\r\n      case 'page-count':\r\n        let count : number  = parseInt(target);\r\n        this.triggers.enablePageCountTrigger(count);\r\n\r\n      break;\r\n      case 'site-count':\r\n        let count2 : number  = parseInt(target);\r\n        this.triggers.enableSiteCountTrigger(count2);\r\n      break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger(parseInt(target));\r\n      break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n      break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger(target);\r\n      break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n      break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey(self.surveyToken);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\n// import 'whatwg-fetch';\nimport { Config } from \"./Config\";\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\nimport { RequestHelper } from './helpers/Request';\nimport { templates } from \"./helpers/templates\";\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\nimport { Constants } from \"./Constants\";\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\nimport { Select } from './helpers/dom/Select';\nimport { Cookie } from './helpers/Cookie';\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\n\n\nclass SurveyHandler {\n  surveyToken: string;\n  surveyData: any;\n  questions: any;\n  prefillQuestions: any;\n  questionsToDisplay: any;\n  randomNumber: Number;\n  welcomeQuestion: any;\n  welcomeQuestionButtonText: any;\n  prefillResponses: any;\n  prefillDirect : any;\n  prefillWithTags: any;\n  prefillWithNote : any;\n  questionResponses: any;\n  answers: any = {};\n  surveyAnswers: any = {};\n  util: DomUtilities;\n  dom: DomSurvey;\n  displayThankYouCb: any;\n  destroySurveyCb: any;\n  acceptAnswersCb: any;\n  surveyDisplay: DisplayConfig;\n  currentQuestion: any;\n  conditionalQuestions: any;\n  ccsdk: any;\n  welcomeInterval: any;\n  welcomeQuestionDisplayTime: any;\n  domListeners: any;\n  languageSelect: any;\n  // isPartialAvailable : Boolean;\n\n  constructor(ccsdk) {\n    this.surveyToken = ccsdk.surveyToken;\n    this.surveyData = {};\n    this.surveyDisplay = {\n      'position': '',\n      'surveyPosition': '',\n      'welcomePopupAnimation': '',\n      'surveyPopupAnimation': '',\n    };\n    this.ccsdk = ccsdk;\n    this.domListeners = [];\n    this.questions = [];\n    this.questionsToDisplay = [];\n    this.prefillQuestions = [];\n    this.conditionalQuestions = [];\n    this.prefillResponses = [];\n    this.prefillWithTags = {};\n    this.prefillWithNote = {};\n    this.prefillDirect = {};\n    this.answers = {};\n    this.util = new DomUtilities();\n    this.dom = ccsdk.dom;\n    this.displayThankYouCb = (e: any) => {\n      //perform final post\n      this.finalPost();\n      let thankyouHtml: any = templates.thankyou;\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : (this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You');\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\n      thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\n      thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\n      this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\n      //TODO : Fix this Add class not working???\n      let thankyouContainer: any = this.util.get(\"#cc-thankyou-container\");\n      (window as any).ccsdkDebug ? console.log(thankyouContainer) : '';\n      this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\n      // let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\n      // document.dispatchEvent(onSurveyEndEvent);\n      //set done cookie for 30 days.\n      Cookie.set(this.surveyToken + '-finish', 'true', 30, '/');\n      setTimeout(() => {\n        this.ccsdk.dom.destroyListeners();\n        this.destroy();\n      }, 2000);\n    }\n\n    this.destroySurveyCb = (e: any) => {\n      let self: SurveyHandler = this;\n      //send end survey event.\n      let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyEndEvent);\n      self.destroy();\n    }\n\n    this.acceptAnswersCb = (e: any) => {\n      let self: SurveyHandler = this;\n      // (window as any).ccsdkDebug?console.log(self):'';\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\n      let data: any = <any>e.detail;\n      let response: any = {};\n      response.questionId = data.questionId;\n      switch (data.type) {\n        case 'scale':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'nps':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'radio':\n          response.text = data.data.text;\n          response.number = null;\n          // response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'radioImage':\n          response.text = data.data.text;\n          response.number = null;\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'smile':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'star':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'multiline':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'singleline':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'number':\n          response.text = null;\n          response.number = Number(data.data.number);\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'checkbox':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'select':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'slider':\n          response.text = data.data.text;\n          response.number = Number(data.data.number);\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  fetchQuestions() {\n    this.randomNumber = parseInt((String)(Math.random() * 1000));\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\n    surveyUrl = Config.API_URL + surveyUrl;\n    let data = RequestHelper.get(surveyUrl);\n\n    // (window as any).ccsdkDebug?console.log(data):'';\n    return data;\n    // this.surveyData = data.then(function();\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\n  }\n\n  removeAnswer(questionId) {\n    delete this.answers[questionId];\n    delete this.surveyAnswers[questionId];\n  }\n\n  attachSurvey(surveyData: any) {\n    this.surveyData = surveyData;\n    this.setupSurveyContainer();\n    //clean survey\n    this.cleanSurvey();\n    this.displayQuestions();\n    this.displayThankYou();\n    this.destroySurvey();\n  }\n\n  cleanSurvey() {\n    this.questionsToDisplay = [];\n    this.answers = {};\n    this.surveyAnswers = {};\n    this.conditionalQuestions = [];\n  }\n\n  setupSurveyContainer() {\n    let surveyHtml: any = templates.question_survey;\n    surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\n    surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\n    surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\n    this.ccsdk.dom.appendInBody(surveyHtml);\n  }\n\n  displayQuestionSelector() {\n\n  }\n\n  displayWelcomeQuestion() {\n    //call this with true when welcome container is clicked.\n    // this.ccsdk.addThrottlingEntries(false);\n    let onSurveyImpressionEvent = new CustomEvent(Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\n    document.dispatchEvent(onSurveyImpressionEvent);\n    this.ccsdk.surveyStartTime = new Date();\n    let self = this;\n    let welcomeHtml: any = templates.question_start;\n    welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\n    welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\n    welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\n    welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\n    welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\n    this.ccsdk.dom.appendInBody(welcomeHtml);\n    this.ccsdk.dom.showWelcomeContainer();\n    if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\n      this.welcomeQuestionDisplayTime = new Date();\n      this.welcomeInterval = setInterval(() => { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive) }\n        , 1000);\n    }\n\n    this.acceptAnswers();\n    // self.survey.displayLanguageSelector();\n\n  }\n\n  checkWelcomeQuestionDisplay(keepAlive) {\n    let self = this;\n    let now = new Date();\n    if (keepAlive) {\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\n      if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\n        self.killWelcomeQuestion();\n      }\n    }\n  }\n\n  killWelcomeQuestion() {\n    this.destroy();\n    clearInterval(this.welcomeInterval);\n  }\n  cancelKillWelcomeQuestion() {\n    clearInterval(this.welcomeInterval);\n  }\n\n  displayLanguageSelector() {\n    let self = this;\n    let options1: string;\n    let qId = 'languageSelector';\n    let cTemplate1 = templates.language_selector;\n    options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\n    cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\n    cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\n    cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\n    this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\n    let $questionContainer = document.\n      querySelectorAll(\".cc-questions-container\");\n    let $body = document.getElementsByTagName(\"body\")[0];\n\n    this.util.addClass($questionContainer[0].firstChild, 'show-slide');\n    this.languageSelect = new Select(qId);\n    let submitBtn = document.querySelectorAll('.submit-icon');\n    this.util.removeClassAll(submitBtn, 'act-cc-button-next');\n    this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\n    if (this.languageSelect) {\n      this.languageSelect.destroyListeners();\n    }\n    this.languageSelect.init(qId);\n    let selectRes = '';\n    if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\n      // return;\n      (window as any).ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\n      this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\n    }\n    let ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\n      self.ccsdk.debug ? console.log('languageSelectOption') : '';\n      selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\n    });\n    this.domListeners.push(ref);\n    ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\n\n\n    let languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\n      self.ccsdk.debug ? console.log('languageNext') : '';\n      self.ccsdk.config.language = \"default\";\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\n      //set config rtl or ltr\n      let isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\n      self.ccsdk.config.textDirection = isRTL?'rtl':'ltr';\n      self.ccsdk.setHtmlTextDirection();\n      self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\n      self.util.addClassAll(submitBtn, 'act-cc-button-next');\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\n      self.postPrefillPartialAnswer();\n      \n\n    });\n    this.domListeners.push(languageSelect2);\n\n    languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\n\n\n\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\n\n    // this.ccsdk.dom.appendInBody(cTemplate1);\n    // this.ccsdk.dom.showLanguageSelector();\n    (window as any).ccsdkDebug ? console.log(cTemplate1) : '';\n  }\n\n  displayThankYou() {\n    let self: SurveyHandler = this;\n    document.addEventListener('ccdone', this.displayThankYouCb);\n  }\n\n\n  displayQuestions() {\n    //check question is supported, based on question types.\n    //filter pre fill questions.\n    this.questions = this.surveyData.questions;\n    \n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\n    this.filterQuestions();\n    //sort questions and display them?\n    this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\n    let ccSurvey: any;\n    ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\n    // ccSurvey = ccSurvey[0];\n    let surveyObject = ccSurvey[0];\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\n    //chec\n    //for now just do 1st question.\n    for (let question of this.questionsToDisplay) {\n      if (this.checkConditionals(question)) {\n        let compiledTemplate = this.compileTemplate(question);\n        question.compiledTemplate = compiledTemplate;\n        // surveyObject.innerHTML += compiledTemplate;\n        //register handlers for onclick?\n      } else {\n        if (this.isPrefillQuestion(question)) {\n          this.prefillQuestions.push(question);\n        }\n      }\n      //else don't display it.\n    }\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\n\n  }\n\n  getSurveyQuestions(): any {\n    return this.questionsToDisplay;\n  }\n\n  getAnswerForQuestionId(questionId: string) {\n    let answer = this.surveyAnswers[questionId];\n    if(typeof answer  === 'undefined') {\n      for(let response of this.prefillResponses) {\n        if(response.questionId == questionId) {\n          return response;\n        }\n      }\n    }\n    return this.surveyAnswers[questionId];\n  }\n\n  acceptAnswers() {\n    let self: SurveyHandler = this;\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\n    document.addEventListener('q-answered', this.acceptAnswersCb);\n  }\n\n  fillPrefillQuestionObject(id: any, response: any) {\n    let question: any = this.getQuestionById(id);\n    let responseStored = this.getPrefillResponseById(id);\n    if (responseStored != null) {\n      this.updatePrefillResponseById(id, response);\n    } else {\n      this.prefillResponses.push(response)\n    }\n  }\n\n  fillPrefill(tag: any, value: object) {\n    this.prefillWithTags[tag.toLowerCase()] = value;\n    (window as any).ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\n  }\n\n  fillPrefillByNote(note:any, value: object){\n    this.prefillWithNote[note.toLowerCase()] = value;\n    (window as any).ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\n    \n  }\n\n  fillPrefillDirect(questionId : string, value : object){\n    this.prefillDirect[questionId] = value;\n    (window as any).ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\n    \n  }\n\n  fillPrefillQuestion(id: any, value: any, valueType: string) {\n    let question: any = this.getQuestionById(id);\n    // console.log(this.questions);\n    let response: any;\n    let responseStored = this.getPrefillResponseById(id);\n    if (responseStored != null) {\n      response = responseStored;\n    } else {\n      response = {\n        questionId: question.id,\n        questionText: question.text,\n        textInput: null,\n        numberInput: null\n      };\n    }\n    valueType = this.getAnswerTypeFromDisplayType(question.displayType);\n\n    if (valueType.toLowerCase() == \"number\") {\n      response.numberInput = value;\n    }\n    if (valueType.toLowerCase() == \"text\") {\n      response.textInput = value;\n    }\n    if (responseStored != null) {\n      this.updatePrefillResponseById(id, response);\n    } else {\n      this.prefillResponses.push(response)\n    }\n\n  }\n\n  postPrefillPartialAnswer() {\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\n    surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\n    (window as any).ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\n    (window as any).ccsdkDebug ? console.log(this.prefillResponses) : '';\n    if(typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\n      return RequestHelper.post(surveyPartialUrl, this.prefillResponses);\n    } else {\n      // console.log('No Prefill data');\n      return;\n    }\n  }\n\n  updatePrefillResponseById(id: any, resp: any) {\n    for (let response of this.prefillResponses) {\n      if (response.questionId == id) {\n        response = resp;\n      }\n    }\n  }\n\n  getPrefillResponseById(id: any) {\n    for (let response of this.prefillResponses) {\n      if (response.questionId == id) {\n        return response;\n      }\n    }\n    return null;\n  }\n\n  getQuestionById(id: any) {\n    for (let question of this.questions) {\n      if (question.id == id) {\n        return question;\n      }\n    }\n  }\n\n  postPartialAnswer(index: any, response: any) {\n    // let data = new FormData();\n    //in case of file.\n    // let input = document.querySelector('input[type=\"file\"]') ;\n    // data.append('file', input.files[0]);\n    let question: any = this.questionsToDisplay[index];\n    if (typeof question === 'undefined') {\n      //now?\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\n    }\n    let data: any = {\n      comparator: 0,\n      questionId: question.id,\n      questionText: question.text,\n      textInput: response.text,\n      numberInput: response.number\n    };\n    // if(this.isPartialAvailable == false) {\n    //   this.answers.push(data);\n    //   return;\n    // }\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\n    //if this is the last of displayed question\n    (window as any).ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\n    if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\n      surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"true\");\n    } else {\n      surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\n    }\n    // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\n    //add partial answer to main answer\n    this.surveyAnswers[question.id] = data;\n\n    data = [data];\n    // let result = RequestHelper.post(surveyPartialUrl, \"[\" + JSON.stringify(data) + \"]\");\n    let onSurveyAnswerEvent = new CustomEvent(Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\n    document.dispatchEvent(onSurveyAnswerEvent);\n    if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\n     //last question post moved to separate function\n      return RequestHelper.post(surveyPartialUrl, data);\n     \n    } else {\n      return RequestHelper.post(surveyPartialUrl, data);\n    }\n\n  }\n\n  finalPost(){\n    //last question\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\n    let answersAll = [];\n    for (let answer in this.surveyAnswers) {\n      answersAll.push(this.surveyAnswers[answer]);\n    }\n    for (let answer in this.prefillResponses){\n      answersAll.push(this.prefillResponses[answer]);\n    }\n    let timeAtPost = new Date().getTime();\n    let finalData = {\n      id: this.ccsdk.surveyToken,\n      user: this.ccsdk.config.username,\n      locationId: null,\n      responses: answersAll,\n      nps: 0,\n      surveyClient: Constants.SURVEY_CLIENT,\n      responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\n    };\n    return RequestHelper.post(postSurveyFinalUrl, finalData);\n    \n  }\n\n  /**\n   *\n   * check if conditions are satsified which are required to display question?\n   *\n   * @param {any} question\n   * @memberof Survey\n   */\n  checkConditionals(question: any) {\n    return true;\n  }\n\n  compileTemplate(question: any) {\n    let self: SurveyHandler = this;\n    //get question type\n    let questionTemplate;\n    // (window as any).ccsdkDebug?console.log(question):'';\n    if(question != 'undefined'){\n      switch (question.displayType) {\n        case \"Slider\":\n          let opt: any = question.multiSelect[0].split(\"-\");\n          let optMin: any = opt[0].split(\";\");\n          let optMax: any = opt[1].split(\";\");\n          //get text question template and compile it.\n          questionTemplate = templates.question_slider;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\n          if (optMin[1]) {\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, optMin[1] + \"-\");\n          } else {\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\n          }\n          questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\n          if (optMax[1]) {\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, optMax[1] + \"-\");\n          } else {\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\n          }\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          break;\n        case \"Scale\":\n          //get text question template and compile it.\n          (window as any).ccsdkDebug ? console.log(question.questionTags) : '';\n          if (question.questionTags.includes(\"NPS\")) {\n            questionTemplate = templates.question_nps;\n            questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n            questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n            questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n            questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          } else if (question.questionTags.includes(\"CSAT\")) {\n            if (question.questionTags.includes(\"csat_satisfaction_5\")) {\n              questionTemplate = templates.question_csat_satisfaction_5;\n            } else if (question.questionTags.includes(\"csat_agreement_5\")) {\n              questionTemplate = templates.question_csat_agreement_5;\n            }\n            questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n            questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n            questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n            questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          } else {\n            let tileColor = '';\n            let style = '';\n            if(question.attributes != null && question.attributes.scaleColor.length > 0){\n              tileColor = question.attributes.scaleColor;\n            }else if (question.presentationMode != null && question.presentationMode.includes(\"Color\")) {\n              tileColor = question.presentationMode.split(':')[1];\n            }\n            if(tileColor.length > 0){\n              let tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\n              style = '\\\n                <style>\\\n                #id'+ question.id + ' .option-number-item.option-scale{\\\n                  background-color : '+ tileColor + ';\\\n                }\\\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\n                  background-color : '+ tileColorDark + ';\\\n                }\\\n                </style>\\\n              ';\n            }\n\n            questionTemplate = templates.question_scale;\n            questionTemplate = questionTemplate.replace(/{{style}}/g, style);\n            questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n            questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n            questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n            questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n            //construct NPS scale here....\n            let startRange = 0.0;\n            let endRange = 10.0;\n            let options = \"\";\n            let startRangeLabel = \"\";\n            // let startRangeLabel = \"\";\n            // let endRangeLabel = \"Very likely\";\n            let endRangeLabel = \"\";\n            let displayLegend = LanguageTextFilter.translateDisplayLegend(this, question);\n            if (displayLegend) {\n              if (displayLegend.length > 0) {\n                startRangeLabel = displayLegend[0] ? displayLegend[0] : null;\n                endRangeLabel = displayLegend[1] ? displayLegend[1] : null;\n              }\n            }\n            if (question.multiSelect.length > 0) {\n              startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\n              if (startRangeLabel == null) {\n                startRangeLabel = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\n              }\n              endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\n              if (endRangeLabel == null) {\n                endRangeLabel = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\n              }\n            }\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\n            let mobileImageUrl = '';\n            let imageVisibility010 = 'hide';\n            let imageVisibility110 = 'hide';\n            let scaleVisibility = 'show-inline';\n            let scaleImageContainer = '';\n            if(startRange == 0 && endRange == 10){\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\n              imageVisibility010 = 'show';\n              imageVisibility110 = 'hide';\n              scaleVisibility = 'hide';\n              scaleImageContainer = 'scale-image-container';\n            }else if(startRange == 1 && endRange == 10){\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\n              imageVisibility010 = 'hide';\n              imageVisibility110 = 'show';\n              scaleVisibility = 'hide';\n              scaleImageContainer = 'scale-image-container';\n            }\n            // console.log('scale', startRange, endRange);\n            let divider: any = 1;\n            if (endRange < 11) {\n            } else {\n              divider = (endRange - startRange) / 10.0;\n            }\n            let initial = 0.0;\n            let optionStyle = '';\n            // console.log((window as any).isMobile);\n            if((window as any).isMobile){\n              if(endRange > 6 && endRange < 11){\n                 optionStyle = 'width:' +((100/(endRange - startRange + 1)) -.5)+ '%';\n              }\n            }else{\n              imageVisibility010 = 'hide';\n              imageVisibility110 = 'hide';\n              scaleVisibility = 'show-inline';\n              scaleImageContainer = '';\n              mobileImageUrl=\"\";\n\n            }\n            for (let initial = startRange; initial <= endRange; initial += divider) {\n              options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale '+scaleVisibility+'\" style=\"'+optionStyle+'\">' + initial + '</span>';\n            }\n            if ((endRange-startRange+1) <= 11) {\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\n              var optionMaxWidth = (((endRange - startRange + 1)*38/2) - 5) +'px';\n              // console.log(optionMaxWidth);\n            }\n            questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\n            questionTemplate = questionTemplate.replace(/maxWidth/g, optionMaxWidth);\n            questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\n            questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\n            questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\n            questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\n            questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"'+mobileImageUrl+'\"');\n            questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\n            questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\n            questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\n          }\n\n          break;\n        case \"Text\":\n          //get text question template and compile it.\n          questionTemplate = templates.question_text;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\n\n          break;\n        case \"Number\":\n          //get text question template and compile it.\n          questionTemplate = templates.question_number;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\n\n          break;\n        case \"MultilineText\":\n          //get text question template and compile it.\n          questionTemplate = templates.question_multi_line_text;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\n\n          break;\n        case \"MultiSelect\":\n          let acTemplate: string;\n          let multiSelect1;\n          //get text question template and compile it.\n          multiSelect1 = Array.prototype.slice.call(LanguageTextFilter.translateMultiSelect(this, question));\n          if (question.presentationMode == 'Invert') {\n            // console.log('selection option before reverse', multiSelect1);\n            multiSelect1.reverse();\n            // console.log('selection option after reverse', multiSelect1);\n            // console.log('selection api option', question.multiSelect);\n          }\n          //get text question template and compile it.\n          if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(multiSelect1);\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\n            if (checkOptionContainsImage\n              && (\n                ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Male\"))\n                || ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Yes\"))\n                || ((multiSelect1.length > 1) && multiSelect1[1].includes(\"Yes\")))\n              \n            ) {\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate = templates.question_checkbox;\n              let options2 = self.util.generateCheckboxImageOptions(multiSelect1, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n              acTemplate = questionTemplate;\n            }else if(checkOptionContainsImage){\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate = templates.question_checkbox;\n              let options2 = self.util.generateCheckboxIgnoreImageOptions(multiSelect1, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n              acTemplate = questionTemplate;\n            } else {\n              let options3: string = self.util.generateCheckboxOptions(multiSelect1, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              acTemplate = templates.question_checkbox;\n              questionTemplate = acTemplate.replace(/{{options}}/g, options3);\n              acTemplate = questionTemplate;\n            }\n          } else {\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\n            acTemplate = templates.question_multi_select;\n\n            // acTemplate = templates.question_select;\n            let options3 = self.util.generateSelectOptions(multiSelect1);\n\n            if (!self.ccsdk.config.language.includes('Default')) {\n              if (\n                typeof question.translated !== 'undefined'\n                && question.translated != null\n                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect.length > 0\n              ) {\n                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\n                if (question.presentationMode == 'Invert') {\n                  multiSelect1.reverse();\n                }\n                options3 = self.util.generateSelectOptions(multiSelect1);\n              }\n            }\n            // questionTemplate = acTemplate;\n            self.ccsdk.debug ? console.log(options3) : '';\n            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\n            acTemplate = questionTemplate;\n\n          }\n          questionTemplate = acTemplate;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n\n          break;\n        case \"Select\":\n          let acTemplate1: string;\n          let acTemplate2: string;\n          let options1: string;\n          let options2: string;\n          let multiSelect;\n          //get text question template and compile it.\n          multiSelect = Array.prototype.slice.call(LanguageTextFilter.translateMultiSelect(this, question));\n          if (question.presentationMode == 'Invert') {\n            // console.log('selection option before reverse', multiSelect);\n            multiSelect.reverse();\n            // console.log('selection option after reverse', multiSelect);\n            // console.log('selection api option', question.multiSelect);\n          }\n          if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\n            // if(question.displayStyle == 'radiobutton/checkbox'){\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\n            // acTemplate1 = templates.question_radio;\n            // questionTemplate = acTemplate1;\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(multiSelect);\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\n            if (checkOptionContainsImage \n              && (\n                  ((multiSelect.length > 0) && multiSelect[0].includes(\"Male\") )\n                || ((multiSelect.length > 0) &&multiSelect[0].includes(\"Yes\") )\n                || ((multiSelect.length > 1) &&multiSelect[1].includes(\"Yes\")))\n            ) {\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate2 = templates.question_radio_image;\n              options2 = self.util.generateRadioImageOptions(multiSelect, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate2;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n            }else if(checkOptionContainsImage){\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate2 = templates.question_radio_image;\n              options2 = self.util.generateRadioIgnoreImageOptions(multiSelect, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate2;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n            } else {\n              acTemplate1 = templates.question_radio;\n              questionTemplate = acTemplate1;\n              options1 = self.util.generateRadioOptions(multiSelect, question.id);\n              questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\n            }\n          } else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\n            acTemplate1 = templates.question_radio;\n            questionTemplate = acTemplate1;\n            options1 = self.util.generateRadioOptions(multiSelect, question.id);\n            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\n\n          } else {\n\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\n            acTemplate1 = templates.question_select;\n            options1 = self.util.generateSelectOptions(multiSelect);\n            if (!self.ccsdk.config.language.includes('Default')) {\n              if (typeof question.translated !== 'undefined'\n                && question.translated != null\n                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect.length > 0\n              ) {\n                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\n                if (question.presentationMode == 'Invert') {\n                  multiSelect.reverse();\n                }\n                options1 = self.util.generateSelectOptions(multiSelect);\n              }\n            }\n            questionTemplate = acTemplate1;\n            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\n\n\n          }\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\n\n          break;\n        case \"Smile-5\":\n          //get text question template and compile it.\n          if (question.presentationMode == \"Invert\") {\n            questionTemplate = templates.question_smile_5_inverted;\n\n          } else {\n\n            questionTemplate = templates.question_smile_5;\n          }\n          // let startRangeLabel = \"Very unlikely\";\n          // let endRangeLabel = \"Very likely\";\n          let startRangeLabel = \"\";\n          let endRangeLabel = \"\";\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend(this, question);\n          \n          if (displayLegend2) {\n            if (displayLegend2.length > 0) {\n              startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\n              endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\n            }\n          }\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\n          questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\n          break;\n        case \"Star-5\":\n          //get text question template and compile it.\n          let startRangeLabel1 = \"\";\n          let endRangeLabel1 = \"\";\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend(this, question);\n          \n          if (displayLegend3) {\n            if (displayLegend3.length > 0) {\n              startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\n              endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\n            }\n          }\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\n          questionTemplate = templates.question_star_5;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\n          questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\n          break;\n      }\n    }\n    return questionTemplate;\n  }\n\n  questionCompare(a: any, b: any) {\n    return a.sequence - b.sequence;\n  }\n  \n  getAnswerTypeFromDisplayType(displayType: string) {\n    // console.log('question type',displayType);\n    let type: string;\n    switch (displayType) {\n      case \"Slider\":\n        type = \"number\";\n        break;\n      case \"Scale\":\n        type = \"number\";\n        break;\n      case \"Text\":\n        type = \"text\";\n        break;\n      case \"Number\":\n        type = \"number\";\n        break;\n      case \"MultilineText\":\n        type = \"text\";\n        break;\n      case \"MultiSelect\":\n        type = \"text\";\n        break;\n      case \"Select\":\n        type = \"text\";\n        break;\n      case \"Smile-5\":\n        type = \"number\";\n        break;\n      case \"Star-5\":\n        type = \"number\";\n        break;\n      default:\n        type = \"text\";\n        break;\n    }\n\n    return type;\n  }\n\n  /**\n   *\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\n   *  isRetired = true\n   *  statffFill = true\n   *  apiFill = true\n   *  preFill = true\n   *\n   * @param {any} question\n   * @returns\n   * @memberof Survey\n   */\n  filterQuestions() {\n    let self = this;\n    for (let question of this.questions) {\n      if (!question.isRetired) {\n        //filter out prefill question only if it is filled?.\n        // if(!this.isQuestionFilled(question)){\n        if (this.isPrefillTags(question)) {\n          self.ccsdk.debug ? console.log('prefillTags',this.prefillResponses) : '';\n          continue;\n        }\n        if (this.isPrefillNote(question)){\n          self.ccsdk.debug ? console.log(this.prefillResponses) : '';\n          continue;\n        }\n        if (this.isPrefillDirect(question)) {\n          self.ccsdk.debug ? console.log(this.prefillResponses) : '';\n          continue;\n        }\n        if (!(this.isPrefillQuestion(question))) {\n\n          // if (this.isPrefillTags(question)) {\n          //   self.ccsdk.debug ? console.log(this.prefillResponses) : '';\n          //   continue;\n          // }\n          if (\n            question.conditionalFilter != null &&\n            (question.conditionalFilter.filterquestions == null\n              || question.conditionalFilter.filterquestions.length == 0)\n          ) {\n            //check supported display types\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\n            if(supportedDisplayTypes.indexOf(question.displayType) > -1){\n              this.questionsToDisplay.push(question);\n            }\n          } else {\n            //if conditions full filled, fill it in questionsToDisplay\n            if(ConditionalFlowFilter.filterQuestion(this, question)) {\n               //auto does that\n            } else {\n              this.conditionalQuestions.push(question);\n            }\n          }\n        } else {\n          this.fillPrefillWithTags(question);\n          this.fillPrefillWithNote(question);\n          ConditionalFlowFilter.filterQuestion(this, question);\n        }\n        // }\n      }\n    }\n    //re condition questions.\n    for(let question of this.questions) {\n      ConditionalFlowFilter.filterQuestion(this, question);\n    }\n\n    // console.log(this.conditionalQuestions);\n  }\n\n  isPrefillTags(question: any) {\n    if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\n      for (let tag of question.questionTags) {        \n        switch (tag.toLowerCase()) {\n          case \"screensize\":\n            //add size to prefill array\n            this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\n            return true;\n          default :\n            console.log(\"isPrefillTags\", typeof this.prefillWithTags[tag.toLowerCase()]);\n            if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined'  ){\n              let type = this.getAnswerTypeFromDisplayType(question.displayType);\n              this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\n              return true;\n            }\n        }\n      }\n    }\n    return false;\n  }\n  isPrefillNote(question:any){\n    if (typeof question.note !== 'undefined' \n    && question.note != null \n    && question.note.length > 0\n    && this.prefillWithNote[question.note.toLowerCase()]\n  ) {\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\n      this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()] ,type);\n      return true;\n    }\n    return false;\n  }\n\n  isPrefillDirect(question: any) {\n    if (typeof question !== 'undefined'\n      && this.prefillDirect[question.id]\n    ) {\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\n      this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\n      return true;\n    }\n    return false;\n  }\n\n  fillPrefillWithTags(question: any) {\n    (window as any).ccsdkDebug ? console.log('fillprefillwithtags',this.prefillWithTags):'';\n    if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\n      for (let tag of question.questionTags) {\n        (window as any).ccsdkDebug ? console.log('fillprefillwithtags', tag):'';\n        if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {    \n          (window as any).ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()],this.prefillWithTags):'';\n           \n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\n          this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\n        }\n      }\n    }\n  }\n\n  fillPrefillWithNote(question: any){\n    if (typeof question.note !== 'undefined' && question.note!= null && question.note.length > 0) {\n        if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\n          this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\n        }\n    }\n  }\n\n\n\n  getConditionalSurveyQuestions(): any {\n    return this.conditionalQuestions;\n  }\n\n  isPrefillQuestion(question: any) {\n    if (question.apiFill == true) {\n      return true;\n    }\n    if (question.staffFill == true) {\n      return true;\n    }\n    return false;\n  }\n\n  isQuestionFilled(question: any) {\n    for (let response of this.prefillResponses) {\n      if (response.questionId == question.questionId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  removePrevListener(id: string): boolean {\n    for (let listener of this.domListeners) {\n      if (listener.id == id) {\n        let index = this.domListeners.indexOf(listener);\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : '';\n        (window as any).ccsdkDebug ? console.log(\"removing listener index\", index) : '';\n        this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\n        if (index > -1) {\n          this.domListeners.splice(index, 1);\n        }\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : '';\n      }\n    }\n    return true;\n  }\n\n  destroySurvey() {\n    let self: SurveyHandler = this;\n    document.addEventListener('ccclose', this.destroySurveyCb);\n  }\n\n  destroy() {\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\n    if (typeof surveyContainer != 'undefined') {\n      this.util.remove(surveyContainer);\n    }\n    if (typeof welcomeContainer != 'undefined') {\n      this.util.remove(welcomeContainer);\n    }\n    document.removeEventListener('ccclose', this.destroySurveyCb);\n    document.removeEventListener('ccdone', this.displayThankYouCb);\n    document.removeEventListener('q-answered', this.acceptAnswersCb);\n    (window as any).globalSurveyRunning = false;\n    let bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n    this.util.removeClass(bodyElement, \"blurr\");\n\n  }\n}\n\nexport { SurveyHandler };\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 13\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/rtl-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul{padding-right:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{margin-left:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;right:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;left:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-left:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px}.cc-sdk .form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-sdk .cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:right}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-left:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:left;bottom:9px;left:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:767px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-left:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-right:0}.cc-sdk .submit-icon{margin-left:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.cc-sdk .radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-right:15px}.cc-sdk .cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-sdk .cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{margin-right:0}.cc-sdk .submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-sdk.cc-popup-container{position:fixed;top:0;right:0;left:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-question-container__required-label{display:block;right:0;top:2px}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] .cc-sdk ul{padding-left:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}html[dir=rtl] .cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .cc-sdk.cc-question-container{margin-right:147px;margin-left:0;left:0;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__required,html[dir=rtl] .cc-sdk .cc-question-container__validation{left:0;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__required-label{top:-2px;left:-2px;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}html[dir=rtl] .cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}html[dir=rtl] .cc-sdk .cc-question-container:before{margin-right:-4px;margin-left:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0 0 0 50px}html[dir=rtl] .cc-sdk .hl.dropdown{background-position:3%;text-align:left}html[dir=rtl] .cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-sdk .cc-nps-image{right:31px}html[dir=rtl] .cc-sdk .cc-question-container__content{text-align:left}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-sdk .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-sdk .cc-question-container__list{text-align:left}html[dir=rtl] .cc-sdk .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .cc-question-container__text{padding-right:20px;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:767px){html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}html[dir=rtl] .cc-sdk .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container{right:auto;left:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0}html[dir=rtl] .cc-sdk .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container__list li{padding-right:0;padding-left:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.left-icon{right:0;left:auto}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.right-icon{left:0;right:auto}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.cc-sdk .option-number-item{color:#fff;float:right;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-seven{margin-right:4px}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-right:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;right:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-left-rating-text-small-container-smile{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:7px;bottom:-12px}.cc-sdk .option-right-rating-text{right:auto;left:5px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:36px;bottom:-12px}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk .option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.one.selected,.cc-sdk .option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two.selected,.cc-sdk .option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three.selected,.cc-sdk .option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four.selected,.cc-sdk .option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five.selected,.cc-sdk .option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-right:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.cc-sdk .option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;top:-10px;text-align:right;width:100%}.cc-sdk .option-csat .cc-checkbox{top:8px}.cc-sdk .option-csat .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:4px}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-left:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:16px}}@media (max-width:767px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-right:74px;top:0}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:19px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:right;font-size:15px;height:35px;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;right:0}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-number-item{margin-left:1px;margin-right:0;float:left}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}html[dir=rtl] .cc-sdk .option-right-rating-text{right:calc(100% - 418px);left:auto!important}html[dir=rtl] .cc-sdk .option-left-rating-text{left:0;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:8px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}html[dir=rtl] .cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{right:0}html[dir=rtl] .cc-sdk .rating-color{position:relative}html[dir=rtl] .cc-sdk .option-smile-box img{margin-left:29px;margin-right:0}html[dir=rtl] .cc-sdk .option-star-box img{margin-right:19px;margin-left:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:35px;right:auto!important}html[dir=rtl] .cc-sdk .option-csat{width:auto;padding-right:0;margin-left:13px}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 19px)) 50%;text-align:left}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{margin-right:0;margin-left:10px}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 30px)) 50%}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .cc-sdk .option-left-rating-text{left:10px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}html[dir=rtl] .cc-sdk .option-right-rating-text{right:calc(100% - 322px);left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .cc-sdk .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-right:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-right:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-sdk .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}html[dir=rtl] .cc-sdk .cc-select-trigger:after{top:50%;right:2px;left:auto}html[dir=rtl] .cc-sdk .cc-select-option{text-align:left}html[dir=rtl] .cc-sdk .cc-select-option:first-of-type{border-radius:0 4px 4px 0}html[dir=rtl] .cc-sdk .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-sdk .cc-checkbox{display:table-cell;position:relative;text-align:right;vertical-align:middle}.cc-sdk .cc-checkbox label{cursor:pointer}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{bottom:0;content:\\\"\\\";right:0;margin:auto;position:absolute;top:0}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{margin-left:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;right:4px;top:-3px;transform:rotate(45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{margin-left:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:15px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:10px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:0;display:inline-block;padding-left:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .range{-webkit-appearance:none;-moz-appearance:none;width:500px}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.range-slider{height:50px;padding-top:9px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .range{width:100%}}.cc-sdk input.range.blue::-moz-range-track,.cc-sdk input.range.blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .chart canvas{right:0;position:absolute;top:0}.cc-sdk .loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.cc-sdk .chart canvas{margin-right:10px}}@media (max-width:767px){.cc-sdk .loader{position:relative;right:auto;top:0;left:auto}}html[dir=rtl] .cc-sdk .chart canvas{left:0;right:auto}html[dir=rtl] .cc-sdk .loader{left:28px;right:auto}@media (min-width:767px){html[dir=rtl] .cc-sdk .chart canvas{margin-left:10px;margin-right:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{left:0}.left{right:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.cc-sdk .form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;right:auto;top:0;left:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .cc-sdk .submit-icon{right:0;left:auto;margin-right:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .cc-sdk .submit-icon{position:absolute;left:30px;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-sdk .red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.hide-left-right{-webkit-transform:translateX(100%);transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}html[dir=rtl] .cc-sdk svg.timer{left:0;right:auto}.cc-sdk svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\" : \".cc-sdk ul{padding-left:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{margin-right:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;left:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;right:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-right:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px}.cc-sdk .form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-sdk .cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:left}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-right:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:right;bottom:9px;right:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:767px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-right:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-left:0}.cc-sdk .submit-icon{margin-right:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.cc-sdk .radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-left:15px}.cc-sdk .cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-sdk .cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.cc-sdk .detail-box .cc-question-container__content .form-control,.cc-sdk .single-line .cc-question-container__content .form-control{margin-left:0}.cc-sdk .submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-sdk.cc-popup-container{position:fixed;top:0;left:0;right:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-question-container__required-label{display:block;left:0;top:2px}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] .cc-sdk ul{padding-right:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}html[dir=rtl] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}html[dir=rtl] .cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .cc-sdk.cc-question-container{margin-left:147px;margin-right:0;right:0;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__required,html[dir=rtl] .cc-sdk .cc-question-container__validation{right:0;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__required-label{top:-2px;right:-2px;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}html[dir=rtl] .cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}html[dir=rtl] .cc-sdk .cc-question-container:before{margin-left:-4px;margin-right:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0 50px 0 0}html[dir=rtl] .cc-sdk .hl.dropdown{background-position:97%;text-align:right}html[dir=rtl] .cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-sdk .cc-nps-image{left:31px}html[dir=rtl] .cc-sdk .cc-question-container__content{text-align:right}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-sdk .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-sdk .cc-question-container__list{text-align:right}html[dir=rtl] .cc-sdk .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .cc-question-container__text{padding-left:20px;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:767px){html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}html[dir=rtl] .cc-sdk .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}html[dir=rtl] .cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-sdk .cc-question-container{left:auto;right:0}html[dir=rtl] .cc-sdk .multiline-box{margin:0}html[dir=rtl] .cc-sdk .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}html[dir=rtl] .cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container__list li{padding-left:0;padding-right:0}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.left-icon{left:0;right:auto}html[dir=rtl] .cc-sdk .cc-popup-container-2__icons.right-icon{right:0;left:auto}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.cc-sdk .option-number-item{color:#fff;float:left;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-sdk .cc-question-container[data-type=nps] .option-number-item.option-seven{margin-left:4px}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-left:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;left:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto;top:45px}.cc-sdk .option-left-rating-text-small-container-smile{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:7px;bottom:-12px}.cc-sdk .option-right-rating-text{left:auto;right:5px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:36px;bottom:-12px}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk .option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.one.selected,.cc-sdk .option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.two.selected,.cc-sdk .option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.three.selected,.cc-sdk .option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.four.selected,.cc-sdk .option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.five.selected,.cc-sdk .option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-left:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.cc-sdk .option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;top:-10px;text-align:left;width:100%}.cc-sdk .option-csat .cc-checkbox{top:8px}.cc-sdk .option-csat .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:4px}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-right:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:16px}}@media (max-width:767px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-left:74px;top:0}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:19px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:left;font-size:15px;height:35px;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;left:0}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-number-item{margin-right:1px;margin-left:0;float:right}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}html[dir=rtl] .cc-sdk .option-right-rating-text{left:calc(100% - 418px);right:auto!important}html[dir=rtl] .cc-sdk .option-left-rating-text{right:0;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:8px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}html[dir=rtl] .cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{left:0}html[dir=rtl] .cc-sdk .rating-color{position:relative}html[dir=rtl] .cc-sdk .option-smile-box img{margin-right:29px;margin-left:0}html[dir=rtl] .cc-sdk .option-star-box img{margin-left:19px;margin-right:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:35px;left:auto!important}html[dir=rtl] .cc-sdk .option-csat{width:auto;padding-left:0;margin-right:13px}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 19px) 50%;text-align:right}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{margin-left:0;margin-right:10px}html[dir=rtl] .cc-sdk .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .cc-sdk .option-smile-box img,html[dir=rtl] .cc-sdk .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}html[dir=rtl] .cc-sdk .option-csat.option-smile-box,html[dir=rtl] .cc-sdk .option-csat.option-smile-box.selected,html[dir=rtl] .cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 30px) 50%}html[dir=rtl] .cc-sdk .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .cc-sdk .option-left-rating-text{right:10px;left:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}html[dir=rtl] .cc-sdk .option-right-rating-text{left:calc(100% - 322px);right:auto!important}html[dir=rtl] .cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .cc-sdk .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-left:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-left:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-sdk .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}html[dir=rtl] .cc-sdk .cc-select-trigger:after{top:50%;left:2px;right:auto}html[dir=rtl] .cc-sdk .cc-select-option{text-align:right}html[dir=rtl] .cc-sdk .cc-select-option:first-of-type{border-radius:4px 0 0 4px}html[dir=rtl] .cc-sdk .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-sdk .cc-checkbox{display:table-cell;position:relative;text-align:left;vertical-align:middle}.cc-sdk .cc-checkbox label{cursor:pointer}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{bottom:0;content:\\\"\\\";left:0;margin:auto;position:absolute;top:0}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{margin-right:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;left:4px;top:-3px;transform:rotate(-45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{margin-right:10px;opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:15px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:10px}.cc-sdk .radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:0;display:inline-block;padding-right:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .range{-webkit-appearance:none;-moz-appearance:none;width:500px}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.range-slider{height:50px;padding-top:9px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .range{width:100%}}.cc-sdk input.range.blue::-moz-range-track,.cc-sdk input.range.blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .chart canvas{left:0;position:absolute;top:0}.cc-sdk .loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.cc-sdk .chart canvas{margin-left:10px}}@media (max-width:767px){.cc-sdk .loader{position:relative;left:auto;top:0;right:auto}}html[dir=rtl] .cc-sdk .chart canvas{right:0;left:auto}html[dir=rtl] .cc-sdk .loader{right:28px;left:auto}@media (min-width:767px){html[dir=rtl] .cc-sdk .chart canvas{margin-right:10px;margin-left:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{right:0}.left{left:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.cc-sdk .form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;left:auto;top:0;right:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .cc-sdk .submit-icon{left:0;right:auto;margin-left:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .cc-sdk .submit-icon{position:absolute;right:30px;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-sdk .red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(5px);transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(100%);transform:translateX(100%)}.hide-left-right{-webkit-transform:translateX(-100%);transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}html[dir=rtl] .cc-sdk svg.timer{right:0;left:auto}.cc-sdk svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader!./node_modules/sass-loader/lib/loader.js!./src/css/main.scss\n// module id = 14\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 15\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 16\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 17\n// module chunks = 0","module.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id={{surveyToken}}-survey> <div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\"> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-popup-container-2__icons cc-left-icon\\\"> <span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span> <ul class=loader> <li class=chart data-percent=75></li> </ul> </div> <div class=\\\"cc-popup-container-2__icons cc-right-icon\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\"> </div> <div class=cc-survey-container> <div class=cc-survey-content> <div class=cc-questions-container> </div> </div> <div class=\\\"submit-icon act-cc-button-next\\\"></div> <div class=\\\"{{location}} progress-bar\\\" id=progressBar> <span class=progress-line id=progress-line></span> </div> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/Survey.html\n// module id = 18\n// module chunks = 0","module.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id={{surveyToken}}-welcome> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-loaderimg hide\\\"> <svg version=1.1 id=L9 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=preserve> <path fill=red d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\"> <animateTransform attributeName=transform attributeType=XML type=rotate dur=1s from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=indefinite /> </path> </svg> </div> <svg class=timer> <circle r=8 cx=20 cy=20 stroke=black stroke-width=0 fill=red></circle> </svg> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\"> <div class=cc-message-box> <h2 class=cc-message-box__text>{{question}}</h2> <a href=javascript:void(0) class=\\\"cc-message-box__btn act-cc-survey-start mobile-hide\\\" id=\\\"\\\">{{button}}</a> <div class=\\\"submit-icon act-cc-survey-start desktop-hide\\\"></div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionStart.html\n// module id = 19\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=singleline data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSingleline.html\n// module id = 20\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=number data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionNumber.html\n// module id = 21\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=multiline data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <textarea class=\\\"multiline-box form-control\\\" id={{questionId}} placeholder=\\\"Share your thoughts...\\\"></textarea> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionMultiline.html\n// module id = 22\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=checkbox data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-big-list-container\\\" id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionCheckbox.html\n// module id = 23\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=radio data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionRadio.html\n// module id = 24\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--more-option\\\" data-required={{isRequired}} data-type=radioMore data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-one> <label class=\\\"ui checkbox\\\" for=service-one></label> </div> <span><label for=service-one>Learn more about a product</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-two> <label class=\\\"ui checkbox\\\" for=service-two></label> </div> <span><label for=service-two>Troubleshoot an error</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-three> <label class=\\\"ui checkbox\\\" for=service-three></label> </div> <span><label for=service-three>Understand a product</label></span> </li> </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionRadioMore.html\n// module id = 25\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required={{isRequired}} data-type=radioImage data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionRadioImage.html\n// module id = 26\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=scale data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id={{questionId}}> <div class=cc-question-container__list> {{optionsRange}} <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=0 title=0 href=# class=option-number-item data-rating=0 coords=83,193,62,228,38,212,23,193,57,167 shape=poly> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=54,165,21,189,11,173,4,154,2,140,43,134 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=43,131,2,135,1,118,5,93,8,83,45,97 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=48,92,10,78,17,61,28,44,39,32,66,66 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=70,61,42,30,55,20,70,14,91,5,101,45 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=105,44,92,5,113,2,134,3,147,5,139,46 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=141,46,150,6,169,11,184,19,200,30,172,63 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=175,63,202,34,218,48,227,66,232,78,194,93 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=196,97,233,81,239,103,240,118,240,135,199,130 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=199,135,240,140,236,159,229,175,221,189,187,167 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=183,169,217,191,204,212,178,229,158,192 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map2 /> <map name=Map2 id=Map2> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=67,180,40,210,26,195,15,176,11,169,47,152 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=48,149,9,163,2,140,1,124,3,110,45,115 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=44,110,4,105,8,79,17,67,22,57,58,79 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=58,76,24,54,33,39,48,29,65,18,85,54 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=87,51,68,15,85,7,106,3,120,3,122,45 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=123,42,123,0,141,2,163,8,176,14,157,52 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=159,53,180,16,201,30,212,44,220,54,186,77 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=188,80,222,55,229,69,236,83,241,108,199,111 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=200,116,239,112,241,128,240,146,234,165,196,150 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=193,153,233,168,225,187,212,202,202,212,175,181 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text {{optionLeftExtraClass}}\\\" style=max-width:maxWidth>{{leftLabel}}</span> <span class=\\\"option-right-rating-text {{optionRightExtraClass}}\\\" style=max-width:maxWidth>{{rightLabel}}</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> {{style}} \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionScale.html\n// module id = 27\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Agree</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Agree</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Agree</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Disagree</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Disagree</span> </span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionCSATAgreement5.html\n// module id = 28\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Extremely Satisfied</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Satisfied</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Satisfied</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Dissatisfied</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Dissatisfied</span> </span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionCSATSatisfaction5.html\n// module id = 29\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=nps data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id={{questionId}}> <div class=cc-question-container__list> <div class=cc-options-container> <span data-rating=0 class=\\\"option-number-item mobile-hide option-zero\\\">0</span> <span data-rating=1 class=\\\"option-number-item mobile-hide option-one\\\">1</span> <span data-rating=2 class=\\\"option-number-item mobile-hide option-two\\\">2</span> <span data-rating=3 class=\\\"option-number-item mobile-hide option-three\\\">3</span> <span data-rating=4 class=\\\"option-number-item mobile-hide option-four\\\">4</span> <span data-rating=5 class=\\\"option-number-item mobile-hide option-five\\\">5</span> <span data-rating=6 class=\\\"option-number-item mobile-hide option-six\\\">6</span> <span data-rating=7 class=\\\"option-number-item mobile-hide option-seven\\\">7</span> <span data-rating=8 class=\\\"option-number-item mobile-hide option-eight\\\">8</span> <span data-rating=9 class=\\\"option-number-item mobile-hide option-nine\\\">9</span> <span data-rating=10 class=\\\"option-number-item mobile-hide option-ten\\\">10</span> <div class=\\\"circle-image desktop-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/circle.svg class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=0 coords=86,199,61,177,25,201,38,219,52,230,66,238 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=1 coords=59,173,22,198,12,180,5,160,4,146,44,138 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=2 coords=44,134,49,101,8,84,3,98,0,116,2,141 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=3 coords=49,97,71,68,42,33,25,54,14,71,10,81 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=4 coords=74,65,106,47,94,5,70,14,46,31 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=5 coords=144,47,154,4,135,1,114,1,98,4,108,48 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=6 coords=149,48,157,5,183,15,209,30,180,65 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=7 coords=183,67,211,34,231,56,243,79,204,97 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=8 coords=203,100,245,85,251,106,252,124,251,141,207,135 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=9 coords=208,140,251,146,245,169,231,197,194,172 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=10 coords=193,179,229,201,218,218,202,230,185,238,166,200 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text mobile-hide\\\">Not at all likely</span> <span class=\\\"option-right-rating-text mobile-hide\\\">Very likely</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionNPS.html\n// module id = 30\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSelect.html\n// module id = 31\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select data-type=multiple> {{options}} </select> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionMultiSelect.html\n// module id = 32\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=max-width:200px>{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=max-width:200px>{{rightLabel}}</span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSmile.html\n// module id = 33\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=option-right-rating-text>{{leftLabel}}</span> <span class=option-left-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSmileInverted.html\n// module id = 34\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=star data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=option-star-box data-rating=1></span> <span class=option-star-box data-rating=2></span> <span class=option-star-box data-rating=3></span> <span class=option-star-box data-rating=4></span> <span class=option-star-box data-rating=5></span> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=max-width:200px>{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=max-width:200px>{{rightLabel}}</span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionStar.html\n// module id = 35\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-required={{isRequired}} data-type=slider data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color range-slider\\\" id={{questionId}}> <div class=cc-question-container__slider> <input type=range name=\\\"\\\" value={{min}} min={{min}} max={{max}} class=\\\"range blue\\\"> <span class=option-left-rating-text>{{minLabel}}{{min}}</span> <span class=option-right-rating-text>{{maxLabel}}{{max}}</span> <span class=\\\"slider-tip act-slider-tip\\\"></span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSlider.html\n// module id = 36\n// module chunks = 0","module.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-img-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-img-service-{{labelFor}}></label> </div> <span><label for={{qId}}-img-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\"><img src={{image}} /> {{label}}</label></span> </li> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionRadioImage.html\n// module id = 37\n// module chunks = 0","module.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-service-{{labelFor}}></label> </div> <span><label for={{qId}}-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label></span> </li>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionRadio.html\n// module id = 38\n// module chunks = 0","module.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}>{{label}}</label></span> </li>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionCheckbox.html\n// module id = 39\n// module chunks = 0","module.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}><img src={{image}} /> {{label}}</label></span> </li> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionCheckboxImage.html\n// module id = 40\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=cc-thankyou-container> <div class=cc-question-container__text> <p>{{question}}</p> <p class=cc-thankyou-powered><span class=cc-thankyou-logo></span>Delight powered by Cloudcherry</p> </div> <div class=cc-question-container__content> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/ThankYou.html\n// module id = 41\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"><span class=cc-question-container__required-label></span>Select language</p> <span class=cc-question-container__required>* Mandatory</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/LanguageSelector.html\n// module id = 42\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nclass ConditionalTextFilter {\r\n  public static filterText(surveyHandler : any, question : any) : string {\r\n      let conditionaText = question.text == null ? '' : LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n      if(question.text != null){\r\n          let conditionaText : string = question.text.split(':');\r\n          if(question.text.includes(\":\")){\r\n              conditionaText = conditionaText[0] + ': <br><span class=\"text-normal\">'+conditionaText[1]+'</span>';\r\n          } else {\r\n              conditionaText = conditionaText[0];\r\n          }\r\n        }\r\n          if (question.leadingDisplayTexts == null) {\r\n            conditionaText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n              return conditionaText;\r\n          } else if (question.leadingDisplayTexts.length == 0) {\r\n              conditionaText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n              return conditionaText;\r\n          } else {\r\n              for (let fOption of question.leadingDisplayTexts) {\r\n                  if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                      let iSatisfied : boolean = false;\r\n                      let iFailed : boolean = false;\r\n                      for (let filterByQuestion of fOption.filter.filterquestions) {\r\n                          if (ConditionalTextFilter.isAnd(filterByQuestion)) {\r\n                              if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                  iSatisfied = true;\r\n                              } else {\r\n                                  iFailed = true;\r\n                                  break;\r\n                              }\r\n                          } else if (ConditionalTextFilter.isOr(filterByQuestion)) {\r\n                              if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                  iSatisfied = true;\r\n                                  break;\r\n                              }\r\n                          }\r\n      \r\n                      }\r\n                      if (iSatisfied && !iFailed) {\r\n                          conditionaText = fOption.text;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      \r\n          return conditionaText;\r\n\r\n\r\n  }\r\n\r\n  private static isAnd(filterQuestion : any) : boolean {\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isOr(filterQuestion : any) : boolean {\r\n      if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  private static isNumberCheck(filterQuestion : any) : boolean  {\r\n    if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static doesSatisfy(surveyHandler : any, filterQuestion : any) : boolean {\r\n    if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        } else if (filterQuestion.answerCheck[0].toLowerCase() == \"gt\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        } else if (filterQuestion.answerCheck[0].toLowerCase() == \"eq\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    } else {\r\n        let iFoundAll : boolean = false;\r\n        for (let aAnswer of filterQuestion.answerCheck) {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                    iFoundAll = true;\r\n                    break;\r\n                } else {\r\n                    iFoundAll = false;\r\n                    break;\r\n                }\r\n        }\r\n        if (iFoundAll)\r\n            return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\n// import { ScrollBar } from './ScrollBar';\nimport { Select } from './Select';\nimport { Theme } from './Theme';\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\nimport { Slider } from \"./Slider\";\nimport { Constants } from \"../../Constants\";\nimport { setInterval } from 'timers';\n\nclass DomSurvey{\n\n  util : DomUtilities;\n  // scrollbar : ScrollBar;\n  domListeners: any;\n  select : Select;\n  theme : Theme;\n  qIndex : number;\n  currentQuestionId : string;\n  $questionContainer : any;\n  $innerQuestionContainer : any;\n  $popupContainer : any;\n  $popupContainer2 : any;\n  $body : any;\n  qResponse : any;\n  trackSelects : any = [];\n  trackRadios : any = [];\n  ccsdk : any;\n  currentQuestionListeners : any = [];\n  trackSetupListeners:any;\n  $startBtn : any;\n  bodyElement : any;\n  \n\n  constructor(ccsdk : any){\n    let self : DomSurvey = this;\n    this.domListeners = [];\n    this.ccsdk = ccsdk;\n  \tthis.qIndex = 0;\n    this.qResponse = {};\n    this.domSelectElements();\n    this.util = new DomUtilities()\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\n    this.util.ready(function(){\n  \t   // self.util.addClassAll(self.$popupContainer,'show-slide');\n    });\n  }\n\n  setTheme(brandColor, time){\n    let self : DomSurvey = this;\n    this.util.ready(function(){\n      self.theme = new Theme(brandColor, time);\n    });\n  }\n\n  setQIndex( index : number){\n    this.qIndex = index;\n  }\n\n  getQindex(){\n    return this.qIndex;\n  }\n\n  domSelectElements(){\n    this.$questionContainer = document.\n     querySelectorAll(\".cc-questions-container\");\n  \tthis.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\n  \tthis.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\n  \tthis.$body = document.querySelectorAll(\"body\")[0];\n    // this.select = new Select();\n\n  }\n\n\n\n removePrevListener(id : string) : boolean {\n    for(let listener of this.domListeners) {\n      if(listener.id == id) {\n        let index = this.domListeners.indexOf(listener);\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : '';\n        (window as any).ccsdkDebug?console.log(\"removing listener index\",index ):'';\n        this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n          if (index > -1) {\n            this.domListeners.splice(index, 1);\n          }\n        (window as any).ccsdkDebug?console.log(this.domListeners):'';\n      }\n    }\n    return true;\n  }\n\n  setupListeners(){\n    let self = this;\n    let startSurvey = this.util.initListener(\"click\",\".act-cc-survey-start\", function() {\n      if((!self.util.hasClass(self.$startBtn, 'disabled')) && ( self.ccsdk.surveyStatus != 'minimized')){\n        let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n        document.dispatchEvent(onSurveyClickEvent);\n        self.util.addClass(self.$startBtn, 'disabled');\n        self.showLoader();\n        self.startSurvey();\n      }else{\n        self.initSurveyDom();\n      }\n    });\n    this.domListeners.push(startSurvey);    \n    \n\n    startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\n\n    let nextQue = this.util.initListener( \"click\",\".act-cc-button-next\", function(){\n      // alert(\"working\");\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      self.nextQuestion();\n    });\n    this.domListeners.push(nextQue);    \n    \n    nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\n\n    let prevQue = this.util.initListener( \"click\",\".act-cc-button-prev\", function(){\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      self.prevQuestion();\n    });\n    this.domListeners.push(prevQue);    \n    \n    prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\n\n    let closeSurvey = this.util.initListener( \"click\",\".act-cc-button-close\", function(){\n      let onSurveyCloseEvent = new CustomEvent(Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyCloseEvent);\n      self.ccsdk.survey.answers = {};\n      self.trackSelects = [];\n      self.destroyListeners();\n      self.util.trigger(document, 'ccclose', undefined);\n      self.bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n        self.util.removeClass( self.bodyElement, \"blurr\" )\n      self.ccsdk.survey.destroy();\n      \n    });\n    this.domListeners.push(closeSurvey);    \n    \n\n    closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\n\n    let minSurvey = this.util.initListener( \"click\",\".act-cc-button-minimize\", function(){\n      self.minimizeSurvey();\n    });\n    this.domListeners.push(minSurvey);    \n    \n\n    minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\n  }\n\n\n  minimizeSurvey(){\n    // this.$popupContainer[0].removeClass('');\n    this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\n    this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\n    setTimeout(()=>{\n      this.util.removeClass(this.$popupContainer2[0], 'show-slide');\n    },200);\n    this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\n    this.util.addClass(this.$popupContainer[0], 'hide-right-left');\n    setTimeout(()=>{\n      this.util.addClass(this.$popupContainer[0], 'show-slide');\n    },200);\n    this.ccsdk.surveyStatus = 'minimized';\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume' ;\n    this.$startBtn.innerHTML = resumeText;\n    this.util.removeClass(this.$startBtn, 'disabled');\n    \n    //update all start btns\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\n    //   el.innerHTML = resumeText;\n    // });\n\n  }\n\n  destroyListeners(){\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\n    for(let listener of this.domListeners) {\n      this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n    }\n    for (let listener of this.ccsdk.survey.domListeners) {\n      this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n    }\n    if (this.ccsdk.survey.languageSelect) {\n      this.ccsdk.survey.languageSelect.destroyListeners();\n    }\n    if(this.select){\n      this.select.destroyListeners();\n    }\n    \n  }\n\n  startSurvey(){\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\n    this.ccsdk.getSurveyData();\n  }\n\n  initSurveyDom(){\n    this.domSelectElements();\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\n    this.util.addClassAll(this.$popupContainer2, 'show-slide');\n    this.util.removeClass(this.$popupContainer[0], 'show-slide');\n    if (this.ccsdk.surveyStatus == 'minimized') {\n      //resume survey\n    } else {\n      //start survey\n      //check if only one language is configured\n      (window as any).ccsdkDebug ?console.log(this.ccsdk.surveyData):'';\n      if(typeof this.ccsdk.surveyData.translated == undefined || Object.keys(this.ccsdk.surveyData.translated).length < 1){\n        this.loadFirstQuestion(); \n      }else{\n        this.ccsdk.survey.displayLanguageSelector();\n      }\n    }\n  }\n\n  updateProgress(){\n    let el = <HTMLElement>document.querySelectorAll(\"#progress-line\")[0];\n\t\tel.style.width = (this.qIndex/this.ccsdk.survey.questionsToDisplay.length)*100 + '%';\n\t}\n\n\tloadFirstQuestion(){\n\t\t// applyRuleToAllEl(this.$questionContainer, );\n\t\t// this.util.removeClassAll(this.$questionContainer, 'show-slide');\n    // this.util.addClass(this.$questionContainer, 'show-slide');\n    \n    this.loadQuestionSpecifics(this.$questionContainer, 0);\n    this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\n    this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\n    let leftIcon : any = this.util.get('.act-cc-button-prev');\n    this.util.addClassAll(leftIcon , 'hide-slide');\n    let onSurveyQuestionEvent = new CustomEvent(Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyQuestionEvent);\n\t}\n\n\tnextQuestion(){\n    (window as any).ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\n    // console.log('next question q response init',this.qResponse);\n    //empty the domListner\n    // this.util.removeAllListeners(this.domListeners);\n    let onSurveyQuestionEvent = new CustomEvent(Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyQuestionEvent);\n    //submit the current response\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\n    let isRequired : boolean = false;\n    let q : HTMLElement = this.$questionContainer[0].firstChild;\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\n    let span: Element = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0]\n    let validationSpan: Element = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0]\n    if(span)\n      this.util.removeClass(span, \"show\");\n    if(validationSpan)  \n      this.util.removeClass(validationSpan, \"show\");\n\n\n    //check if question is required \n    isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\n    if (isRequired && (Object.keys(this.qResponse).length === 0) ){\n      if (span) {\n        this.util.addClass(span, \"show\");\n        this.util.removeClass(span, \"hide\");\n      }\n      return;\n    } else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number) ){\n      if (span) {\n        this.util.addClass(span, \"show\");\n        this.util.removeClass(span, \"hide\");\n      }\n      return;\n    } else {\n      if (span) {\n        this.util.removeClass(span, \"show\");\n        this.util.addClass(span, \"hide\");\n      }\n\n\n\n\n    //check if validationRegex is set and is fulfilled\n    let validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex\n    if(validationRegex){\n      (window as any).ccsdkDebug ?console.log('validationRegex', validationRegex):'';\n      (window as any).ccsdkDebug ?console.log('response', this.qResponse):'';\n      let pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\n      let regex = new RegExp(validationRegex);\n        if (this.qResponse.text){\n          console.log('test regex text', regex.test(this.qResponse.text));\n          if (regex.test(this.qResponse.text)){\n            this.util.removeClass(validationSpan, \"show\");\n            this.util.addClass(validationSpan, \"hide\");\n          }else{\n            if (validationSpan) {\n              this.util.addClass(validationSpan, \"show\");\n              this.util.removeClass(validationSpan, \"hide\");\n            }\n            return;\n          }\n        }\n      else if (this.qResponse.number) {\n          (window as any).ccsdkDebug ?console.log('test regex text', regex.test(this.qResponse.number)):'';\n        \n          if (regex.test(this.qResponse.number)) {\n            this.util.removeClass(validationSpan, \"show\");\n            this.util.addClass(validationSpan, \"hide\");\n          } else {\n            if (validationSpan) {\n              this.util.addClass(validationSpan, \"show\");\n              this.util.removeClass(validationSpan, \"hide\");\n            }\n            return;\n          }\n      }\n      \n    }\n\n    \n\n      if (this.qResponse !== 'undefined'){\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\n        if(typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\n          && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\n          && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\n          && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number\n        ) {\n          // console.log('no submit');\n          //don't submit if already submitted.\n        } else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\n          &&  !this.qResponse.text\n          &&  !this.qResponse.number\n        ) {\n          // console.log('no submit 2');\n          \n          //previous entry filled\n        }else {\n        // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\n        // console.log(this.qResponse);\n          \n        let qId = this.qResponse.questionId?this.qResponse.questionId:this.currentQuestionId;\n        this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\n        //save response\n        this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\n        }\n      }\n    }\n    ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\n    // console.log(this.ccsdk.survey.questionsToDisplay);\n    //go to next question\n    this.qIndex++;\n    //reset the post parameters\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\n    // this.qResponse = {};\n    let nextButtonState : string = 'initial';\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\n    let nextQ : HTMLElement = this.$questionContainer;\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\n\t\tif(this.qIndex == this.ccsdk.survey.questionsToDisplay.length){\n      //Last run to show thank you message\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      let rightIcon : any = this.util.get('.cc-icon-right');\n      let nextIcon : any = this.util.get('.act-cc-button-next');\n      this.util.addClassAll(leftIcon , 'hide');\n      this.util.addClassAll(rightIcon , 'hide');\n      this.util.addClassAll(nextIcon , 'hide');\n      this.util.trigger(document,'ccdone', undefined);\n      this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\n      this.updateProgress();\n\t\t}else{\n      if((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)){\n        //reset the counter to show first question\n          this.qIndex = 0;\n        }\n        //repopulate qResponse based on answers.\n        (window as any).ccsdkDebug ?console.log('previous answer', this.ccsdk.survey.answers[this.currentQuestionId]):'';\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\n        // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\n    \t\t// this.util.addClass(nextQ, 'show-slide');\n        this.updateProgress();\n        this.loadQuestionSpecifics(nextQ, this.qIndex);\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\n        // if(nextButtonState === 'dirty'){\n          // this.submitQuestion(this.qIndex, 'test', 'multiline');\n        // }\n    }\n    if(this.qIndex == 0) {\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      this.util.addClassAll(leftIcon , 'hide-slide');\n    } else {\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      this.util.addClass(leftIcon[0] , 'show-slide');\n      this.util.removeClass(leftIcon[0] , 'hide-slide');\n    }\n    (window as any).ccsdkDebug?console.log('next question q response end', this.qResponse):'';\n    // this.qResponse = {};\n    \n\t}\n\n\tprevQuestion(){\n    this.qIndex--;\n\t\tif(!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0){\n      this.qIndex = 0;\n      return;\n      // this.qIndex = this.$questionContainer.length - 1;\n    }\n    (window as any).ccsdkDebug?console.log(this.qIndex):'';\n    let onSurveyQuestionEvent = new CustomEvent(Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyQuestionEvent);\n    //re populate qResponse based on answers.\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\n    this.loadQuestionSpecifics(null, this.qIndex);\n    this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\n    (window as any).ccsdkDebug?console.log(\"prevQuestion qResponse\", this.qResponse):'';\n\t\tthis.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\n    this.updateProgress();\n    if(this.qIndex == 0) {\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      this.util.addClassAll(leftIcon , 'hide-slide');\n      this.util.removeClassAll(leftIcon , 'show-slide');\n    }\n  }\n  \n  showLoader(){\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\n    this.util.addClass($loader, 'show');\n    this.util.removeClass($loader, 'hide');\n  }\n  hideLoader(){\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\n    this.util.removeClass($loader, 'show');\n    this.util.addClass($loader, 'hide');\n  }\n\n  appendInBody(html){\n    document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\n      'afterbegin', html\n    );\n    //force update domSelect\n    this.domSelectElements();\n  }\n\n  replaceInQuestionsContainer(html) {\n    this.$questionContainer[0].innerHTML = html;\n    this.domSelectElements();\n  }\n\n  appendInQuestionsContainer(html){\n    document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML(\n      'afterbegin', html\n    );\n    //force update domSelect\n    this.domSelectElements();\n  }\n\n  showWelcomeContainer(){\n    setTimeout(() => {\n      let startContainer = <HTMLElement>document.\n      querySelectorAll(\".act-cc-welcome-question-box\")[0];\n      let bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n        this.util.addClass(startContainer, \"show-slide\");\n        this.util.addClass( bodyElement, \"blurr\" );\n    },200);\n    this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\n    \n  }\n\n  showLanguageSelector(){\n    setTimeout(() => {\n      let startContainer = <HTMLElement>document.\n      querySelectorAll(\".cc-language-selector\")[0];\n      let bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n        this.util.addClass(startContainer, \"show-slide\");\n        this.util.addClass( bodyElement, \"blurr\" );\n    },200);\n    let self = this;\n    if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\n      // return;\n      (window as any).ccsdkDebug ? console.log(\"language select - previous listeners exists\") : '';\n      this.removePrevListener('.cc-language-select');\n    }\n    let languageSelect = this.util.initListener(\"click\",\".cc-language-select\", function() {\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      // document.dispatchEvent(onSurveyClickEvent);\n      //select language show next question.\n      // self.startSurvey();\n      self.ccsdk.config.language = \"default\";\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\n    });\n\n    languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\n  }\n\n  getSurveyContainer( token : string){\n    return document.querySelectorAll(\"#\"+token+\"-survey\")[0];\n  }\n\n  getWelcomeContainer( token : string){\n    return document.querySelectorAll(\"#\"+token+\"-welcome\")[0];\n  }\n\n  loadQuestionSpecifics( q : HTMLElement, index : number){\n    let self : DomSurvey = this;\n    this.$questionContainer[0].innerHTML = \"\";\n    let compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\n    this.$questionContainer[0].innerHTML += compiledTemplate;\n    let qType : string = this.$questionContainer[0].firstChild.getAttribute('data-type');\n    let qId : string = this.$questionContainer[0].firstChild.getAttribute('data-id');\n    this.qResponse = {};\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\n    this.currentQuestionId = qId.substring(2, qId.length);\n    switch(qType){\n        case 'scale':\n          let allOptions1 : any = document.querySelectorAll('#' + qId + ' .option-number-item');\n          let optionWidth1 = (100/allOptions1.length) - .6;\n          // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\n          // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\n          this.setupListenersQuestionScale(index, qId);\n        break;\n        case 'nps':\n          this.setupListenersQuestionNPS(index, qId);\n        break;\n        case 'multiline':\n          this.setupListenersQuestionMultiline(index, qId);\n          break;\n        case 'select':\n          if(typeof this.select !== 'undefined' ){\n            this.select.destroyListeners();\n          }\n          this.setupListenersQuestionSelect(index, qId);\n          break;\n        case 'radio':\n        this.setupListenersQuestionRadio(index, qId);\n        break;        \n        case 'radioImage':\n        this.setupListenersQuestionRadioImage(index, qId);\n        break;\n        case 'checkbox':\n          this.setupListenersQuestionCheckbox(index, qId);\n          break;\n        case 'star':\n          this.setupListenersQuestionStar(index, qId);\n          break;\n        case 'smile':\n          this.setupListenersQuestionSmile(index, qId);\n          break;\n        case 'csat':\n          this.setupListenersQuestionCsat(index, qId);\n          break;\n        case 'slider':\n          this.setupListenersQuestionSlider(index, qId);\n          break;\n        case 'singleline':\n          this.setupListenersQuestionSingleline(index, qId);\n          break;\n        case 'number':\n        this.setupListenersQuestionNumber(index, qId);  \n        default:\n        break;\n    }\n  }\n\n  // question specific listeners\n\n  setupListenersQuestionScale( index : number, qId : string ){\n    var self : DomSurvey = this;\n    let selectedRating = <HTMLElement>document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\n    let selectedRating1 = <HTMLElement>document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\n    //add id too.\n    if(this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\n      // return;\n      (window as any).ccsdkDebug?console.log(\"scale question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .option-number-item');\n    }\n\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('scale question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('scale previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined'){\n        this.util.addClass(previousSelection, \"selected\");\n        self.qResponse.type = 'scale';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n        selectedRating.innerHTML = previousValue;\n        selectedRating1.innerHTML = previousValue;\n        \n      }\n      \n    }\n\n    let ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function(){\n      let allOptions : any = document.querySelectorAll('#' + qId + ' .option-number-item');\n      \n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\n      self.qResponse.type = 'scale';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n      selectedRating.innerHTML = '' + rating;\n      selectedRating1.innerHTML = ''+ rating;\n      \n      //move to next question automagically\n      // alert('calling next questions inside scale');\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      setTimeout(()=>{\n        self.nextQuestion();\n      },500);\n      // self.util.trigger(document,'q-answered', {\n      //   index : index,\n      //   rating : rating,\n      //   type : 'scale'\n      // });\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionNPS( index : number, qId : string ){\n    var self : DomSurvey = this;\n    let selectedRating = <HTMLElement> document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\n    let allOptions : any = document.querySelectorAll('#' + qId + ' .option-number-item');\n    \n    //add id too.\n    if(this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"nps question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .option-number-item');\n      \n    }\n\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('nps question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('nps previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined'){\n        this.util.addClass(previousSelection, \"selected\");\n        let $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\n        $mobileRating.innerHTML = previousValue;\n        self.qResponse.type = 'nps';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n      \n    }\n\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\n    let ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function(){\n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\n      self.qResponse.type = 'nps';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n       selectedRating.innerHTML = ''+ rating;\n      //move to next question automagically\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      \n      // alert('calling next questions inside scale');\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n      // self.util.trigger(document,'q-answered', {\n      //   index : index,\n      //   rating : rating,\n      //   type : 'scale'\n      // });\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionCheckbox( index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .cc-checkbox', this.domListeners)) {\n      // return;\n      (window as any).ccsdkDebug?console.log(\"checkbox question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .cc-checkbox');\n    }\n\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('radio question', this.ccsdk.survey.answers[questionId]):'';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValues = this.ccsdk.survey.answers[questionId].text;\n      if(previousValues){\n        previousValues = previousValues.split(',');\n        for(let previousValue of previousValues){\n          let previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\n          (window as any).ccsdkDebug?console.log('radio previous selection', previousSelection):'';\n          if (typeof previousSelection !== 'undefined') {\n            this.util.addClass(previousSelection, \"selected\");\n            previousSelection.setAttribute('checked', 'checked');\n            self.qResponse.type = 'checkbox';\n            self.qResponse.text = previousValue;\n            self.qResponse.number = null;\n            self.qResponse.questionId = qId;\n          }\n        }\n      }\n    }\n\n    let ref = this.util.initListener('click', '#'+qId+' .cc-checkbox', function(){\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\n      // let rating : number = this.querySelectorAll('input')[0].value;\n      let rating : string = [].filter.call(document.querySelectorAll('#'+qId+' .cc-checkbox input'), function(c) {\n        return c.checked;\n      }).map(function(c) {\n        return c.value;\n      }).join(',');\n\n      (window as any).ccsdkDebug?console.log('Checkbox selected',rating):'';\n      // console.log('Checkbox selected', rating);\n\n      self.qResponse.type = 'checkbox';\n      self.qResponse.text = rating;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n      //move to next question automagically\n      // self.nextQuestion();\n    });\n    this.domListeners.push(ref);        \n    let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyClickEvent);\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionRadio(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .cc-checkbox input', this.domListeners)) {\n      // return;\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"radio question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .cc-checkbox input');\n    }\n\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('radio question', this.ccsdk.survey.answers[questionId]):'';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\n      let previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('radio previous selection', previousSelection):'';\n      if (typeof previousSelection !== 'undefined') {\n        this.util.addClass(previousSelection, \"selected\");\n        previousSelection.setAttribute('checked', 'checked');\n        self.qResponse.type = 'radio';\n        self.qResponse.text = previousValue;\n        self.qResponse.number = null;\n        self.qResponse.questionId = qId;\n      }\n\n    }\n\n\n\n    let ref = this.util.initListener('click', '#'+qId+' .cc-checkbox input', function(){\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\n      let rating : string = this.value;\n      // self.util.removeClassAll(allOptions, \"selected\");\n      // self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\n      self.qResponse.type = 'radio';\n      self.qResponse.text = rating;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionRadioImage(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .cc-checkbox input', this.domListeners)) {\n      (window as any).ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\n      this.removePrevListener('#' + qId + ' .cc-checkbox input');\n    }\n\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\n      let previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\n      if (typeof previousSelection !== 'undefined') {\n        this.util.addClass(previousSelection, \"selected\");\n        previousSelection.setAttribute('checked', 'checked');\n        self.qResponse.type = 'radioImage';\n        self.qResponse.text = previousValue;\n        self.qResponse.number = null;\n        self.qResponse.questionId = qId;\n      }\n\n    }\n\n    let ref = this.util.initListener('click', '#'+qId+' .cc-checkbox input', function(){\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\n      let rating : string = this.value;\n      // self.util.removeClassAll(allOptions, \"selected\");\n      // self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\n      self.qResponse.type = 'radioImage';\n      self.qResponse.text = rating;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionStar(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .option-star-box', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"smile question - previous listeners exists\"):'';\n      this.removePrevListener('#'+qId+' .option-smile-box');\n         \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('star question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('star previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined' && previousSelection != null){      \n        this.util.addClass(previousSelection, \"selected\");\n        self.qResponse.type = 'star';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n      \n    }\n    let ref = this.util.initListener('click', '#'+qId+' .option-star-box', function(){\n      let allOptions : any = document.querySelectorAll('#'+qId+' .option-star-box');\n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n\n      //select previous sibling\n      // let child : any = this.previousSibling;\n      // while( ( child = child.previousSibling) != null ){\n      //   self.util.addClass(child, \"selected\");\n      // }\n\n\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\n      self.qResponse.type = 'star';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSmile(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .option-smile-box', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"smile question - previous listeners exists\"):'';\n      this.removePrevListener('#'+qId+' .option-smile-box');\n      \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('smile question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('smile previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined' && previousSelection != null){\n        \n        this.util.addClass(previousSelection, \"selected\");\n        self.qResponse.type = 'smile';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n      \n    }\n  \n    let ref = this.util.initListener('click', '#'+qId+' .option-smile-box', function(){\n      let allOptions : any = document.querySelectorAll('#'+qId+' .option-smile-box');\n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n\n      //select previous siblings\n      // let child : any = this.previousSibling;\n      // while( ( child = child.previousSibling) != null ){\n      //   self.util.addClass(child, \"selected\");\n      // }\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\n      self.qResponse.type = 'smile';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n\n  setupListenersQuestionCsat(index: number, qId: string) {\n    var self: DomSurvey = this;\n    if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"csat question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .option-smile-box');\n    }\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('csat question', this.ccsdk.survey.answers[questionId]):'';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('csat previous selection', previousSelection):'';\n      if (typeof previousSelection !== 'undefined' && previousSelection != null) {\n\n        this.util.addClass(previousSelection, \"selected\");\n        previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\n        self.qResponse.type = 'smile';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n        \n      }\n\n    }\n\n    let ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\n      let allOptions: any = document.querySelectorAll('#' + qId + ' .option-smile-box');\n      let rating: number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n      this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\n      let child: any = this.previousSibling;\n      while ((child = child.previousSibling) != null) {\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\n        self.util.addClass(child, \"selected\");\n      }\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\n      self.qResponse.type = 'smile';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);\n\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionMultiline( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let multilineRes : string = '';\n    if(this.util.checkIfListenerExists('#'+qId, this.domListeners)) {\n          //remove listeners\n          (window as any).ccsdkDebug?console.log(\"multiine question - previous listeners exists\"):'';\n          this.removePrevListener('#'+qId);\n             \n        }\n        //set previous value\n        let questionId : any ;\n        questionId = qId.substring(2, qId.length);\n        (window as any).ccsdkDebug?console.log('multiine question',this.ccsdk.survey.answers[questionId]):'';\n        if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n          let previousValue =  this.ccsdk.survey.answers[questionId].text;\n          (window as any).ccsdkDebug?console.log('multiine input box',document.querySelectorAll('#' + qId)[0]):'';\n          let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId)[0];\n          (window as any).ccsdkDebug?console.log('multiine previous selection', previousSelection):'';\n          (window as any).ccsdkDebug?console.log('multiine previous value', previousValue):'';\n          if(typeof previousSelection !== 'undefined' && \n           previousSelection != null &&\n           typeof previousValue !== 'undefined'){\n            previousSelection.value = previousValue ;  \n            self.qResponse.type = 'multiline';\n            self.qResponse.text = previousValue;\n            self.qResponse.number = null;\n            self.qResponse.questionId = qId;    \n          }\n        }\n    let ref = this.util.initListener('change', '#'+qId,function(){\n      multilineRes = this.value;\n      self.qResponse.type = 'multiline';\n      self.qResponse.text = multilineRes;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSingleline( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let singlelineRes : string = '';\n    if(this.util.checkIfListenerExists('#'+qId, this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"singleline question - previous listeners exists\"):'';\n      this.removePrevListener('#'+qId);\n         \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('singleline question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].text;\n      (window as any).ccsdkDebug?console.log('singleline input box',document.querySelectorAll('#' + qId)[0]):'';\n      let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId)[0];\n      (window as any).ccsdkDebug?console.log('singleline previous selection', previousSelection):'';\n      (window as any).ccsdkDebug?console.log('singleline previous value', previousValue):'';\n      if(typeof previousSelection !== 'undefined' && \n       previousSelection != null &&\n       typeof previousValue !== 'undefined'){\n        previousSelection.value = previousValue ;     \n        self.qResponse.type = 'singleline';\n        self.qResponse.text = previousValue;\n        self.qResponse.number = null;\n        self.qResponse.questionId = qId; \n      }\n    }\n    let ref = this.util.initListener('change', '#'+qId,function(){\n      singlelineRes = this.value;\n      self.qResponse.type = 'singleline';\n      self.qResponse.text = singlelineRes;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n\n    console.log('singleline qResponse',self.qResponse);\n  }\n\n  setupListenersQuestionNumber(index: number, qId: string) {\n    let self: DomSurvey = this;\n    let numberRes: string = '';\n    if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\n      this.removePrevListener('#' + qId);\n\n    }\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\n      (window as any).ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\n      let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId)[0];\n      (window as any).ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\n      (window as any).ccsdkDebug ? console.log('number previous value', previousValue) : '';\n      if (typeof previousSelection !== 'undefined' &&\n        previousSelection != null &&\n        typeof previousValue !== 'undefined') {\n        previousSelection.value = previousValue;\n        self.qResponse.type = 'number';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n    }\n    let ref = this.util.initListener('change', '#' + qId, function () {\n      numberRes = this.value;\n      self.qResponse.type = 'number';\n      self.qResponse.text = null ;\n      self.qResponse.number = numberRes;\n      self.qResponse.questionId = qId;\n    });\n    this.domListeners.push(ref);\n\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSlider( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let sliderRes : string = '';\n    let slider = new Slider();\n    let sliderInput = <HTMLInputElement>document.querySelectorAll('#' + qId + \" input\")[0];    \n    \n    if(this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\n      // return;\n      \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('slider question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      (window as any).ccsdkDebug?console.log('slider input box',document.querySelectorAll('#' + qId)[0]):'';\n      let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\n      (window as any).ccsdkDebug?console.log('slider previous selection', previousSelection):'';\n      (window as any).ccsdkDebug?console.log('slider previous value', previousValue):'';\n      if(typeof previousSelection !== 'undefined' && \n       previousSelection != null &&\n       typeof previousValue !== 'undefined'){\n        previousSelection.innerHTML = previousValue ;  \n        sliderInput.value = previousValue;\n        self.qResponse.type = 'slider';\n        self.qResponse.number = previousValue;\n        self.qResponse.text = null;\n        self.qResponse.questionId = qId;\n      }\n    }\n    let ref = this.util.initListener(\"change\", '#' + qId + \" input\", function(){\n      sliderRes = this.value;\n      self.qResponse.type = 'slider';\n      self.qResponse.number = sliderRes;\n      self.qResponse.text = null;\n      self.qResponse.questionId = qId;\n      //move to next question automagically\n      // self.nextQuestion();\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSelect( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let questionId : any ;\n    (window as any).ccsdkDebug?console.log('select que', this.domListeners):'';\n    questionId = qId.substring(2, qId.length);\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\n    if(this.util.checkIfListenerExists('#'+qId+\" .cc-select-options .cc-select-option\", this.domListeners)) {\n      (window as any).ccsdkDebug?console.log('select que listner exists'):'';\n      this.removePrevListener('#'+qId+\" .cc-select-options .cc-select-option\");\n    \n      // return;\n    }\n    (window as any).ccsdkDebug?console.log('select que'):'';\n    \n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\n      (window as any).ccsdkDebug?console.log('select que initialize select'):'';\n      \n      self.select = new Select(qId);\n      self.select.destroyListeners();\n      self.select.init(qId);\n      \n      if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n        if (this.ccsdk.survey.answers[questionId].text){\n          self.select.setValue(this.ccsdk.survey.answers[questionId].text);\n          self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\n          self.qResponse.type = 'select';\n          self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\n          self.qResponse.number = null;\n          self.qResponse.questionId = qId;\n        }\n      }\n      self.trackSelects.push(qId);\n    // }\n    let selectRes : string = '';\n    let ref = this.util.initListener('click', '#'+qId+\" .cc-select-options .cc-select-option\",function(){\n      // selectRes = this.getAttribute('data-value');\n      selectRes = document.querySelectorAll('#'+qId+\" .cc-select-trigger\")[0].innerHTML;\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\n      self.qResponse.type = 'select';\n      self.qResponse.text = selectRes;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n      //move to next question automagically\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      \n      // self.nextQuestion();\n    });\n    \n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n\n  }\n\n\n\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\n  //   let self : DomSurvey = this;\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\n  //   self.util.on('click', btnNext, this.submitQuestion(\n  //     index, data, type\n  //   ));\n  //\n  // }\n\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\n  //   let self : DomSurvey = this;\n  //   let btnNext = self.util.get('.act-cc-button-next');\n  //   self.util.on('click', btnNext, this.submitQuestion(\n  //     index, data, type\n  //   ));\n  //   self.util.off('click', btnNext, this.submitQuestion(\n  //     index, data, type\n  //   ));\n  // }\n\n  submitQuestion(index : number, data : any, type : string, qId : string){\n      // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\n      this.util.trigger(document,'q-answered', {\n        index : index,\n        data : data,\n        type : type,\n        questionId : qId.substring(2, qId.length)\n      });\n  }\n\n  \n\n}\n\nexport { DomSurvey }\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\n\nclass Theme{\n   util : DomUtilities;\n   brandColorDark : string;\n   brandColorWhite : string;\n\t constructor(brandColor, time){\n\t this.util = new DomUtilities();\n\t this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\n\t this.brandColorWhite= this.util.shadeBlendConvert(0.1, brandColor, undefined);\n\n\t\tlet css : string = '\\\n\t\t.cc-sdk #progressBar{ \\\n\t\t\tbackground : '+ this.brandColorDark+';\\\n\t\t}\\\n\t\t.cc-sdk #progress-line{ \\\n\t\t\tbackground: '+ brandColor+' \\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\n\t\t\tbackground:'+ brandColor +';\\\n\t\t}\\\n\t\t.overlay.glass{\\\n\t\t\tbackground-color:'+ this.util.hexToRGB(brandColor,.5)+';\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\n\t\t\tborder-color: #fff;\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\\\n\t\t\tbackground: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-sdk .form-control:focus {\\\n\t\t\tborder-color: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-sdk .cc-message-box__btn{\\\n\t\t\tbackground: '+brandColor+';\\\n\t\t\tcolor:#fff;\\\n\t\t}\\\n\t\t.cc-sdk .submit-icon{\\\n\t\t\t background-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3Cfilter x=\\'-18.1%25\\' y=\\'-12.9%25\\' width=\\'136.2%25\\' height=\\'136.2%25\\' filterUnits=\\'objectBoundingBox\\' id=\\'filter-2\\'%3E%3CfeOffset dx=\\'0\\' dy=\\'2\\' in=\\'SourceAlpha\\' result=\\'shadowOffsetOuter1\\'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation=\\'2\\' in=\\'shadowOffsetOuter1\\' result=\\'shadowBlurOuter1\\'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values=\\'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0\\' type=\\'matrix\\' in=\\'shadowBlurOuter1\\'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'1-copy-20\\' transform=\\'translate%28-1246.000000, -664.000000%29\\'%3E%3Cg id=\\'Group-16\\' transform=\\'translate%281250.000000, 666.000000%29\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cuse fill=\\'white\\' fill-opacity=\\'1\\' filter=\\'url%28%23filter-2%29\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3Cuse fill=\\''+encodeURI(brandColor)+'\\' fill-rule=\\'evenodd\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23FFFFFF\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\\\n\t\t }\\\n\t\thtml[dir=\"rtl\"] .cc-sdk .submit-icon{\\\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'Submit_Icon\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cg id=\\'path-1-link\\' fill-rule=\\'nonzero\\' fill=\\'%23white\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3Cg id=\\'path-1-link\\' fill=\\''+encodeURI(brandColor)+'\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23ffffff\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\' transform=\\'translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 \\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\");\\\n\t\t}\\\n\t\t.cc-sdk .cc-question-container__required-label{\\\n\t\t\tcolor: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\\\n\t\t\tbackground: '+brandColor+' !important;\\\n\t\t\t   background: -moz-linear-gradient(-45deg, '+brandColor+' 0%, '+this.brandColorDark+' 100%)!important;\\\n\t\t\t   background: -webkit-linear-gradient(-45deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\t   background: linear-gradient(135deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+brandColor+ ', endColorstr='+this.brandColorDark+',GradientType=1 );\\\n\t\t   }\\\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\\\n\t\t\tbackground: '+brandColor+' !important;\\\n\t\t\tbackground: -moz-linear-gradient(-45deg, '+brandColor+' 0%, '+this.brandColorDark+' 100%)!important;\\\n\t\t\tbackground: -webkit-linear-gradient(-45deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\tbackground: linear-gradient(135deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+brandColor+ ', endColorstr='+this.brandColorDark+',GradientType=1 );\\\n\t\t}\\\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\\\n\t\t\tborder: 1px solid '+brandColor+' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\\\n\t\t\tborder: 1px solid '+brandColor+' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   .cc-sdk svg.timer circle {\\\n\t\t\tanimation: countdown '+time+'s linear 1 forwards;\\\n\t\t\tstroke: '+brandColor+';\\\n\t\t   }\\\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\\n\t\t\t\tbackground-color: '+brandColor+';\\\n\t\t\t}\\\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\\n\t\t\t\tbackground-color: '+brandColor+';\\\n\t\t\t}\\\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\\\n\t\t\t\tborder: solid 1px '+ brandColor + ';\\\n\t\t\t}\\\n\t\t @media (max-width: 767px){\\\n\t \t\t\t.overlay.glass{\\\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\n\t \t\t\tbackground-image:none;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-sdk.cc-popup-container{\\\n\t\t\t\t\tbackground-color : transparent;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-sdk.cc-popup-container .overlay.glass{\\\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB(brandColor,.9)+';\\\n\t\t\t\t}\\\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\\n\t\t\t\t\tcolor:#fff;\\\n\t\t\t\t}\\\n\t\t';\n\t\tthis.util.appendStyle(css);\n\n\t}\n}\nexport { Theme }\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\nclass Slider{\n  inputRange : any;\n  rangeTip : any;\n  maxValue : number;\n  speed : number;\n  currValue : number;\n  rafID : any;\n  timeout : any;\n  util : any\n\n  constructor(){\n   this.inputRange = document.getElementsByClassName('range')[0];\n   this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\n   this.util = new DomUtilities();\n  //  this.maxValue = 100; // the higher the smoother when dragging\n   this.speed = 5;\n   \n\n  // set min/max value\n  // this.inputRange.min = 0;\n  this.inputRange.min = this.inputRange.getAttribute('min');\n  // this.inputRange.max = this.maxValue;\n  this.inputRange.max = this.inputRange.getAttribute('max');\n  this.setupListeners();\n  }\n\n  setupListeners(){\n    let self : Slider = this;\n   \n    // bind events\n    this.inputRange.addEventListener('mouseup', this.clearTo, false);\n    // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\n    // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\n    // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\n    // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\n    // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\n    // move gradient\n    this.inputRange.addEventListener('input', function() {\n      self.updateRangeTip();\n      self.util.addClass(this, 'selected');\n      \n    //Change slide thumb color on way up\n    if (this.value > 20) {\n       self.inputRange.classList.add('ltpurple');\n    }\n    if (this.value > 40) {\n       self.inputRange.classList.add('purple');\n    }\n    if (this.value > 60) {\n       self.inputRange.classList.add('pink');\n    }\n\n    //Change slide thumb color on way down\n    if (this.value < 20) {\n       self.inputRange.classList.remove('ltpurple');\n    }\n    if (this.value < 40) {\n       self.inputRange.classList.remove('purple');\n    }\n    if (this.value < 60) {\n       self.inputRange.classList.remove('pink');\n    }\n  });\n}\n\n\n\n  updateRangeTip(){\n    let self : Slider = this;\n    this.rangeTip.style.display = 'block' ;\n    this.rangeTip.innerHTML = this.inputRange.value;\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\n    // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\n    \n    // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\n      \n    // } else {\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\n      \n    // }\n    // if(parseInt(this.rangeTip.style.left) <= 50 ){\n    //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\n    // }else{\n    //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\n    // }\n    // console.log(this.rangeTip.style.left);\n    // if(this.timeout){\n    //   clearTimeout(this.timeout);\n    // }\n    // this.timeout = setTimeout(function(){\n    //   self.rangeTip.style.display = 'none' ;\n    // },300)\n    \n  }\n\n  clearTo(){\n    clearTimeout(this.timeout);\n  }\n\n  // listen for unlock\n  // unlockStartHandler() {\n  //   let self : any = this;\n  //   // clear raf if trying again\n  //   window.cancelAnimationFrame(this.rafID);\n  //   // set to desired value\n  //   this.currValue = +self.value;\n  // }\n\n  // unlockEndHandler() {\n  //   // store current value\n  //   this.currValue = + this.value;\n  //   // determine if we have reached success or not\n  //   if(this.currValue >= this.maxValue) {\n  //      this.successHandler();\n  //   }\n  //   else {\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\n  //   }\n  // }\n\n  // handle range animation\n  animateHandler() {\n    // calculate gradient transition\n    var transX = this.currValue - this.maxValue;\n\n    // update input range\n    this.inputRange.value = this.currValue;\n\n    //Change slide thumb color on mouse up\n    if (this.currValue < 20) {\n       this.inputRange.classList.remove('ltpurple');\n    }\n    if (this.currValue < 40) {\n       this.inputRange.classList.remove('purple');\n    }\n    if (this.currValue < 60) {\n       this.inputRange.classList.remove('pink');\n    }\n\n    // determine if we need to continue\n    if(this.currValue > -1) {\n     window.requestAnimationFrame(this.animateHandler);\n    }\n\n    // decrement value\n    this.currValue = this.currValue - this.speed;\n  }\n\n  // handle successful unlock\n  successHandler(){\n  }\n\n\n\n}\n\nexport { Slider };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif(Cookie.get(Constants.CCTriggerSiteStartTime) == null) {\r\n  Cookie.set(Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie.set(Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\n\r\nlet sitePageViewCount = Cookie.get(Constants.CCTriggerSitePageViewCount);\r\nif( sitePageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n} else {\r\n  sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get(Constants.CCTriggerIndividualPageViewCount);\r\nif( individualPageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n} else {\r\n  individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\n\r\n(window as any).click = 0;\r\n\r\nwindow.onscroll = function (e) {  \r\n  // called when the window is scrolled.  \r\n    let doc = document.documentElement;\r\n    let left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    let top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\r\n    (window as any).ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n}\r\n\r\n\r\ndocument.onclick = function(e) {\r\n  (window as any).click++;\r\n}\r\n\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval : any = null;\r\n  static triggerInstances : any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey(surveyId : any, trigger : Triggers) {\r\n    TriggerManager.triggerInstances[surveyId] = trigger;\r\n    if(Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n      (window as any).ccsdkDebug ?console.log(TriggerManager.triggerInterval):'';\r\n      if(TriggerManager.triggerInterval == null) {\r\n        (window as any).ccsdkDebug ?console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\"):'';\r\n        TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId : string) {\r\n    delete TriggerManager.triggerInstances[surveyId];\r\n    if(Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n      clearInterval(TriggerManager.triggerInterval);\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n    Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n    //set cookies and call every process Interval Triggers.\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers(scrollNow) {\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n    }\r\n  }\r\n\r\n  static disableTriggers(surveyId : string) {\r\n    TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\nimport { Constants } from \"./Constants\";\nimport { SurveyManager } from \"./SurveyManager\";\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\n\nclass Triggers {\n\n  ccsdk : any;\n  pageCountTrigger : boolean;\n  pageTimeTrigger : boolean;\n  siteCountTrigger : boolean;\n  siteTimeTrigger : boolean;\n  urlParamTrigger : boolean;\n  notUrlParamTrigger : boolean;\n  utmParamTrigger : boolean;\n  scrollPixelsTrigger : boolean;\n  minPageCount : number;\n  minSiteCount : number;\n  minPageTime : number;\n  minSiteTime : number;\n  minScrollPixels : number;\n  utm : string;\n  inUrl : RegExp;\n  notinUrl : RegExp;\n  pageCountTriggerEnabled : boolean;\n  siteCountTriggerEnabled : boolean;\n  pageTimeTriggerEnabled : boolean;\n  siteTimeTriggerEnabled : boolean;\n  urlParamTriggerEnabled : boolean;\n  notUrlParamTriggerEnabled : boolean;\n  utmParamTriggerEnabled : boolean;\n  scrollPixelsTriggerEnabled : boolean;\n\n  conditionalTriggers : any;\n\n  constructor(ccsdk) {\n    this.ccsdk = ccsdk;\n    this.pageCountTrigger = false;\n    this.siteCountTrigger = false;\n    this.pageTimeTrigger = false;\n    this.siteTimeTrigger = false;\n    this.urlParamTrigger = false;\n    this.notUrlParamTrigger = false;\n    this.utmParamTrigger = false;\n    this.scrollPixelsTrigger = false;\n\n    //disable all triggers.\n    this.pageCountTriggerEnabled = false;\n    this.siteCountTriggerEnabled = false;\n    this.pageTimeTriggerEnabled = false;\n    this.siteTimeTriggerEnabled = false;\n    this.urlParamTriggerEnabled = false;\n    this.notUrlParamTriggerEnabled = false;\n    this.utmParamTriggerEnabled = false;\n    this.scrollPixelsTriggerEnabled = false;\n    this.conditionalTriggers = {};\n  }\n\n\n  enableClickTrigger(target : string, cb : any) {\n    let item = document.querySelectorAll(target)[0];\n    if(typeof item !== 'undefined') {\n      item.addEventListener('click',cb);\n    }\n  }\n\n  enablePageCountTrigger(minPageCount : number) {\n    this.minPageCount = minPageCount;\n    this.pageCountTriggerEnabled = true;\n    this.TriggerPopUpByPageCount();\n  }\n\n  enableSiteCountTrigger(minSiteCount : number) {\n    this.minSiteCount = minSiteCount;\n    this.pageCountTriggerEnabled = true;\n    this.TriggerPopUpByPageCount();\n  }\n\n  enablePageTimeTrigger(minPageTime : number) {\n    this.minPageTime = minPageTime;\n    this.pageTimeTriggerEnabled = true;\n    this.TriggerPopUpByTimeSpentOnPage();\n  }\n\n  enableSiteTimeTrigger(minSiteTime : number) {\n    this.minSiteTime = minSiteTime;\n    this.siteTimeTriggerEnabled = true;\n    this.TriggerPopUpByTimeSpentOnSite();\n  }\n\n  enablePopUpByURLPatternTrigger(urlPattern : RegExp) {\n    this.inUrl = urlPattern;\n    this.urlParamTriggerEnabled = true;\n    this.TriggerPopUpByURLPattern();\n  }\n\n  enablePopUpByNotURLPatternTrigger(urlPattern : RegExp) {\n    this.notinUrl = urlPattern;\n    this.notUrlParamTriggerEnabled = true;\n    this.TriggerPopUpByNotURLPattern();\n  }\n\n  enablePopUpByUTMPatternTrigger(urlPattern : string) {\n    this.utm = urlPattern;\n    this.utmParamTriggerEnabled = true;\n    this.TriggerPopUpByUTMParameter();\n  }\n\n  enableScrollPixelsTrigger(minScrollPixels : number) {\n    this.minScrollPixels = minScrollPixels;\n    this.scrollPixelsTriggerEnabled = true;\n\n  }\n\n  processIntervalTriggers() {\n    //if survey already launched\n    //skip processing.\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\n      return;\n    }\n    this.TriggerPopUpByTimeSpentOnPage();\n    this.TriggerPopUpByTimeSpentOnSite();\n  }\n\n  setConditionalTriggers(config : CCSDKConfig) {\n    (window as any).ccsdkDebug?console.log(config.grepURL):'';\n    //\n    if ((typeof config.click !== 'undefined') && (config.click != 0)) {\n      this.conditionalTriggers.click = config.click;\n    }\n    if ((typeof config.onExitDetect !== 'undefined')) {\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\n    }\n    // if ((typeof config.cssSelector !== 'undefined')) {\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\n    // }\n    if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\n    }\n    if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\n    }\n    if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)){\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\n    }\n    if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\n      this.conditionalTriggers.grepURL = config.grepURL;\n    }\n\n  }\n\n  processConditionalTriggers() {\n    //gather all conditional triggers and process them.\n    let self = this;\n    let isEnabled = true;\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\n      (window as any).ccsdkDebug?console.log('returning'):'';\n      return;\n    }\n    if(typeof this.conditionalTriggers !== 'undefined') {\n      if(Object.keys(this.conditionalTriggers).length == 0) {\n        return false;\n      }\n      for(let conditionalTrigger in this.conditionalTriggers) {\n        if(this.conditionalTriggers[conditionalTrigger] != null) {\n          switch(conditionalTrigger) {\n            case \"onExitDetect\":\n              let onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\n                (window as any).ccsdkDebug?console.log(\"Mouse out\"):'';\n\n              });\n\n              onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\n\n            break;\n            case \"click\":\n              //find click count on screen\n              //calculate click count\n              // if((window as any).click > this.conditionalTriggers.click) {\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\n              // }\n              isEnabled = isEnabled && ((window as any).click >= this.conditionalTriggers.click);\n            break;\n            case \"waitSeconds\":\n              let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\n              let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\n              (window as any).ccsdkDebug?console.log('waitSeconds enabled', isEnabled):'';\n            break;\n            case \"scrollPercent\":\n              //fill it with current scroll position\n              isEnabled = isEnabled && TriggerUtils.checkScroll( (window as any).ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\n              (window as any).ccsdkDebug?console.log('scrollPercent enabled', isEnabled):'';\n              \n            break;\n            case \"grepURL\":\n              isEnabled = isEnabled && TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\n              (window as any).ccsdkDebug?console.log('grepURL enabled', isEnabled):'';\n            break;\n            case \"grepInvertURL\":\n                isEnabled = isEnabled && !TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\n                (window as any).ccsdkDebug?console.log('grepInvertURL enabled', isEnabled):'';\n            break;\n          }\n        }\n      }\n      if(isEnabled) {\n        SurveyManager.addSurvey(this.ccsdk.surveyToken);\n      }\n    } else {\n      //do nothing.\n    }\n  }\n\n  processNonConditionalTriggers() {\n    //process all non conditional one shot triggers here?\n  }\n\n  processScrollTriggers(scrollNow : number) {\n    this.TriggerPopUpByScrollPixels(scrollNow);\n  }\n\n  TriggerPopUpByPageCount() {\n    let pageCount = parseInt(Cookie.get(Constants.CCTriggerSitePageViewCount));\n    if(pageCount == NaN) {\n      pageCount = 0;\n    }\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\n      this.pageCountTrigger = true;\n      //displayQuestion\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed.\n      //or condition not satisified yet.\n    }\n  }\n\n  \n  //minPageTime in seconds\n  TriggerPopUpByTimeSpentOnPage() {\n    let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\n    let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\n\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition(pageTime, pageStartTime,this.minPageTime) ) {\n      this.pageTimeTrigger = true;\n      //displayQuestion\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed.\n      //or condition not satisified yet.\n    }\n  }\n\n  TriggerPopUpByTimeSpentOnSite() {\n    let siteStartTime = new Date(Cookie.get(Constants.CCTriggerSiteStartTime)).getTime();\n    let siteTime = new Date(Cookie.get(Constants.CCTriggerSiteElapsedTime)).getTime();\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime) ) {\n      this.siteTimeTrigger = true;\n      //displayQuestion\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed.\n      //or condition not satisified yet.\n    }\n  }\n\n  TriggerPopUpByInactivity() {\n    \n  }\n\n  TriggerPopUpByScrollPixels(scrollNow : number) {\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll(scrollNow, this.minScrollPixels) ) {\n      this.scrollPixelsTrigger = true;\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n      // this.ccsdk.initSurvey();\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed?\n      //or condition not satisified yet.\n    }\n  }\n\n  //run only once?\n  TriggerPopUpByURLPattern() {\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl(this.inUrl)) {\n      this.urlParamTrigger = true;\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n\n    }\n  }\n\n  TriggerPopUpByNotURLPattern() {\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl(this.inUrl)) {\n      this.notUrlParamTrigger = true;\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n\n    }\n  }\n\n  TriggerPopUpByUTMParameter() {\n    let utmP = this.utm.split(\"=\");\n    let utmVal = Cookie.getParameterByName(utmP[0], undefined); \n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]){\n      this.utmParamTrigger = true;\n      \n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    }\n  }\n\n  resetTriggers() {\n    this.pageCountTrigger = false;\n    this.pageTimeTrigger = false;\n    this.siteTimeTrigger = false;\n    this.urlParamTrigger = false;\n    this.scrollPixelsTrigger = false;\n  }\n}\n\nexport { Triggers };\n\n\n// function triggerHandler(surveyHandler) {\n//   //survey specific Trigger Handlers\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\n// }\n\n//call below functions when survey is locked and loaded.\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\n// self.triggers.TriggerPopUpByUTMParameter();\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts"],"sourceRoot":""}