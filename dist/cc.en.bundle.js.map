{"version":3,"sources":["webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap e93f47e97948386e5054","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","selectorMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","internalHandler","event","t","target","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","console","error","setupSurvey","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","unsetSurveyRunning","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","Content-Type","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isAnd","filterQuestion","groupBy","toUpperCase","isOr","isNumberCheck","answerCheck","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selfOption","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","selectedValueList","translatedSelection","selectOption","removeOption","csv","allOptions","allOptions_1","domOptions","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","toInteger","Number","isNaN","isFinite","floor","abs","maxSafeInteger","pow","toLength","len","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","includes","searchElement","fromIndex","y","surveyToken","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","destroy","dom","callback","prefill","answerObject","prefillByTag","questionTag","fillPrefill","prefillByNote","questionNote","fillPrefillByNote","show","hide","localCCSDK","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","login","loginURL","logindata","debug","loginData","getSurveyThrottlingLogic","grant_type","getThrottleUrl","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","hideLoader","initSurveyQuestions","displayWelcomeQuestion","fetchQuestions","DomSurvey","setTheme","keepAlive","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questions","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","setTimeout","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","preFill","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","surveyStartTime","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","acceptAnswers","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","complete","comparator","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","legendDimension","parentContainer","dimension","initial_1","optionLeftExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","transform","locals","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","newUrl","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","startSurvey","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","match","currentQuestionId","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","token","qType","allOptions1","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var selectorMatches = function (el, selector) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n            return f.call(el, selector);\r\n        };\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (selectorMatches(t, sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr, translatedArr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var translatedOpt = (translatedArr[i] || arr[i]).split(';');\r\n                var arrOpt = arr[i].split(';');\r\n                res += '<option value=\"' + arrOpt[0] + '\">' + (translatedOpt[0]) + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && (opt.indexOf(';') !== -1) && (opt.indexOf('.') !== -1);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            // console.log( res );\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n            console.error('Microsurvey not properly set up. Contact Support.');\r\n            return;\r\n        }\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.indexOf(\":\") !== -1) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if (question.text) {\r\n            var qText = question.text.split(':');\r\n            if (question.text.indexOf(\":\") !== -1) {\r\n                qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n            }\r\n            return qText;\r\n        }\r\n        else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined' &&\r\n                question.translated[surveyHandler.ccsdk.config.language].multiSelect) {\r\n                var translatedOptions_1 = question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n                return question.multiSelect.map(function (x, i) {\r\n                    if (translatedOptions_1[i]) {\r\n                        return translatedOptions_1[i];\r\n                    }\r\n                    else {\r\n                        return x;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}/MICROSURVEY\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers, successcb, errorcb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        if (this.status >= 200 && this.status < 300) {\r\n            if (xhr.response) {\r\n            }\r\n            var res = xhr.response ? JSON.parse(xhr.response) : '';\r\n            if (successcb)\r\n                successcb(res);\r\n        }\r\n        else {\r\n            if (errorcb) {\r\n                errorcb({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        if (errorcb) {\r\n            errorcb({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        }\r\n    };\r\n    if (headers) {\r\n        Object.keys(headers).forEach(function (key) {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers, successcb, errorcb) {\r\n        headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.get = function (url, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, null, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data, successcb, errorcb) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\": \"application/json; charset=utf-8\" }, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(16);\r\nvar QuestionSurvey = __webpack_require__(21);\r\nvar QuestionStart = __webpack_require__(22);\r\nvar QuestionSingleline = __webpack_require__(23);\r\nvar QuestionNumber = __webpack_require__(24);\r\nvar QuestionMultiline = __webpack_require__(25);\r\nvar QuestionCheckbox = __webpack_require__(26);\r\nvar QuestionRadio = __webpack_require__(27);\r\nvar QuestionRadioImage = __webpack_require__(28);\r\nvar QuestionScale = __webpack_require__(29);\r\nvar QuestionCSATAgreement5 = __webpack_require__(30);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(31);\r\nvar QuestionNPS = __webpack_require__(32);\r\nvar QuestionSelect = __webpack_require__(33);\r\nvar QuestionMultiSelect = __webpack_require__(34);\r\nvar QuestionSmile = __webpack_require__(35);\r\nvar QuestionSmileInverted = __webpack_require__(36);\r\nvar QuestionStar = __webpack_require__(37);\r\nvar QuestionSlider = __webpack_require__(38);\r\nvar OptionRadioImage = __webpack_require__(39);\r\nvar OptionRadio = __webpack_require__(40);\r\nvar OptionCheckbox = __webpack_require__(41);\r\nvar OptionCheckboxImage = __webpack_require__(42);\r\nvar ThankYou = __webpack_require__(43);\r\nvar LanguageSelector = __webpack_require__(44);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isAnd(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isAnd = isAnd;\r\nfunction isOr(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isOr = isOr;\r\nfunction isNumberCheck(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isNumberCheck = isNumberCheck;\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nfunction doesSatisfy(surveyHandler, filterQuestion) {\r\n    var answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n    if (isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    }\r\n    else {\r\n        // any text match for text answers\r\n        if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n            if (answer.textInput && answer.textInput !== ' ') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        var iFoundAll = false;\r\n        var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n        var questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n        if (!answer) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n            var aAnswer = _a[_i];\r\n            if (question.displayType === 'MultiSelect') {\r\n                var selectedOptions = answer.textInput.split(',');\r\n                if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            else if (questionAnswerText === aAnswer) {\r\n                iFoundAll = true;\r\n            }\r\n        }\r\n        return iFoundAll;\r\n    }\r\n    return false;\r\n}\r\nexports.doesSatisfy = doesSatisfy;\r\nfunction questionCompare(a, b) {\r\n    return a.sequence - b.sequence;\r\n}\r\nexports.questionCompare = questionCompare;\r\nfunction checkLanguage(surveyHandler, fOption) {\r\n    if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n        return fOption.language === surveyHandler.ccsdk.config.language;\r\n    }\r\n    return false;\r\n}\r\nexports.checkLanguage = checkLanguage;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            var selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = selectionTrigger.textContent;\r\n            var selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectionTrigger.setAttribute('data-selection-value', value);\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                selectionTrigger.textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n                    selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                    selectedValueText = value;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n                selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.selectOptions(selectedValueText);\r\n                selectedValueText;\r\n                if (selectedOptionText.length < 1) {\r\n                    selectionTrigger.textContent = 'Select';\r\n                }\r\n                else {\r\n                    selectionTrigger.textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value, question, surveyHandler) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        var selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n        var selectedValueList = value.split(',');\r\n        var translatedSelection = selectedValueList.map(function (x) { return LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x); });\r\n        selectTrigger.textContent = translatedSelection.join(',');\r\n        selectTrigger.setAttribute('data-selection-value', value);\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.removeOption = function (el) {\r\n        this.util.removeClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                    else {\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    Select.prototype.addOrRemoveFromList = function (listAsString, item) {\r\n        var list = listAsString.split(',');\r\n        var itemIndex = list.indexOf(item);\r\n        if (itemIndex !== -1) {\r\n            list.splice(itemIndex, 1);\r\n        }\r\n        else {\r\n            list.push(item);\r\n        }\r\n        return list.join(',');\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                // console.log( aQuestion );\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var surveyQuestions = surveyHandler.getSurveyQuestions();\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (surveyQuestions.indexOf(aQuestion) === -1) {\r\n                            surveyQuestions.push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyQuestions.indexOf(aQuestion) !== -1) {\r\n                            aRemovedCount++;\r\n                            surveyQuestions.splice(surveyQuestions.indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(filter_utils_1.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        window.ccsdkDebug ? console.log(surveyHandler.getSurveyQuestions()) : '';\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(12);\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n    Array.from = (function () {\r\n        var toStr = Object.prototype.toString;\r\n        var isCallable = function (fn) {\r\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n        };\r\n        var toInteger = function (value) {\r\n            var number = Number(value);\r\n            if (isNaN(number)) {\r\n                return 0;\r\n            }\r\n            if (number === 0 || !isFinite(number)) {\r\n                return number;\r\n            }\r\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n        };\r\n        var maxSafeInteger = Math.pow(2, 53) - 1;\r\n        var toLength = function (value) {\r\n            var len = toInteger(value);\r\n            return Math.min(Math.max(len, 0), maxSafeInteger);\r\n        };\r\n        // The length property of the from method is 1.\r\n        return function from(arrayLike /*, mapFn, thisArg */) {\r\n            // 1. Let C be the this value.\r\n            var C = this;\r\n            // 2. Let items be ToObject(arrayLike).\r\n            var items = Object(arrayLike);\r\n            // 3. ReturnIfAbrupt(items).\r\n            if (arrayLike == null) {\r\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n            }\r\n            // 4. If mapfn is undefined, then let mapping be false.\r\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n            var T;\r\n            if (typeof mapFn !== 'undefined') {\r\n                // 5. else\r\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n                if (!isCallable(mapFn)) {\r\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n                }\r\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n                if (arguments.length > 2) {\r\n                    T = arguments[2];\r\n                }\r\n            }\r\n            // 10. Let lenValue be Get(items, \"length\").\r\n            // 11. Let len be ToLength(lenValue).\r\n            var len = toLength(items.length);\r\n            // 13. If IsConstructor(C) is true, then\r\n            // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n            // of C with an argument list containing the single item len.\r\n            // 14. a. Else, Let A be ArrayCreate(len).\r\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n            // 16. Let k be 0.\r\n            var k = 0;\r\n            // 17. Repeat, while k < len… (also steps a - h)\r\n            var kValue;\r\n            while (k < len) {\r\n                kValue = items[k];\r\n                if (mapFn) {\r\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n                }\r\n                else {\r\n                    A[k] = kValue;\r\n                }\r\n                k += 1;\r\n            }\r\n            // 18. Let putStatus be Put(A, \"length\", len, true).\r\n            A.length = len;\r\n            // 20. Return A.\r\n            return A;\r\n        };\r\n    }());\r\n}\r\n// custom event polyfill\r\n(function () {\r\n    if (typeof window.CustomEvent === \"function\")\r\n        return false;\r\n    function CustomEvent(event, params) {\r\n        params = params || {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            detail: undefined\r\n        };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n// includes polyfill\r\nif (!Array.prototype.includes) {\r\n    Object.defineProperty(Array.prototype, 'includes', {\r\n        value: function (searchElement, fromIndex) {\r\n            if (this == null) {\r\n                throw new TypeError('\"this\" is null or not defined');\r\n            }\r\n            // 1. Let O be ? ToObject(this value).\r\n            var o = Object(this);\r\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n            var len = o.length >>> 0;\r\n            // 3. If len is 0, return false.\r\n            if (len === 0) {\r\n                return false;\r\n            }\r\n            // 4. Let n be ? ToInteger(fromIndex).\r\n            //    (If fromIndex is undefined, this step produces the value 0.)\r\n            var n = fromIndex | 0;\r\n            // 5. If n ≥ 0, then\r\n            //  a. Let k be n.\r\n            // 6. Else n < 0,\r\n            //  a. Let k be len + n.\r\n            //  b. If k < 0, let k be 0.\r\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n            function sameValueZero(x, y) {\r\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n            }\r\n            // 7. Repeat, while k < len\r\n            while (k < len) {\r\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                if (sameValueZero(o[k], searchElement)) {\r\n                    return true;\r\n                }\r\n                // c. Increase k by 1. \r\n                k++;\r\n            }\r\n            // 8. Return false\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(14);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    if (!SurveyManager_1.SurveyManager ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken] ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom) {\r\n        return;\r\n    }\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken, questionId, answerObject) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken, questionTag, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken, questionNote, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n//on exit detect\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(15);\r\nvar DomSurvey_1 = __webpack_require__(46);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(49);\r\nvar Triggers_1 = __webpack_require__(50);\r\nvar Request_1 = __webpack_require__(6);\r\nvar Config_1 = __webpack_require__(5);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.requester = new Request_1.RequestHelper();\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        // this.setupSurvey();\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.login = function (cb) {\r\n        var loginURL = Config_1.Config.API_URL + Config_1.Config.POST_LOGIN_TOKEN;\r\n        var self = this;\r\n        var successcb = function (logindata) {\r\n            self.debug ? console.log(logindata) : '';\r\n            self.loginData = logindata;\r\n            if (self.isThrottled) {\r\n                self.getSurveyThrottlingLogic(cb);\r\n            }\r\n            else {\r\n                cb();\r\n                return;\r\n            }\r\n        };\r\n        Request_1.RequestHelper.post(loginURL, {\r\n            grant_type: Constants_1.Constants.GRANT_TYPE,\r\n            username: this.config.username,\r\n            password: this.config.password\r\n        }, successcb, null);\r\n        this.debug ? console.log(\"login\") : '';\r\n    };\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var self = this;\r\n        var successcb = function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        };\r\n        Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var successcb = function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var _this = this;\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var successcb = function (throttleResponse) {\r\n            _this.debug ? console.log(throttleResponse) : '';\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers, successcb, null);\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var ccSDKElement = document.querySelector('.cc-sdk');\r\n        if (!ccSDKElement) {\r\n            return;\r\n        }\r\n        var ccSDKDir = ccSDKElement.getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n        ccSDKElement.setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var self = this;\r\n        var successcb = function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            //copy data.\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            self.dom.hideLoader();\r\n            if (self.surveyData) {\r\n                self.initSurveyQuestions();\r\n            }\r\n            else {\r\n                self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n            }\r\n        };\r\n        var errorcb = null;\r\n        this.survey.fetchQuestions(successcb, errorcb);\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        self.survey.displayWelcomeQuestion();\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (questionId, answer) {\r\n        //save this in this.surveyHandler\r\n        // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n        this.survey.fillPrefillDirect(questionId, answer);\r\n    };\r\n    Survey.prototype.fillPrefill = function (questionTag, answer) {\r\n        //save this in this.surveyHandler\r\n        this.survey.fillPrefill(questionTag, answer);\r\n    };\r\n    Survey.prototype.fillPrefillByNote = function (questionNote, answer) {\r\n        this.survey.fillPrefillByNote(questionNote, answer);\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(5);\r\nvar Request_1 = __webpack_require__(6);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(45);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar Select_1 = __webpack_require__(9);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this._prefillsPartiallyPosted = false;\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost(null, null);\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function (successcb, errorcb) {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        Request_1.RequestHelper.get(surveyUrl, successcb, errorcb);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupPrefill();\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.setupPrefill = function () {\r\n        var _this = this;\r\n        if (this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0) {\r\n            this.surveyData.preFill.map(function (response) {\r\n                _this.fillPrefillQuestionObject(response.questionId, response);\r\n            });\r\n        }\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function (warningWelcomeText) {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        if (warningWelcomeText) {\r\n            document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n        }\r\n        else {\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n        }\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n        if (this.surveyData.translated) {\r\n            options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        }\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            // self.postPrefillPartialAnswer( false, null, null );\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (tag, value) {\r\n        this.prefillWithTags[tag.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (note, value) {\r\n        this.prefillWithNote[note.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (questionId, value) {\r\n        this.prefillDirect[questionId] = value;\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        // console.log(this.questions);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function (fullSubmission, successcb, errorcb) {\r\n        if (fullSubmission === void 0) { fullSubmission = false; }\r\n        if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n            return;\r\n        }\r\n        this._prefillsPartiallyPosted = true;\r\n        if (!this.surveyData.partialResponseId) {\r\n            return;\r\n        }\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run successCB if there is one.\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            Request_1.RequestHelper.post(surveyPartialUrl, this.prefillResponses, successcb, errorcb);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                return response;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (question.id == id) {\r\n                return question;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete, successcb, errorcb) {\r\n        if (complete === void 0) { complete = false; }\r\n        this.postPrefillPartialAnswer(complete, null, null);\r\n        // let data = new FormData();\r\n        //in case of file.\r\n        // let input = document.querySelector('input[type=\"file\"]') ;\r\n        // data.append('file', input.files[0]);\r\n        var question = this.questionsToDisplay[index];\r\n        if (typeof question === 'undefined') {\r\n            //now?\r\n            // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n        }\r\n        var data = {\r\n            comparator: 0,\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        // if(this.isPartialAvailable == false) {\r\n        //   this.answers.push(data);\r\n        //   return;\r\n        // }\r\n        // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        //if this is the last of displayed question\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n        //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n        // } else {\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        // }\r\n        // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run success callback and return\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            Request_1.RequestHelper.post(surveyPartialUrl, data, successcb, errorcb);\r\n        }\r\n        else {\r\n            Request_1.RequestHelper.post(surveyPartialUrl, data, successcb, errorcb);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function (successcb, errorcb) {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        if (Object.keys(this.surveyAnswers).length == 0) {\r\n            return;\r\n        }\r\n        for (var answer in this.surveyAnswers) {\r\n            answersAll.push(this.surveyAnswers[answer]);\r\n            lastAnswer = this.surveyAnswers[answer];\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        if (lastAnswer) {\r\n            var _lastAnswer = {\r\n                text: lastAnswer.textInput,\r\n                number: lastAnswer.numberInput\r\n            };\r\n            this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true, null, null);\r\n        }\r\n        Request_1.RequestHelper.post(postSurveyFinalUrl, finalData, successcb, errorcb);\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var displayLegend = question.displayLegend;\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (displayLegend[0]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, displayLegend[0] + '-');\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (displayLegend[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, displayLegend[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0) {\r\n                            if (question.attributes.scaleColor !== 'Gradient') {\r\n                                tileColor = question.attributes.scaleColor;\r\n                            }\r\n                            else {\r\n                                tileColor = \"#02BAEE\";\r\n                            }\r\n                        }\r\n                        else if (question.presentationMode != null && question.presentationMode.indexOf(\"Color\") !== -1) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\r\n                <style>\\\r\n                #id' + question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : ' + tileColor + ';\\\r\n                }\\\r\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : ' + tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var displayLegend_1 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend_1) {\r\n                            if (displayLegend_1.length > 0) {\r\n                                startRangeLabel_1 = displayLegend_1[0] ? displayLegend_1[0] : null;\r\n                                endRangeLabel_1 = displayLegend_1[1] ? displayLegend_1[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        var legendDimension = void 0;\r\n                        if (window.isMobile) {\r\n                            if (endRange < 11) {\r\n                                var parentContainer = window.innerWidth - 40;\r\n                                var dimension = ((100 / (endRange - startRange + 1)) - .5) * parentContainer / 100;\r\n                                dimension = dimension > 48 ? 48 : dimension;\r\n                                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                                optionStyle = \"width:\" + dimension + \"px;height:\" + dimension + \"px;padding:\" + (dimension - 15) / 2 + \"px;\";\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                            options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                        }\r\n                        if ((endRange - startRange + 1) <= 11) {\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                            var optionMaxWidth = (((endRange - startRange + 1) * 38 / 2) - 5) + 'px';\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{legendStyle}}\", \"style=\\\"position:relative;width:\" + (mobileImageUrl ? '100%' : legendDimension + 'px') + \";min-height: 20px;\\\"\");\r\n                        questionTemplate = questionTemplate.replace(/\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class');\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect.length > 0) && multiSelect[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect.length > 1) && multiSelect[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(question.multiSelect, multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(question.multiSelect, multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(question.multiSelect, multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        options1 = self.util.generateRadioOptions(question.multiSelect, multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(question.multiSelect, multiSelect);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(question.multiSelect, multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Dropdown\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Date\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log('prefillTags', this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    if (question.conditionalFilter === null ||\r\n                        (question.conditionalFilter != null &&\r\n                            (question.conditionalFilter.filterquestions == null\r\n                                || question.conditionalFilter.filterquestions.length == 0))) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            // console.log(this.questionsToDisplay);\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined') {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug ? console.log('fillprefillwithtags', this.prefillWithTags) : '';\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug ? console.log('fillprefillwithtags', tag) : '';\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    window.ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags) : '';\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        // let bodyElement = <HTMLElement>document.\r\n        //   getElementsByTagName( \"body\" )[ 0 ];\r\n        // this.util.removeClass( bodyElement, \"blurr\" );\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(19)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(18)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul {\\n  padding-right: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  right: 0;\\n  width: 100%;\\n  left: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  right: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-right: 15px;\\n  text-align: right;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-left: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-left: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 50px 0 0px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-left: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-right: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: right;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: rtl;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-left: 75px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-left: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: left;\\n    bottom: 9px;\\n    left: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-left: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-left: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: auto;\\n    left: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-right: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    right: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: right;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: right;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-right: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-right: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-right: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: right;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    right: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    left: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  left: auto;\\n  right: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: auto;\\n  right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-right: 0;\\n  margin-left: 0;\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  left: 0%;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  left: -2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 15px !important;\\n  padding-right: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-left: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-left: 15px;\\n  padding-right: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-right: -4px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 0px 0 50px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 3% center;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-right: 20px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-right: 20px;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px;\\n    margin-left: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-left: 25px !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: left;\\n    width: 100%;\\n    margin-left: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-left: 15px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: right;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-right: 1px;\\n  margin-left: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  right: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .option-right-rating-text {\\n  right: auto;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px;\\n  text-align: left;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-left: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-left: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-left: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-right: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-left: 68px;\\n  width: 30px;\\n  padding-right: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-left: 0px;\\n  width: auto;\\n  padding-right: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-left: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-right: 25px;\\n    position: relative;\\n    text-align: right;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  right: 0px;\\n  line-height: 100px;\\n  left: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  right: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-left: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-right: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: right;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-left: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: left; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: right;\\n    width: 35%;\\n    left: 0; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: left;\\n    right: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-left: 45px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-left: 1px;\\n  margin-right: 0;\\n  float: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  right: calc(100% - 418px);\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  left: 0px;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  left: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  right: 0;\\n  width: 40%;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-left: 29px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-right: 19px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-left: 25px;\\n  text-align: left;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-right: 0;\\n  margin-left: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc(100% - ( 100% - 44px)) center;\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-right: 0px;\\n    margin-left: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 10px;\\n    margin-right: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    right: 17px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 7px;\\n    text-align: right;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 20px;\\n    right: auto !important;\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-left: 0px;\\n    padding-right: 5px;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-left: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc(100% - ( 100% - 44px)) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-left: 39px;\\n    text-align: left;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 322px);\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    right: 13px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    right: auto !important;\\n    left: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    left: auto !important;\\n    right: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 258px);\\n    left: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 22px 0 84px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: right;\\n  padding: 5px 5px 5px 20px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  left: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-left: 1px solid #222;\\n  transform: rotate(-45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  right: 0;\\n  left: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: right;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-right: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 84px 0 22px;\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  right: 2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 0px 4px 4px 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 4px 0 0px 4px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 25px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  right: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-left-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  right: 4px;\\n  transform: rotate(45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-right: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-right: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-left: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  right: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: right;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  right: 0px;\\n  left: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  right: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  left: 28px;\\n  right: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px;\\n    margin-right: 0; } }\\n\\n/** Utilities **/\\n.show {\\n  display: block !important; }\\n\\n.show-inline {\\n  display: inline-block !important; }\\n\\n.hide {\\n  display: none !important; }\\n\\n.bottom {\\n  bottom: 0; }\\n\\n.right {\\n  left: 0; }\\n\\n.left {\\n  right: 0; }\\n\\n.top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  right: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); }\\n  body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\\n    -webkit-filter: blur(15px);\\n    -moz-filter: blur(15px);\\n    -ms-filter: blur(15px);\\n    -o-filter: blur(15px);\\n    filter: blur(15px); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  right: 0;\\n  left: auto;\\n  margin-right: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    right: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0;\\n    left: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(-5px);\\n  -moz-transform: translateX(-5px);\\n  -ms-transform: translateX(-5px);\\n  -o-transform: translateX(-5px);\\n  transform: translateX(-5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  left: 0;\\n  right: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  right: 0;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\" : \".cc-sdk ul {\\n  padding-left: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  left: 0;\\n  width: 100%;\\n  right: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  left: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-left: 15px;\\n  text-align: left;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-right: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-right: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 0px 0 50px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-right: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-left: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: left;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: ltr;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-right: 75px;\\n  font-size: 16px /*rtl:14px*/;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-right: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: right;\\n    bottom: 9px;\\n    right: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-right: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-right: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: auto;\\n    right: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-left: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    left: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: left;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: left;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-left: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-left: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-left: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: left;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    left: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    right: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  right: auto;\\n  left: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: auto;\\n  left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-left: 0;\\n  margin-right: 0;\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  right: 0%;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  right: -2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 15px !important;\\n  padding-left: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-right: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-right: 15px;\\n  padding-left: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-left: -4px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 50px 0 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 97% center;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-left: 20px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-left: 20px;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px;\\n    margin-right: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-right: 25px !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: right;\\n    width: 100%;\\n    margin-right: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-right: 15px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important;\\n    margin-right: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: left;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-left: 1px;\\n  margin-right: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  left: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .option-right-rating-text {\\n  left: auto;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px;\\n  text-align: right;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-right: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-right: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-right: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-left: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-right: 68px;\\n  width: 30px;\\n  padding-left: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-right: 0px;\\n  width: auto;\\n  padding-left: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-right: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-left: 25px;\\n    position: relative;\\n    text-align: left;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  left: 0px;\\n  line-height: 100px;\\n  right: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-right: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-left: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: left;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-right: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: right; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: left;\\n    width: 35%;\\n    right: 0; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: right;\\n    left: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-right: 45px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-right: 1px;\\n  margin-left: 0;\\n  float: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  left: calc(100% - 418px);\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  right: 0px;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  right: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  left: 0;\\n  width: 40%;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-right: 29px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-left: 19px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-right: 25px;\\n  text-align: right;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-left: 0;\\n  margin-right: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc( 100% - 44px) center;\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-left: 0px;\\n    margin-right: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 10px;\\n    margin-left: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    left: 17px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 7px;\\n    text-align: left;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 20px;\\n    left: auto !important;\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-right: 0px;\\n    padding-left: 5px;\\n    margin-right: 0;\\n    margin-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-right: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc( 100% - 44px) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-right: 39px;\\n    text-align: right;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 322px);\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    left: 13px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    left: auto !important;\\n    right: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    right: auto !important;\\n    left: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 258px);\\n    right: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 84px 0 22px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: left;\\n  padding: 5px 20px 5px 5px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  right: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-right: 1px solid #222;\\n  transform: rotate(45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(-135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: left;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-left: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 22px 0 84px;\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  left: 2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 0px 0 4px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 0 4px 4px 0px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 25px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-right-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  left: 4px;\\n  transform: rotate(-45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-left: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-left: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-right: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  left: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: left;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  left: 0px;\\n  right: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  left: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  right: 28px;\\n  left: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px;\\n    margin-left: 0; } }\\n\\n/** Utilities **/\\n.show {\\n  display: block !important; }\\n\\n.show-inline {\\n  display: inline-block !important; }\\n\\n.hide {\\n  display: none !important; }\\n\\n.bottom {\\n  bottom: 0; }\\n\\n.right {\\n  right: 0; }\\n\\n.left {\\n  left: 0; }\\n\\n.top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); }\\n  body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\\n    -webkit-filter: blur(15px);\\n    -moz-filter: blur(15px);\\n    -ms-filter: blur(15px);\\n    -o-filter: blur(15px);\\n    filter: blur(15px); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  left: 0;\\n  right: auto;\\n  margin-left: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    left: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0;\\n    right: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(5px);\\n  -moz-transform: translateX(5px);\\n  -ms-transform: translateX(5px);\\n  -o-transform: translateX(5px);\\n  transform: translateX(5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(-90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  right: 0;\\n  left: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(20);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id=\\\"{{surveyToken}}-survey\\\">\\r\\n\\t<div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\">\\r\\n\\t\\t<div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-left-icon\\\">\\r\\n\\t\\t\\t<span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span>\\r\\n\\t\\t\\t<ul class=\\\"cc-sdk-loader\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"cc-sdk-chart\\\" data-percent=\\\"75\\\"></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-right-icon\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg\\\" class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-survey-container\\\">\\r\\n\\t\\t\\t<div class=\\\"cc-survey-content\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"cc-questions-container\\\">\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"submit-icon act-cc-button-next\\\"></div>\\r\\n\\t\\t\\t<div class=\\\"{{location}} progress-bar\\\" id=\\\"progressBar\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"progress-line\\\" id=\\\"progress-line\\\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id=\\\"{{surveyToken}}-welcome\\\">\\r\\n  <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div>\\r\\n  <div class=\\\"cc-loaderimg hide\\\">\\r\\n    <svg version=\\\"1.1\\\" id=\\\"L9\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\r\\n      viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=\\\"preserve\\\">\\r\\n      <path fill=\\\"red\\\" d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\">\\r\\n        <animateTransform attributeName=\\\"transform\\\" attributeType=\\\"XML\\\" type=\\\"rotate\\\" dur=\\\"1s\\\" from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=\\\"indefinite\\\"\\r\\n        />\\r\\n      </path>\\r\\n    </svg>\\r\\n  </div>\\r\\n  <!-- <svg class=\\\"cc-sdk-timer\\\">\\r\\n    <circle r=\\\"8\\\" cx=\\\"20\\\" cy=\\\"20\\\" stroke=\\\"black\\\" stroke-width=\\\"0\\\" fill=\\\"red\\\"></circle>\\r\\n  </svg> -->\\r\\n  <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\">\\r\\n  <div class=\\\"cc-message-box\\\">\\r\\n    <h2 class=\\\"cc-message-box__text\\\">{{question}}</h2>\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"cc-message-box__btn act-cc-{{action}} mobile-hide\\\"  id=\\\"\\\">{{button}}</a>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"singleline\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"cc-sdk-form-control\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"number\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"cc-sdk-form-control\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"multiline\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <textarea class=\\\"multiline-box cc-sdk-form-control\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Share your thoughts...\\\"></textarea>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"checkbox\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-big-list-container\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=\\\"radio\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"radioImage\\\"\\r\\n  data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=\\\"scale\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      {{optionsRange}}\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\">\\r\\n        <img src={{mobileImageUrl}} class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n        <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"0\\\" title=\\\"0\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"83,193,62,228,38,212,23,193,57,167\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"54,165,21,189,11,173,4,154,2,140,43,134\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"43,131,2,135,1,118,5,93,8,83,45,97\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"48,92,10,78,17,61,28,44,39,32,66,66\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"70,61,42,30,55,20,70,14,91,5,101,45\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"105,44,92,5,113,2,134,3,147,5,139,46\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"141,46,150,6,169,11,184,19,200,30,172,63\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"175,63,202,34,218,48,227,66,232,78,194,93\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"196,97,233,81,239,103,240,118,240,135,199,130\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"199,135,240,140,236,159,229,175,221,189,187,167\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"183,169,217,191,204,212,178,229,158,192\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\">\\r\\n        <img src={{mobileImageUrl}} class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map2\\\" />\\r\\n        <map name=\\\"Map2\\\" id=\\\"Map2\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"67,180,40,210,26,195,15,176,11,169,47,152\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"48,149,9,163,2,140,1,124,3,110,45,115\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"44,110,4,105,8,79,17,67,22,57,58,79\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"58,76,24,54,33,39,48,29,65,18,85,54\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"87,51,68,15,85,7,106,3,120,3,122,45\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"123,42,123,0,141,2,163,8,176,14,157,52\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"159,53,180,16,201,30,212,44,220,54,186,77\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"188,80,222,55,229,69,236,83,241,108,199,111\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"200,116,239,112,241,128,240,146,234,165,196,150\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,153,233,168,225,187,212,202,202,212,175,181\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"legend-container\\\" {{legendStyle}}>\\r\\n        <span class=\\\"option-left-rating-text {{optionLeftExtraClass}} {{radialLegend}}-left\\\" style=\\\"max-width:maxWidth;\\\">{{leftLabel}}</span>\\r\\n        <span class=\\\"option-right-rating-text {{optionRightExtraClass}} {{radialLegend}}-right\\\" style=\\\"max-width:maxWidth;\\\">{{rightLabel}}</span>\\r\\n      </div>\\r\\n      <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n{{style}}\";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-0\\\">\\r\\n            <label for=\\\"service-0\\\"></label>\\r\\n          </div>\\r\\n          <span>Completely Disagree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-1\\\">\\r\\n            <label for=\\\"service-1\\\"></label>\\r\\n          </div>\\r\\n          <span>Somewhat Disagree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-2\\\">\\r\\n            <label for=\\\"service-2\\\"></label>\\r\\n          </div>\\r\\n          <span>Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-3\\\">\\r\\n            <label for=\\\"service-3\\\"></label>\\r\\n          </div>\\r\\n          <span>Somewhat Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-4\\\">\\r\\n            <label for=\\\"service-4\\\"></label>\\r\\n          </div>\\r\\n          <span>Completely Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-0\\\">\\r\\n            <label for=\\\"service-0\\\"></label>\\r\\n          </div>\\r\\n          <span>Very Unsatisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-1\\\">\\r\\n            <label for=\\\"service-1\\\"></label>\\r\\n          </div>\\r\\n          <span>Unsatisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-2\\\">\\r\\n            <label for=\\\"service-2\\\"></label>\\r\\n          </div>\\r\\n          <span>Neutral</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-3\\\">\\r\\n            <label for=\\\"service-3\\\"></label>\\r\\n          </div>\\r\\n          <span>Satisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-4\\\">\\r\\n            <label for=\\\"service-4\\\"></label>\\r\\n          </div>\\r\\n          <span>Very Satisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"nps\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div class=\\\"cc-options-container\\\">\\r\\n        <span data-rating=\\\"0\\\" class=\\\"option-number-item mobile-hide option-zero\\\">0</span>\\r\\n        <span data-rating=\\\"1\\\" class=\\\"option-number-item mobile-hide option-one\\\">1</span>\\r\\n        <span data-rating=\\\"2\\\" class=\\\"option-number-item mobile-hide option-two\\\">2</span>\\r\\n        <span data-rating=\\\"3\\\" class=\\\"option-number-item mobile-hide option-three\\\">3</span>\\r\\n        <span data-rating=\\\"4\\\" class=\\\"option-number-item mobile-hide option-four\\\">4</span>\\r\\n        <span data-rating=\\\"5\\\" class=\\\"option-number-item mobile-hide option-five\\\">5</span>\\r\\n        <span data-rating=\\\"6\\\" class=\\\"option-number-item mobile-hide option-six\\\">6</span>\\r\\n        <span data-rating=\\\"7\\\" class=\\\"option-number-item mobile-hide option-seven\\\">7</span>\\r\\n        <span data-rating=\\\"8\\\" class=\\\"option-number-item mobile-hide option-eight\\\">8</span>\\r\\n        <span data-rating=\\\"9\\\" class=\\\"option-number-item mobile-hide option-nine\\\">9</span>\\r\\n        <span data-rating=\\\"10\\\" class=\\\"option-number-item mobile-hide option-ten\\\">10</span>\\r\\n        <div class=\\\"circle-image desktop-hide\\\">\\r\\n          <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/circle.svg\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n          <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"86,199,61,177,25,201,38,219,52,230,66,238\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"59,173,22,198,12,180,5,160,4,146,44,138\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"44,134,49,101,8,84,3,98,0,116,2,141\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"49,97,71,68,42,33,25,54,14,71,10,81\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"74,65,106,47,94,5,70,14,46,31\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"144,47,154,4,135,1,114,1,98,4,108,48\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"149,48,157,5,183,15,209,30,180,65\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"183,67,211,34,231,56,243,79,204,97\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"203,100,245,85,251,106,252,124,251,141,207,135\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"208,140,251,146,245,169,231,197,194,172\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,179,229,201,218,218,202,230,185,238,166,200\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n          </map>\\r\\n          <!-- <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"49,192,91,229,111,191,83,169\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"29,139,47,189,83,166,70,135\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"35,83,29,136,71,131,75,96\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"36,79,67,35,95,66,75,94\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"69,32,117,7,127,49,97,64\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"120,7,175,7,165,48,131,48\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"178,7,168,49,197,64,225,32\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"200,67,220,95,260,80,229,35\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"221,98,224,131,266,136,259,83\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"224,135,266,139,248,191,212,167\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"184,191,203,230,246,194,211,169\\\" />\\r\\n            </map> -->\\r\\n          <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n        </div>\\r\\n        <span class=\\\"ccsdk-clearfix\\\"></span>\\r\\n        <span class=\\\"option-left-rating-text radial-legend-left\\\">Not at all likely</span>\\r\\n        <span class=\\\"option-right-rating-text radial-legend-right\\\">Very likely</span>\\r\\n        <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" data-selection-value=\\\"{{model}}\\\" placeholder=\\\"Select\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" placeholder=\\\"Select\\\" data-type=\\\"multiple\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-smile-box cc-one\\\" data-rating=\\\"1\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-two\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-five\\\" data-rating=\\\"5\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-smile-box cc-five\\\" data-rating=\\\"5\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-two\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-one\\\" data-rating=\\\"1\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-right-rating-text\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-left-rating-text\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"star\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"1\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"5\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"slider\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n        <p>\\r\\n            <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n        <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content rating-color cc-sdk-range-slider\\\" id=\\\"{{questionId}}\\\">\\r\\n        <div class=\\\"cc-question-container__slider\\\">\\r\\n            <input type=\\\"range\\\" value=\\\"{{min}}\\\" min=\\\"{{min}}\\\" max=\\\"{{max}}\\\" class=\\\"cc-sdk-range cc-blue\\\">\\r\\n            <div class=\\\"legend-container\\\" {{legendStyle}}>\\r\\n                <span class=\\\"option-left-rating-text\\\">{{minLabel}}{{min}}</span>\\r\\n                <span class=\\\"option-right-rating-text\\\">{{maxLabel}}{{max}}</span>\\r\\n                <span class=\\\"slider-tip act-slider-tip\\\"></span>\\r\\n            </div>\\r\\n            <!-- <span class=\\\"slider-tip act-slider-tip\\\">{{min}}</span> -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-img-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label for=\\\"{{qId}}-img-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"{{qId}}-img-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">\\r\\n      <img src=\\\"{{image}}\\\" /> {{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label for=\\\"{{qId}}-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"{{qId}}-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox\\\">\\r\\n    <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"check-{{labelFor}}\\\">{{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox\\\">\\r\\n    <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n      <img src=\\\"{{image}}\\\" /> {{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=\\\"cc-thankyou-container\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>{{question}}</p>\\r\\n    <p class=\\\"cc-thankyou-powered\\\"><span class=\\\"cc-thankyou-logo\\\"></span>Delight powered by Cloudcherry</p>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <!-- <button>{{button}}</button> -->\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\"\\r\\n  data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\"></span>Select language</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">* Mandatory</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" placeholder=\\\"Select\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionalText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionalText_1 = question.text.split(':');\r\n            if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n                conditionalText_1 = conditionalText_1[0] + ': <br><span class=\"text-normal\">' + conditionalText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionalText_1 = conditionalText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (filter_utils_1.checkLanguage(surveyHandler, fOption)\r\n                            || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                                && surveyHandler.ccsdk.config.language.toLowerCase().includes('default')\r\n                                && fOption.language === null)) {\r\n                            var groupTitle = void 0;\r\n                            if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                                groupTitle = conditionalText.split(':')[0];\r\n                                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n                            }\r\n                            else {\r\n                                conditionalText = fOption.text;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionalText;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(9);\r\nvar Theme_1 = __webpack_require__(47);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar Slider_1 = __webpack_require__(48);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (this.ccsdk.surveyData.translated === null || (this.ccsdk.surveyData.translated && Object.keys(this.ccsdk.surveyData.translated).length < 1)) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            window.ccsdkDebug ? console.log('previous answer', this.ccsdk.survey.answers[this.currentQuestionId]) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        window.ccsdkDebug ? console.log('next question q response end', this.qResponse) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        window.ccsdkDebug ? console.log(this.qIndex) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        // console.debug()\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"language select - previous listeners exists\") : '';\r\n            this.removePrevListener('.cc-language-select');\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        // console.log( compiledTemplate );\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        // console.log( 'qtype', qType )\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"scale question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('scale question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('scale previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"nps question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            window.ccsdkDebug ? console.log('Checkbox selected', rating) : '';\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-star-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            console.log('dispatching event in csat', this);\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        // console.log( 'singleline qResponse', self.qResponse );\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                var question = this.ccsdk.survey.getQuestionById(questionId);\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text, question, this.ccsdk.survey);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].getAttribute('data-selection-value');\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = \"\\n\\t\\t.cc-sdk #progressBar{\\n\\t\\t\\tbackground : \" + this.brandColorDark + \";\\n\\t\\t}\\n\\t\\t.cc-sdk #progress-line{ \\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n\\t\\t\\tbackground:\" + brandColor + \";\\n\\t\\t}\\n\\t\\t.ccsdk-overlay.glass{\\n\\t\\t\\tbackground-color:\" + this.util.hexToRGB(brandColor, .5) + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n\\t\\t\\tborder-color: #fff;\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-sdk-form-control:focus {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-message-box__btn{\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t\\tcolor:#fff;\\n\\t\\t}\\n\\t\\t\\t.cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t[dir=\\\"rtl\\\"].cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-question-container__required-label{\\n\\t\\t\\tcolor: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-webkit-slider-runnable-track{\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\t   background: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: -webkit-linear-gradient(-45deg, \" + brandColor + \"' 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t   }\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-moz-range-track {\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\tbackground: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: -webkit-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t}\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-webkit-slider-thumb{\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-moz-range-thumb {\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk svg.timer circle {\\n\\t\\t\\tanimation: countdown \" + time + \"s linear 1 forwards;\\n\\t\\t\\tstroke: \" + brandColor + \";\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-checkbox label:hover:before{\\n\\t\\t\\t\\tborder: solid 1px \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t @media (max-width: 768px){\\n\\t \\t\\t\\t.ccsdk-overlay.glass{\\n\\t \\t\\t\\tbackground-color:rgba(255,255,255,.85);\\n\\t \\t\\t\\tbackground-image:none;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container{\\n\\t\\t\\t\\t\\tbackground-color : transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\\n\\t\\t\\t\\t\\tbackground-color : \" + this.util.hexToRGB(brandColor, .9) + \";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\n\\t\\t\\t\\t\\tcolor:#fff;\\n\\t\\t\\t\\t}\\n\\t\\t\";\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('cc-sdk-range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(51);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e93f47e97948386e5054","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || p.msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: string[], translatedArr: string[] ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let translatedOpt = ( translatedArr[ i ] || arr[ i ] ).split( ';' );\r\n        let arrOpt = arr[ i ].split( ';' );\r\n        res += '<option value=\"' + arrOpt[ 0 ] + '\">' + ( translatedOpt[ 0 ] ) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && ( opt.indexOf( ';' ) !== -1 ) && ( opt.indexOf( '.' ) !== -1 );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        let translatedOpt = translatedArr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: string, translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if ( !SurveyManager.surveyInstances || !SurveyManager.surveyInstances[ surveyId ] ) {\r\n      console.error( 'Microsurvey not properly set up. Contact Support.' );\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/MICROSURVEY\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n}\r\n\r\nexport { Config };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json; charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), { \"Content-Type\": \"application/json; charset=utf-8\" }, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\n\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: \"\",\r\n  question_start: \"\",\r\n  question_text: \"\",\r\n  question_number: \"\",\r\n  question_scale: \"\",\r\n  question_csat_agreement_5: \"\",\r\n  question_csat_satisfaction_5: \"\",\r\n  question_nps: \"\",\r\n  question_multi_line_text: \"\",\r\n  question_multi_select: \"\",\r\n  question_radio: \"\",\r\n  question_radio_image: \"\",\r\n  question_checkbox: \"\",\r\n  question_select: \"\",\r\n  question_smile_5: \"\",\r\n  question_smile_5_inverted: \"\",\r\n  question_star_5: \"\",\r\n  question_slider: \"\",\r\n  option_radio_image: \"\",\r\n  option_radio: \"\",\r\n  option_checkbox: \"\",\r\n  option_checkbox_image: \"\",\r\n  thankyou: \"\",\r\n  language_selector: \"\"\r\n\r\n};\r\n\r\n\r\ntemplates.question_survey = QuestionSurvey;\r\n\r\ntemplates.question_start = QuestionStart;\r\n\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\n\r\n\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\n\r\ntemplates.question_slider = QuestionSlider;\r\n\r\n\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\n\r\n\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\n\r\n\r\ntemplates.question_select = QuestionSelect;\r\n\r\n\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\n\r\ntemplates.question_star_5 = QuestionStar;\r\n\r\ntemplates.question_checkbox = QuestionCheckbox;\r\n\r\ntemplates.question_radio = QuestionRadio;\r\n\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\n\r\ntemplates.thankyou = ThankYou;\r\n\r\ntemplates.language_selector = LanguageSelector;\r\n\r\n\r\nexport { templates };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","export function isAnd( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.answerCheck[ 0 ] === \"lt\" || filterQuestion.answerCheck[ 0 ] === \"gt\" || filterQuestion.answerCheck[ 0 ] === \"eq\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy( surveyHandler: any, filterQuestion: any ): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId( filterQuestion.questionId );\r\n  if ( isNumberCheck( filterQuestion ) ) {\r\n    if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"lt\" ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput < filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"gt\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput > filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"eq\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput == filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if ( filterQuestion.answerCheck[ 0 ] && filterQuestion.answerCheck[ 0 ].toLowerCase() === 'any text' ) {\r\n      if ( answer.textInput && answer.textInput !== ' ' ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById( filterQuestion.questionId );\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if ( !answer ) {\r\n      return false;\r\n    }\r\n    for ( let aAnswer of filterQuestion.answerCheck ) {\r\n      if ( question.displayType === 'MultiSelect' ) {\r\n        let selectedOptions = answer.textInput.split( ',' );\r\n        if ( selectedOptions.indexOf( aAnswer ) !== -1 ) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if ( questionAnswerText === aAnswer ) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare( a: any, b: any ) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language \r\n  }\r\n  return false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/filter-utils.ts","import { DomUtilities } from \"./DomUtilities\";\r\nimport {LanguageTextFilter} from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor( qId: string ) {\r\n    this.qId = qId;\r\n  }\r\n  init( qId: string ) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    this.$html = document.querySelectorAll( \"html\" )[ 0 ];\r\n    var select = document.querySelectorAll( \"#\" + qId + \" .cc-select\" );\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[ 0 ].getAttribute( 'data-type' );\r\n    Array.prototype.forEach.call( select, function ( el, i ) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll( \"#\" + qId + \" .cc-select-options\" );\r\n      var classes = self.getAttribute( \"class\" ),\r\n        id = self.getAttribute( \"id\" ),\r\n        name = self.getAttribute( \"name\" );\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute( \"placeholder\" ) + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll( \"option\" );\r\n      Array.prototype.forEach.call( options, function ( el, i ) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute( \"class\" ) + '\" data-value=\"' + el.getAttribute( \"value\" ) + '\">' + el.innerHTML + '</span>';\r\n      } );\r\n      template += '</div></div></div>';\r\n      parent.util.addClass( self, 'hide' );\r\n      self.insertAdjacentHTML( 'afterend', template );\r\n    } );\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-option\", function ( e ) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-option', this ) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute( 'data-value' );\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( select ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectOptions ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectWrapper ) : '';\r\n      let selectionTrigger = select.querySelectorAll( '.cc-select-trigger' )[ 0 ];\r\n\r\n      self.util.addClass( this, \"selection\" );\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute( 'data-selection-value' ) || '';\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n      if ( self.type !== 'multiple' ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        ( window as any ).ccsdkDebug ? console.log( 'selected option', selectedOptionText ) : '';\r\n        self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n        selectionTrigger.setAttribute( 'data-selection-value', value );\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );\r\n        self.util.addClass( self, 'selection' );\r\n      } else {\r\n        ( window as any ).ccsdkDebug ? console.log( selectedOptionText ) : '';\r\n        if ( selectedOptionText != 'Select' ) {\r\n            selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n            selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          ( window as any ).ccsdkDebug ? console.log( selfOption.textContent ) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = selectedValueText;\r\n        selectionTrigger.setAttribute( 'data-selection-value', selectedValueText );\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );        \r\n        self.selectOptions(selectedValueText);\r\n        \r\n        selectedValueText\r\n        if ( selectedOptionText.length < 1 ) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    } );\r\n    this.listeners.push( ref2 );\r\n    ref2.internalHandler = this.util.listener( this.$body, ref2.type, ref2.id, ref2.cb );\r\n    let ref = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-trigger\", function ( e ) {\r\n      self.$html.addEventListener( 'click', function ( e ) {\r\n        if ( !self.util.hasClass( e.target, 'cc-select-option' ) ) {\r\n          self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n          self.$html.removeEventListener( 'click', function () {\r\n          } );\r\n        }\r\n      } )\r\n      var ccSelect = this.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-trigger', ccSelect ) : '';\r\n      self.util.toggleClass( ccSelect, \"opened\" );\r\n      e.stopPropagation();\r\n    } );\r\n    this.listeners.push( ref );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for ( let listener of this.listeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue( value: string, question, surveyHandler ) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll( \"#\" + qId + \" select\" )[ 0 ];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll( \"#\" + qId + \" .cc-select-trigger\" )[ 0 ];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x) );\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption( el: any ) {\r\n    this.util.addClass( el, 'selection' );\r\n  }\r\n\r\n  removeOption(el){\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions( csv: string ) {\r\n    let self = this;\r\n    if ( csv ) {\r\n      let allOptions = csv.split( ',' );\r\n      for ( let option of allOptions ) {\r\n        let domOptions = document.querySelectorAll( \"#\" + self.qId + \" .cc-select-option\" );\r\n        Array.prototype.forEach.call( domOptions, function ( el, i ) {\r\n          if ( el.getAttribute( 'data-value' ) == option ) {\r\n            self.selectOption( el );\r\n          } else {\r\n            \r\n          }\r\n        } );\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string){\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if(itemIndex !== -1){\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif ( !( <any>Array ).from ) {\r\n  ( <any>Array ).from = ( function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function ( fn ) {\r\n      return typeof fn === 'function' || toStr.call( fn ) === '[object Function]';\r\n    };\r\n    var toInteger = function ( value ) {\r\n      var number = Number( value );\r\n      if ( isNaN( number ) ) {\r\n        return 0;\r\n      }\r\n      if ( number === 0 || !isFinite( number ) ) {\r\n        return number;\r\n      }\r\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\r\n    };\r\n    var maxSafeInteger = Math.pow( 2, 53 ) - 1;\r\n    var toLength = function ( value ) {\r\n      var len = toInteger( value );\r\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from( arrayLike /*, mapFn, thisArg */ ) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object( arrayLike );\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if ( arrayLike == null ) {\r\n        throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\r\n      var T;\r\n      if ( typeof mapFn !== 'undefined' ) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if ( !isCallable( mapFn ) ) {\r\n          throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if ( arguments.length > 2 ) {\r\n          T = arguments[ 2 ];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength( items.length );\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while ( k < len ) {\r\n        kValue = items[ k ];\r\n        if ( mapFn ) {\r\n          A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\r\n        } else {\r\n          A[ k ] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }() );\r\n}\r\n\r\n// custom event polyfill\r\n( function () {\r\n\r\n  if ( typeof ( <any>window ).CustomEvent === \"function\" ) return false;\r\n\r\n  function CustomEvent( event, params ) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent( 'CustomEvent' );\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = ( <any>window ).Event.prototype;\r\n\r\n  ( <any>window ).CustomEvent = CustomEvent;\r\n} )();\r\n\r\n// includes polyfill\r\nif ( !( <any>Array.prototype ).includes ) {\r\n  Object.defineProperty( Array.prototype, 'includes', {\r\n    value: function ( searchElement, fromIndex ) {\r\n\r\n      if ( this == null ) {\r\n        throw new TypeError( '\"this\" is null or not defined' );\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object( this );\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if ( len === 0 ) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max( n >= 0 ? n : len - Math.abs( n ), 0 );\r\n\r\n      function sameValueZero( x, y ) {\r\n        return x === y || ( typeof x === 'number' && typeof y === 'number' && isNaN( x ) && isNaN( y ) );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while ( k < len ) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if ( sameValueZero( o[ k ], searchElement ) ) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  } );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills/ccsdk.polyfill.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { Survey } from \"./Survey\";\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n( window as any ).globalSurveyRunning = false;\r\n( window as any ).ccsdkDebug = false;\r\n( window as any ).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif ( typeof ( window as any ).CCSDK !== 'undefined' ) {\r\n  var queue = ( window as any ).CCSDK.q;\r\n  ( window as any ).CCSDK = function () {\r\n    if ( arguments && arguments.length == 0 ) {\r\n      var time = new Date();\r\n    } else {\r\n      ( window as any ).ccsdkDebug ? console.log( arguments ) : '';\r\n      var args = ( Array as any ).from( arguments );\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( functionName ) : '';\r\n      return localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  };\r\n  if ( queue ) {\r\n    for ( var q of queue ) {\r\n      var args = ( Array as any ).from( q );\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent( 'Event' );\r\n  eventCCReady.initEvent( 'ccready', true, true );\r\n  document.dispatchEvent( eventCCReady );\r\n\r\n}\r\n\r\nexport function init( surveyToken: any ) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  let config = ( typeof arguments[ 1 ] === 'object' ) ? arguments[ 1 ] : {};\r\n  //create survey instance\r\n  if ( typeof Cookie.get( surveyToken + '-finish' ) !== 'undefined' && Cookie.get( surveyToken + '-finish' ) ) {\r\n    return;\r\n  }\r\n  if ( typeof config.isActive !== 'undefined' && config.isActive ) {\r\n    SurveyManager.surveyInstances[ surveyToken ] = ( SurveyManager.surveyInstances[ surveyToken ] ) ? SurveyManager.surveyInstances[ surveyToken ] : new Survey( surveyToken, config );\r\n    return SurveyManager.surveyInstances[ surveyToken ];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy( surveyToken: string ) {\r\n  //remove from trigger manager, delete instance.\r\n  if ( !SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[ surveyToken ] ||\r\n    !SurveyManager.surveyInstances[ surveyToken ].dom ) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n  delete SurveyManager.surveyInstances[ surveyToken ];\r\n}\r\n//\r\nexport function trigger( surveyToken: string, type: string, target: string ) {\r\n  ( window as any ).ccsdkDebug ? console.log( SurveyManager.surveyInstances ) : '';\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].trigger( type, target );\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on( surveyToken: string, type: string, callback: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].on( type, callback );\r\n  }\r\n}\r\n\r\nexport function prefill( surveyToken: string, questionId: string, answerObject: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( questionId, answerObject );\r\n  }\r\n}\r\n\r\nexport function prefillByTag( surveyToken: string, questionTag: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefill( questionTag, answer );\r\n  }\r\n}\r\n\r\nexport function prefillByNote( surveyToken: string, questionNote: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefillByNote( questionNote, answer );\r\n  }\r\n}\r\n\r\nexport function show( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].show();\r\n  }\r\n}\r\n\r\nexport function hide( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n    SurveyManager.surveyInstances[ surveyToken ].hide();\r\n  }\r\n}\r\n\r\n//on exit detect\r\n\r\n\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\n\r\nimport { templates } from \"./helpers/templates\"\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: number;\r\n  requester = new RequestHelper();\r\n\r\n  constructor( surveyToken: string, config: CCSDKConfig ) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    if ( typeof this.config.textDirection === 'undefined' ) {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n    // this.setupSurvey();\r\n    this.triggers = new Triggers( this );\r\n    TriggerManager.addSurvey( this.surveyToken, this.triggers );\r\n    this.survey = new SurveyHandler( this );\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor ) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger( document, this.surveyToken + '-ready', { 'survey': this } );\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger( \"click\", this.config.cssSelector );\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers( this.config );\r\n    // this.login(function() {\r\n    //on login\r\n    // });\r\n  }\r\n\r\n  login( cb ) {\r\n    let loginURL = Config.API_URL + Config.POST_LOGIN_TOKEN;\r\n    let self = this;\r\n    let successcb = function ( logindata ) {\r\n      self.debug ? console.log( logindata ) : '';\r\n      self.loginData = logindata;\r\n      if ( self.isThrottled ) {\r\n        self.getSurveyThrottlingLogic( cb );\r\n      } else {\r\n        cb();\r\n        return;\r\n      }\r\n    }\r\n\r\n    RequestHelper.post( loginURL,\r\n      {\r\n        grant_type: Constants.GRANT_TYPE,\r\n        username: this.config.username,\r\n        password: this.config.password\r\n      }\r\n      , successcb, null );\r\n\r\n    this.debug ? console.log( \"login\" ) : '';\r\n  }\r\n\r\n  getSurveyThrottlingLogic( cb ) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace( '{location}', this.config.location );\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function ( data ) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling( cb );\r\n    };\r\n\r\n    RequestHelper.getWithHeaders( getThrottleUrl, headers, successcb, null );\r\n  }\r\n\r\n  checkThrottling( cb ) {\r\n    if ( this.thorttlingLogic != null ) {\r\n      if ( this.thorttlingLogic.inputIds == null ) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push( this.thorttlingLogic[ this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] );\r\n      if ( this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null ) {\r\n        this.thorttlingLogic.logics[ 0 ].filter.location = [];\r\n        this.thorttlingLogic.logics[ 0 ].filter.location.push( this.config.location );\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function ( throttleResponse ) {\r\n\r\n      if ( typeof throttleResponse[ 0 ][ self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] && throttleResponse[ 0 ].value ) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders( postThrottleUrl, this.thorttlingLogic, headers, successcb, null );\r\n  }\r\n\r\n  addThrottlingEntries( isOpen: boolean ) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = ( throttleResponse ) => {\r\n      this.debug ? console.log( throttleResponse ) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders( addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null );\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector( '.cc-sdk' );\r\n    if ( !ccSDKElement ) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute( 'dir' );\r\n    let direction: string = ( this.config && this.config.textDirection ) ?\r\n      this.config.textDirection : ( ccSDKDir ? ccSDKDir : \"ltr\" );\r\n    ccSDKElement.setAttribute( 'dir', direction );\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch ( this.survey.surveyDisplay.position ) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search( /bottom/gi ) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function ( surveyData ) {\r\n      self.debug ? console.log( surveyData ) : '';\r\n      // console.log(surveyData);\r\n\r\n      self.surveyData = surveyData;\r\n      //copy data.\r\n      let event = new CustomEvent( Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse( JSON.stringify( surveyData ) ) } );\r\n      document.dispatchEvent( event );\r\n      self.dom.hideLoader();\r\n      if(self.surveyData) {\r\n        self.initSurveyQuestions();\r\n      } else {\r\n        self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions( successcb, errorcb );\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey( this );\r\n    self.dom.setTheme( self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0 );\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n\r\n    self.survey.displayWelcomeQuestion();\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey( this.surveyData );\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent( Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyStartEvent );\r\n  }\r\n\r\n  public on( type: string, callback: any ) {\r\n    document.addEventListener( type + \"-\" + this.surveyToken, function ( e: any ) {\r\n      callback( e.detail );\r\n    } );\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill( questionId: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect( questionId, answer );\r\n  }\r\n\r\n  public fillPrefill( questionTag: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill( questionTag, answer );\r\n  }\r\n\r\n  public fillPrefillByNote( questionNote: string, answer: any ) {\r\n    this.survey.fillPrefillByNote( questionNote, answer );\r\n  }\r\n\r\n  public trigger( type: string, target: any ) {\r\n    let self: Survey = this;\r\n    switch ( type ) {\r\n      case 'click':\r\n        this.triggers.enableClickTrigger( target, function () {\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey( self.surveyToken );\r\n\r\n        } );\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt( target );\r\n        this.triggers.enablePageCountTrigger( count );\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt( target );\r\n        this.triggers.enableSiteCountTrigger( count2 );\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger( target );\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger( target );\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger( target );\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger( parseInt( target ) );\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey( self.surveyToken );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\r\n// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from './helpers/dom/Select';\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\r\nimport { dirname } from \"path\";\r\n\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor( ccsdk ) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      'position': '',\r\n      'surveyPosition': '',\r\n      'welcomePopupAnimation': '',\r\n      'surveyPopupAnimation': '',\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = ( e: any ) => {\r\n      //perform final post\r\n      this.finalPost( null, null );\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : ( this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You' );\r\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n      thankyouHtml = thankyouHtml.replace( \"{{question}}\", thankyouText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{button}}\", startText );\r\n      this.ccsdk.dom.replaceInQuestionsContainer( thankyouHtml );\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get( \"#cc-thankyou-container\" );\r\n      ( window as any ).ccsdkDebug ? console.log( thankyouContainer ) : '';\r\n      this.util.addClass( thankyouContainer[ 0 ], 'show-thankyou-slide' );\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      //set done cookie for 30 days.\r\n      Cookie.set( this.surveyToken + '-finish', 'true', 30, '/' );\r\n      setTimeout( () => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000 );\r\n    }\r\n\r\n    this.destroySurveyCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      self.destroy();\r\n    }\r\n\r\n    this.acceptAnswersCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n      switch ( data.type ) {\r\n        case 'scale':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'nps':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radio':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radioImage':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'smile':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'star':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'multiline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'singleline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'number':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'checkbox':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'select':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'slider':\r\n          response.text = data.data.text;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchQuestions( successcb, errorcb ) {\r\n    this.randomNumber = parseInt( ( String )( Math.random() * 1000 ) );\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace( \"{token}\", \"\" + this.surveyToken );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get( surveyUrl, successcb, errorcb );\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer( questionId ) {\r\n    delete this.answers[ questionId ];\r\n    delete this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  attachSurvey( surveyData: any ) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if ( this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0 ) {\r\n      this.surveyData.preFill.map( response => {\r\n        this.fillPrefillQuestionObject( response.questionId, response );\r\n      } )\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    surveyHtml = surveyHtml.replace( \"{{animation}}\", this.surveyDisplay.surveyPopupAnimation );\r\n    surveyHtml = surveyHtml.replace( /{{location}}/g, this.surveyDisplay.surveyPosition );\r\n    this.ccsdk.dom.appendInBody( surveyHtml );\r\n  }\r\n\r\n  displayQuestionSelector() {\r\n\r\n  }\r\n\r\n  displayWelcomeQuestion(warningWelcomeText?: string) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyImpressionEvent );\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n    if(warningWelcomeText){\r\n      document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", warningWelcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", \"Close\" );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"button-close\" );      \r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", welcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", startText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"survey-start\" );      \r\n    }\r\n    welcomeHtml = welcomeHtml.replace( \"{{location}}\", this.surveyDisplay.position );\r\n    welcomeHtml = welcomeHtml.replace( \"{{animation}}\", this.surveyDisplay.welcomePopupAnimation );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody( welcomeHtml );\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    if ( ( typeof this.ccsdk.config.keepAlive != undefined ) && ( this.ccsdk.config.keepAlive > 0 ) ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval( () => { self.checkWelcomeQuestionDisplay( self.ccsdk.config.keepAlive ) }\r\n        , 1000 );\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay( keepAlive ) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if ( keepAlive ) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if ( keepAlive <= ( now.getTime() - this.welcomeQuestionDisplayTime.getTime() ) / 1000 ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = 'languageSelector';\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions( [ \"default\" ] );\r\n    if ( this.surveyData.translated ) {\r\n      options1 = this.util.generateLanguageSelectOptions( [ \"default\" ].concat( Object.keys( this.surveyData.translated ) ) );\r\n    }\r\n    cTemplate1 = cTemplate1.replace( /{{questionId}}/g, qId );\r\n    cTemplate1 = cTemplate1.replace( \"{{options}}\", options1 );\r\n    cTemplate1 = cTemplate1.replace( \"{{requiredLabel}}\", true ? \"*\" : \"\" );\r\n    this.ccsdk.dom.replaceInQuestionsContainer( cTemplate1 );\r\n    let $questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    let $body = document.getElementsByTagName( \"body\" )[ 0 ];\r\n\r\n    this.util.addClass( $questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.languageSelect = new Select( qId );\r\n    let submitBtn = document.querySelectorAll( '.submit-icon' );\r\n    this.util.removeClassAll( submitBtn, 'act-cc-button-next' );\r\n    this.util.addClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n    if ( this.languageSelect ) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init( qId );\r\n    let selectRes = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"display language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageSelectOption' ) : '';\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n    } );\r\n    this.domListeners.push( ref );\r\n    ref.internalHandler = this.util.listener( $body, ref.type, ref.id, ref.cb );\r\n\r\n\r\n    let languageSelect2 = this.util.initListener( \"click\", \".act-cc-button-lang-next\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageNext' ) : '';\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n      //set config rtl or ltr\r\n      let isRTL = /[\\u0600-\\u06FF]/.test( selectRes );\r\n      self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n      self.ccsdk.setHtmlTextDirection();\r\n      self.util.removeClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n      self.util.addClassAll( submitBtn, 'act-cc-button-next' );\r\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\r\n      // self.postPrefillPartialAnswer( false, null, null );\r\n    } );\r\n    this.domListeners.push( languageSelect2 );\r\n\r\n    languageSelect2.internalHandler = this.util.listener( $body, languageSelect2.type, languageSelect2.id, languageSelect2.cb );\r\n\r\n\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    ( window as any ).ccsdkDebug ? console.log( cTemplate1 ) : '';\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccdone', this.displayThankYouCb );\r\n  }\r\n\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort( this.questionCompare );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName( \"cc-questions-container\" );\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[ 0 ];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for ( let question of this.questionsToDisplay ) {\r\n      if ( this.checkConditionals( question ) ) {\r\n        let compiledTemplate = this.compileTemplate( question );\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if ( this.isPrefillQuestion( question ) ) {\r\n          this.prefillQuestions.push( question );\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId( questionId: string ) {\r\n    let answer = this.surveyAnswers[ questionId ];\r\n    if ( typeof answer === 'undefined' ) {\r\n      for ( let response of this.prefillResponses ) {\r\n        if ( response.questionId == questionId ) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener( 'q-answered', this.acceptAnswersCb );\r\n  }\r\n\r\n  fillPrefillQuestionObject( id: any, response: any ) {\r\n    let question: any = this.getQuestionById( id );\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n  }\r\n\r\n  fillPrefill( tag: any, value: object ) {\r\n    this.prefillWithTags[ tag.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByTag', this.prefillWithTags ) : '';\r\n  }\r\n\r\n  fillPrefillByNote( note: any, value: object ) {\r\n    this.prefillWithNote[ note.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByNote', this.prefillWithNote ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillDirect( questionId: string, value: object ) {\r\n    this.prefillDirect[ questionId ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillDirect', this.prefillDirect ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillQuestion( id: any, value: any, valueType: string ) {\r\n    let question: any = this.getQuestionById( id );\r\n    // console.log(this.questions);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType( question.displayType );\r\n\r\n    if ( valueType.toLowerCase() == \"number\" ) {\r\n      response.numberInput = value;\r\n    }\r\n    if ( valueType.toLowerCase() == \"text\" ) {\r\n      response.textInput = value;\r\n    }\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n\r\n  }\r\n\r\n  postPrefillPartialAnswer( fullSubmission = false, successcb, errorcb ) {\r\n    if ( !fullSubmission && this._prefillsPartiallyPosted ) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", \"false\" );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{tabletId}\", \"\" + this.randomNumber );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    ( window as any ).ccsdkDebug ? console.log( \"Posting Prefill Responses to Server\" ) : '';\r\n    ( window as any ).ccsdkDebug ? console.log( this.prefillResponses ) : '';\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run successCB if there is one.\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    if ( typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0 ) {\r\n      RequestHelper.post( surveyPartialUrl, this.prefillResponses, successcb, errorcb );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById( id: any, resp: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        response = resp;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById( id: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        return response;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getQuestionById( id: any ) {\r\n    for ( let question of this.questions ) {\r\n      if ( question.id == id ) {\r\n        return question;\r\n      }\r\n    }\r\n  }\r\n\r\n  postPartialAnswer( index: any, response: any, complete = false, successcb, errorcb ) {\r\n    this.postPrefillPartialAnswer( complete, null, null );\r\n    // let data = new FormData();\r\n    //in case of file.\r\n    // let input = document.querySelector('input[type=\"file\"]') ;\r\n    // data.append('file', input.files[0]);\r\n\r\n    let question: any = this.questionsToDisplay[ index ];\r\n    if ( typeof question === 'undefined' ) {\r\n      //now?\r\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n    }\r\n    let data: any = {\r\n      comparator: 0,\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n    // if(this.isPartialAvailable == false) {\r\n    //   this.answers.push(data);\r\n    //   return;\r\n    // }\r\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    //if this is the last of displayed question\r\n    ( window as any ).ccsdkDebug ? console.log( \"partial response\", question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) : '';\r\n    // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n    //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    // } else {\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", `${ complete }` );\r\n    // }\r\n    // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[ question.id ] = data;\r\n\r\n    data = [ data ];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent( Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyAnswerEvent );\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run success callback and return\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if ( question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.post( surveyPartialUrl, data, successcb, errorcb );\r\n    } else {\r\n      RequestHelper.post( surveyPartialUrl, data, successcb, errorcb );\r\n    }\r\n\r\n  }\r\n\r\n  finalPost( successcb, errorcb ) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace( \"{tokenId}\", this.ccsdk.surveyToken );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if ( Object.keys( this.surveyAnswers ).length == 0 ) {\r\n      return;\r\n    }\r\n    for ( let answer in this.surveyAnswers ) {\r\n      answersAll.push( this.surveyAnswers[ answer ] );\r\n      lastAnswer = this.surveyAnswers[ answer ];\r\n    }\r\n    for ( let answer in this.prefillResponses ) {\r\n      answersAll.push( this.prefillResponses[ answer ] );\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor( ( timeAtPost - this.ccsdk.surveyStartTime.getTime() ) / 1000 )\r\n    };\r\n    if ( lastAnswer ) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      }\r\n      this.postPartialAnswer( this.questionsToDisplay.length - 1, _lastAnswer, true, null, null )\r\n    }\r\n\r\n    RequestHelper.post( postSurveyFinalUrl, finalData, successcb, errorcb );\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals( question: any ) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate( question: any ) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if ( question != 'undefined' ) {\r\n      switch ( question.displayType ) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[ 0 ].split( \"-\" );\r\n          let optMin: any = opt[ 0 ].split( \";\" );\r\n          let optMax: any = opt[ 1 ].split( \";\" );\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{min}}/g, optMin[ 0 ] );\r\n          if ( displayLegend[ 0 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, displayLegend[ 0 ] + '-' );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{max}}/g, optMax[ 0 ] );\r\n          if ( displayLegend[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, displayLegend[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          ( window as any ).ccsdkDebug ? console.log( question.questionTags ) : '';\r\n          if ( question.questionTags.includes( \"NPS\" ) ) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else if ( question.questionTags.includes( \"CSAT\" ) ) {\r\n            if ( question.questionTags.includes( \"csat_satisfaction_5\" ) ) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if ( question.questionTags.includes( \"csat_agreement_5\" ) ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else {\r\n            let tileColor = '';\r\n            let style = '';\r\n            if ( question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0 ) {\r\n              if ( question.attributes.scaleColor !== 'Gradient' ) {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\"\r\n              }\r\n            } else if ( question.presentationMode != null && question.presentationMode.indexOf( \"Color\" ) !== -1 ) {\r\n              tileColor = question.presentationMode.split( ':' )[ 1 ];\r\n            }\r\n            if ( tileColor.length > 0 ) {\r\n              let tileColorDark = this.util.shadeBlendConvert( -0.3, tileColor, undefined );\r\n              style = '\\\r\n                <style>\\\r\n                #id'+ question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : '+ tileColor + ';\\\r\n                }\\\r\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : '+ tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace( /{{style}}/g, style );\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend( this, question );\r\n            if ( displayLegend ) {\r\n              if ( displayLegend.length > 0 ) {\r\n                startRangeLabel = displayLegend[ 0 ] ? displayLegend[ 0 ] : null;\r\n                endRangeLabel = displayLegend[ 1 ] ? displayLegend[ 1 ] : null;\r\n              }\r\n            }\r\n            if ( question.multiSelect.length > 0 ) {\r\n              startRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 0 ] );\r\n              if ( startRangeLabel == null ) {\r\n                startRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 0 ].split( \";\" )[ 1 ];\r\n              }\r\n              endRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 1 ] );\r\n              if ( endRangeLabel == null ) {\r\n                endRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 1 ].split( \";\" )[ 1 ];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = '';\r\n            let imageVisibility010 = 'hide';\r\n            let imageVisibility110 = 'hide';\r\n            let scaleVisibility = 'show-inline';\r\n            let scaleImageContainer = '';\r\n            if ( startRange == 0 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = 'show';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            } else if ( startRange == 1 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'show';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if ( endRange < 11 ) {\r\n            } else {\r\n              divider = ( endRange - startRange ) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = '';\r\n            let legendDimension;\r\n            if ( ( window as any ).isMobile ) {\r\n              if ( endRange < 11 ) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                let dimension = ( ( 100 / ( endRange - startRange + 1 ) ) - .5 ) * parentContainer / 100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = ( endRange - startRange + 1 ) * ( dimension + 1 );\r\n                optionStyle = `width:${ dimension }px;height:${ dimension }px;padding:${ ( dimension - 15 ) / 2 }px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'show-inline';\r\n              scaleImageContainer = '';\r\n              mobileImageUrl = \"\";\r\n            }\r\n            for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n              options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n            }\r\n            if ( ( endRange - startRange + 1 ) <= 11 ) {\r\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n              var optionMaxWidth = ( ( ( endRange - startRange + 1 ) * 38 / 2 ) - 5 ) + 'px';\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{legendStyle}}\", `style=\"position:relative;width:${ mobileImageUrl ? '100%' : legendDimension + 'px' };min-height: 20px;\"` )\r\n            questionTemplate = questionTemplate.replace( /\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class' );\r\n            questionTemplate = questionTemplate.replace( \"{{optionsRange}}\", options );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace( /maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth );\r\n            questionTemplate = questionTemplate.replace( /{{optionLeftExtraClass}}/g, optionLeftExtraClass );\r\n            questionTemplate = questionTemplate.replace( /{{optionRightExtraClass}}/g, optionRightExtraClass );\r\n            questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n            questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n            questionTemplate = questionTemplate.replace( /{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"' );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility010}}\", imageVisibility010 );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility110}}\", imageVisibility110 );\r\n            questionTemplate = questionTemplate.replace( \"{{scaleImageContainer}}\", scaleImageContainer );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if ( ( ( question.displayStyle == 'radiobutton/checkbox' ) || ( question.displayStyle == 'icon' ) ) && ( multiSelect1.length < 6 ) ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect1 );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 1 ) && multiSelect1[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if (\r\n                typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log( options3 ) : '';\r\n            questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n            acTemplate = questionTemplate;\r\n\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          if ( ( question.displayStyle == 'radiobutton/checkbox' ) && ( multiSelect.length < 6 ) ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect.length > 1 ) && multiSelect[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioImageOptions( question.multiSelect, multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions( question.multiSelect, multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n              options1 = self.util.generateRadioOptions( question.multiSelect, multiSelect, question.id );\r\n              questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n            }\r\n          } else if ( ( question.displayStyle == 'icon' ) && ( multiSelect.length < 6 ) ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            options1 = self.util.generateRadioOptions( question.multiSelect, multiSelect, question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n          } else {\r\n\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions( question.multiSelect, multiSelect );\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if ( typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions( question.multiSelect, multiSelect );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n\r\n          }\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if ( question.presentationMode == \"Invert\" ) {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n\r\n          } else {\r\n\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend2 ) {\r\n            if ( displayLegend2.length > 0 ) {\r\n              startRangeLabel = displayLegend2[ 0 ] ? displayLegend2[ 0 ] : null;\r\n              endRangeLabel = displayLegend2[ 1 ] ? displayLegend2[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend3 ) {\r\n            if ( displayLegend3.length > 0 ) {\r\n              startRangeLabel1 = displayLegend3[ 0 ] ? displayLegend3[ 0 ] : null;\r\n              endRangeLabel1 = displayLegend3[ 1 ] ? displayLegend3[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel1 );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel1 );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType( displayType: string ) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch ( displayType ) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for ( let question of this.questions ) {\r\n      if ( !question.isRetired ) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if ( this.isPrefillTags( question ) ) {\r\n          self.ccsdk.debug ? console.log( 'prefillTags', this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillNote( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillDirect( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( !( this.isPrefillQuestion( question ) ) ) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            ( question.conditionalFilter != null &&\r\n              ( question.conditionalFilter.filterquestions == null\r\n                || question.conditionalFilter.filterquestions.length == 0 ) )\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n            if ( supportedDisplayTypes.indexOf( question.displayType ) > -1 ) {\r\n              this.questionsToDisplay.push( question );\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if ( ConditionalFlowFilter.filterQuestion( this, question ) ) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push( question );\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags( question );\r\n          this.fillPrefillWithNote( question );\r\n          ConditionalFlowFilter.filterQuestion( this, question );\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for ( let question of this.questions ) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion( this, question );\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags( question: any ) {\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        switch ( tag.toLowerCase() ) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion( question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\" );\r\n            return true;\r\n          default:\r\n            if ( typeof this.prefillWithTags[ tag.toLowerCase() ] != 'undefined' ) {\r\n              let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n              this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined'\r\n      && question.note != null\r\n      && question.note.length > 0\r\n      && this.prefillWithNote[ question.note.toLowerCase() ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect( question: any ) {\r\n    if ( typeof question !== 'undefined'\r\n      && this.prefillDirect[ question.id ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillDirect[ question.id ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags( question: any ) {\r\n    ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', this.prefillWithTags ) : '';\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', tag ) : '';\r\n        if ( typeof this.prefillWithTags[ tag.toLowerCase() ] !== 'undefined' ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'prefil ', tag.toLowerCase(), this.prefillWithTags[ tag.toLowerCase() ], this.prefillWithTags ) : '';\r\n\r\n          let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n          this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined' && question.note != null && question.note.length > 0 ) {\r\n      if ( typeof this.prefillWithNote[ question.note.toLowerCase() ] !== 'undefined' ) {\r\n        let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n        this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion( question: any ) {\r\n    if ( question.apiFill == true ) {\r\n      return true;\r\n    }\r\n    if ( question.staffFill == true ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled( question: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == question.questionId ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccclose', this.destroySurveyCb );\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer( this.surveyToken );\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer( this.surveyToken );\r\n    if ( typeof surveyContainer != 'undefined' ) {\r\n      this.util.remove( surveyContainer );\r\n    }\r\n    if ( typeof welcomeContainer != 'undefined' ) {\r\n      this.util.remove( welcomeContainer );\r\n    }\r\n    document.removeEventListener( 'ccclose', this.destroySurveyCb );\r\n    document.removeEventListener( 'ccdone', this.displayThankYouCb );\r\n    document.removeEventListener( 'q-answered', this.acceptAnswersCb );\r\n    ( window as any ).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 16\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 18\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 19\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 20\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.indexOf( \":\" ) !== -1 ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( isAnd( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if (checkLanguage( surveyHandler, fOption )\r\n            || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language \r\n                && surveyHandler.ccsdk.config.language.toLowerCase().includes('default') \r\n                && fOption.language === null)) {\r\n              let groupTitle;\r\n              if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n                groupTitle = conditionalText.split( ':' )[ 0 ];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }      \r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from './Select';\r\nimport { Theme } from './Theme';\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\nimport { setInterval } from 'timers';\r\n\r\nclass DomSurvey {\r\n\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n\r\n  constructor( ccsdk: any ) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities()\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready( function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    } );\r\n  }\r\n\r\n  setTheme( brandColor, time ) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready( function () {\r\n      self.theme = new Theme( brandColor, time );\r\n    } );\r\n  }\r\n\r\n  setQIndex( index: number ) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    this.$popupContainer = document.querySelectorAll( \".cc-popup-container\" );\r\n    this.$popupContainer2 = document.querySelectorAll( \".cc-popup-container-2\" );\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    // this.select = new Select();\r\n\r\n  }\r\n\r\n\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener( \"click\", \".act-cc-survey-start\", function () {\r\n      if ( ( !self.util.hasClass( self.$startBtn, 'disabled' ) ) && ( self.ccsdk.surveyStatus != 'minimized' ) ) {\r\n        let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n        document.dispatchEvent( onSurveyClickEvent );\r\n        self.util.addClass( self.$startBtn, 'disabled' );\r\n        self.showLoader();\r\n        self.startSurvey();\r\n      } else {\r\n        self.initSurveyDom();\r\n      }\r\n    } );\r\n    this.domListeners.push( startSurvey );\r\n\r\n    startSurvey.internalHandler = this.util.listener( this.$body, startSurvey.type, startSurvey.id, startSurvey.cb );\r\n\r\n    let nextQue = this.util.initListener( \"click\", \".act-cc-button-next\", function () {\r\n      // alert(\"working\");\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( nextQue );\r\n\r\n    nextQue.internalHandler = this.util.listener( this.$body, nextQue.type, nextQue.id, nextQue.cb );\r\n\r\n    let prevQue = this.util.initListener( \"click\", \".act-cc-button-prev\", function () {\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.prevQuestion();\r\n    } );\r\n    this.domListeners.push( prevQue );\r\n\r\n    prevQue.internalHandler = this.util.listener( this.$body, prevQue.type, prevQue.id, prevQue.cb );\r\n\r\n    let closeSurvey = this.util.initListener( \"click\", \".act-cc-button-close\", function () {\r\n      let onSurveyCloseEvent = new CustomEvent( Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyCloseEvent );\r\n      self.ccsdk.survey.answers = {};\r\n      self.trackSelects = [];\r\n      self.destroyListeners();\r\n      self.util.trigger( document, 'ccclose', undefined );\r\n      self.bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      self.util.removeClass( self.bodyElement, \"blurr\" )\r\n      self.ccsdk.survey.destroy();\r\n\r\n    } );\r\n    this.domListeners.push( closeSurvey );\r\n\r\n\r\n    closeSurvey.internalHandler = this.util.listener( this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb );\r\n\r\n    let minSurvey = this.util.initListener( \"click\", \".act-cc-button-minimize\", function () {\r\n      self.minimizeSurvey();\r\n    } );\r\n    this.domListeners.push( minSurvey );\r\n\r\n\r\n    minSurvey.internalHandler = this.util.listener( self.$body, minSurvey.type, minSurvey.id, minSurvey.cb );\r\n  }\r\n\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.removeClass( this.$popupContainer2[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.addClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.ccsdk.surveyStatus = 'minimized';\r\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass( this.$startBtn, 'disabled' );\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for ( let listener of this.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    for ( let listener of this.ccsdk.survey.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    if ( this.ccsdk.survey.languageSelect ) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if ( this.select ) {\r\n      this.select.destroyListeners();\r\n    }\r\n\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll( this.$popupContainer2, 'show-slide' );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    if ( this.ccsdk.surveyStatus == 'minimized' ) {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      ( window as any ).ccsdkDebug ? console.log( this.ccsdk.surveyData ) : '';\r\n      if ( this.ccsdk.surveyData.translated === null || ( this.ccsdk.surveyData.translated && Object.keys( this.ccsdk.surveyData.translated ).length < 1) ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll( \"#progress-line\" )[ 0 ];\r\n    el.style.width = ( this.qIndex / this.ccsdk.survey.questionsToDisplay.length ) * 100 + '%';\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics( this.$questionContainer, 0 );\r\n    this.util.removeClassAll( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n    this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n  }\r\n\r\n  nextQuestion() {\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response init', this.qResponse ) : '';\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[ 0 ].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__required\" )[ 0 ]\r\n    let validationSpan: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__validation\" )[ 0 ]\r\n    if ( span )\r\n      this.util.removeClass( span, \"show\" );\r\n    if ( validationSpan )\r\n      this.util.removeClass( validationSpan, \"show\" );\r\n\r\n\r\n    //check if question is required \r\n    isRequired = q.getAttribute( 'data-required' ).toLowerCase() == 'true' ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if ( isRequired && ( Object.keys( this.qResponse ).length === 0 ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else if ( isRequired && ( !this.qResponse.text ) && ( !this.qResponse.number ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else {\r\n      if ( span ) {\r\n        this.util.removeClass( span, \"show\" );\r\n        this.util.addClass( span, \"hide\" );\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[ this.qIndex ].validationRegex\r\n      if ( validationRegex ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'validationRegex', validationRegex ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( 'response', this.qResponse ) : '';\r\n        let pattern = validationRegex.match( new RegExp( '^/(.*?)/([gimy]*)$' ) );\r\n        let regex = new RegExp( validationRegex );\r\n        if ( this.qResponse.text ) {\r\n          if ( regex.test( this.qResponse.text ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        else if ( this.qResponse.number ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'test regex text', regex.test( this.qResponse.number ) ) : '';\r\n\r\n          if ( regex.test( this.qResponse.number ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      if ( this.qResponse !== 'undefined' ) {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && this.qResponse.type == this.ccsdk.survey.answers[ this.currentQuestionId ].type\r\n          && this.qResponse.text == this.ccsdk.survey.answers[ this.currentQuestionId ].text\r\n          && this.qResponse.number == this.ccsdk.survey.answers[ this.currentQuestionId ].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && !this.qResponse.text\r\n          && !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n          this.submitQuestion( this.qIndex, this.qResponse, this.qResponse.type, qId );\r\n          //save response\r\n          this.ccsdk.survey.answers[ this.currentQuestionId ] = JSON.parse( JSON.stringify( this.qResponse ) );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion( this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[ this.qIndex ] );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = 'initial';\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if ( this.qIndex == this.ccsdk.survey.questionsToDisplay.length ) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      let rightIcon: any = this.util.get( '.cc-icon-right' );\r\n      let nextIcon: any = this.util.get( '.act-cc-button-next' );\r\n      this.util.addClassAll( leftIcon, 'hide' );\r\n      this.util.addClassAll( rightIcon, 'hide' );\r\n      this.util.addClassAll( nextIcon, 'hide' );\r\n      this.util.trigger( document, 'ccdone', undefined );\r\n      this.util.removeClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      this.updateProgress();\r\n    } else {\r\n      if ( ( this.qIndex > this.ccsdk.survey.questionsToDisplay.length ) ) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics( nextQ, this.qIndex );\r\n      this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    } else {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClass( leftIcon[ 0 ], 'show-slide' );\r\n      this.util.removeClass( leftIcon[ 0 ], 'hide-slide' );\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.qIndex--;\r\n    if ( !this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0 ) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics( null, this.qIndex );\r\n    this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n    ( window as any ).ccsdkDebug ? console.log( \"prevQuestion qResponse\", this.qResponse ) : '';\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.updateProgress();\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n      this.util.removeClassAll( leftIcon, 'show-slide' );\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.addClass( $loader, 'show' );\r\n    this.util.removeClass( $loader, 'hide' );\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.removeClass( $loader, 'show' );\r\n    this.util.addClass( $loader, 'hide' );\r\n  }\r\n\r\n  appendInBody( html ) {\r\n    document.querySelectorAll( \"body\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer( html ) {\r\n    this.$questionContainer[ 0 ].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer( html ) {\r\n    document.querySelectorAll( \".cc-questions-container\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".act-cc-welcome-question-box\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll( \".act-cc-survey-start\" )[ 0 ];\r\n\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".cc-language-selector\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    let self = this;\r\n    if ( this.util.checkIfListenerExists( '.cc-language-select', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '.cc-language-select' );\r\n    }\r\n    let languageSelect = this.util.initListener( \"click\", \".cc-language-select\", function () {\r\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyClickEvent);\r\n      //select language show next question.\r\n      // self.startSurvey();\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n    } );\r\n\r\n    languageSelect.internalHandler = this.util.listener( this.$body, languageSelect.type, languageSelect.id, languageSelect.cb );\r\n  }\r\n\r\n  getSurveyContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-survey\" )[ 0 ];\r\n  }\r\n\r\n  getWelcomeContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-welcome\" )[ 0 ];\r\n  }\r\n\r\n  loadQuestionSpecifics( q: HTMLElement, index: number ) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[ 0 ].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate( this.ccsdk.survey.questionsToDisplay[ index ] );\r\n    // console.log( compiledTemplate );\r\n    this.$questionContainer[ 0 ].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-type' );\r\n    let qId: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-id' );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring( 2, qId.length );\r\n    // console.log( 'qtype', qType )\r\n    switch ( qType ) {\r\n      case 'scale':\r\n        let allOptions1: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n        let optionWidth1 = ( 100 / allOptions1.length ) - .6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale( index, qId );\r\n        break;\r\n      case 'nps':\r\n        this.setupListenersQuestionNPS( index, qId );\r\n        break;\r\n      case 'multiline':\r\n        this.setupListenersQuestionMultiline( index, qId );\r\n        break;\r\n      case 'select':\r\n        if ( typeof this.select !== 'undefined' ) {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect( index, qId );\r\n        break;\r\n      case 'radio':\r\n        this.setupListenersQuestionRadio( index, qId );\r\n        break;\r\n      case 'radioImage':\r\n        this.setupListenersQuestionRadioImage( index, qId );\r\n        break;\r\n      case 'checkbox':\r\n        this.setupListenersQuestionCheckbox( index, qId );\r\n        break;\r\n      case 'star':\r\n        this.setupListenersQuestionStar( index, qId );\r\n        break;\r\n      case 'smile':\r\n        this.setupListenersQuestionSmile( index, qId );\r\n        break;\r\n      case 'csat':\r\n        this.setupListenersQuestionCsat( index, qId );\r\n        break;\r\n      case 'slider':\r\n        this.setupListenersQuestionSlider( index, qId );\r\n        break;\r\n      case 'singleline':\r\n        this.setupListenersQuestionSingleline( index, qId );\r\n        break;\r\n      case 'number':\r\n        this.setupListenersQuestionNumber( index, qId );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let selectedRating1 = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 1 ];\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'scale';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'scale';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      selectedRating1.innerHTML = '' + rating;\r\n\r\n      //move to next question automagically\r\n      // alert('calling next questions inside scale');\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionNPS( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'nps question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'nps previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        let $mobileRating = document.querySelectorAll( \".act-cc-nps-selected-rating\" )[ 0 ];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = 'nps';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'nps';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // alert('calling next questions inside scale');\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"checkbox question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValues = this.ccsdk.survey.answers[ questionId ].text;\r\n      if ( previousValues ) {\r\n        previousValues = previousValues.split( ',' );\r\n        for ( let previousValue of previousValues ) {\r\n          let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n          ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n          if ( typeof previousSelection !== 'undefined' ) {\r\n            this.util.addClass( previousSelection, \"selected\" );\r\n            previousSelection.setAttribute( 'checked', 'checked' );\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n      // let rating : number = this.querySelectorAll('input')[0].value;\r\n      let rating: string = [].filter.call( document.querySelectorAll( '#' + qId + ' .cc-checkbox input' ), function ( c ) {\r\n        return c.checked;\r\n      } ).map( function ( c ) {\r\n        return c.value;\r\n      } ).join( ',' );\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'Checkbox selected', rating ) : '';\r\n\r\n      self.qResponse.type = 'checkbox';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n    let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyClickEvent );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadio( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      // return;\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radio';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radio';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio image question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio image question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio image previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radioImage';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radioImage';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionStar( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-star-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-star-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'star question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'star previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'star';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-star-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-star-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous sibling\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n\r\n\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'star';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSmile( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'smile question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'smile previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous siblings\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n\r\n  setupListenersQuestionCsat( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"csat question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'csat question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'csat previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      this.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n      let child: any = this.previousSibling;\r\n      while ( ( child = child.previousSibling ) != null ) {\r\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n        self.util.addClass( child, \"selected\" );\r\n      }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      console.log( 'dispatching event in csat', this )\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionMultiline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"multiine question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'multiine question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'multiline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = 'multiline';\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSingleline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"singleline question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'singleline question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'singleline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = 'singleline';\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersQuestionNumber( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"number question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'number question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'number input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'number';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = 'number';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSlider( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = '';\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" input\" )[ 0 ];\r\n\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" input\", this.domListeners ) ) {\r\n      // return;\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'slider question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" .act-slider-tip\" )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = 'slider';\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( \"change\", '#' + qId + \" input\", function () {\r\n      sliderRes = this.value;\r\n      self.qResponse.type = 'slider';\r\n      self.qResponse.number = sliderRes;\r\n      self.qResponse.text = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSelect( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que', this.domListeners ) : '';\r\n    questionId = qId.substring( 2, qId.length );\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'select que listner exists' ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n\r\n      // return;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que' ) : '';\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que initialize select' ) : '';\r\n\r\n    self.select = new Select( qId );\r\n    self.select.destroyListeners();\r\n    self.select.init( qId );\r\n\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      if ( this.ccsdk.survey.answers[ questionId ].text ) {\r\n        let question = this.ccsdk.survey.getQuestionById( questionId );\r\n        self.select.setValue( this.ccsdk.survey.answers[ questionId ].text, question, this.ccsdk.survey );\r\n        self.select.selectOptions( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.qResponse.type = 'select';\r\n        self.qResponse.text = this.ccsdk.survey.answers[ questionId ].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push( qId );\r\n    // }\r\n    let selectRes: string = '';\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      // selectRes = this.getAttribute('data-value');\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].getAttribute( 'data-selection-value' );\r\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n      self.qResponse.type = 'select';\r\n      self.qResponse.text = selectRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // self.nextQuestion();\r\n    } );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion( index: number, data: any, type: string, qId: string ) {\r\n    // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n    this.util.trigger( document, 'q-answered', {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.substring( 2, qId.length )\r\n    } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { DomSurvey }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif ( Cookie.get( Constants.CCTriggerSiteStartTime ) == null ) {\r\n  Cookie.set( Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined );\r\n}\r\n//always add on page Time\r\nCookie.set( Constants.CCTriggerPageStartTime, new Date(), undefined, undefined );\r\n\r\nlet sitePageViewCount = Cookie.get( Constants.CCTriggerSitePageViewCount );\r\nif ( sitePageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, 1, undefined, undefined );\r\n} else {\r\n  sitePageViewCount = ( parseInt( sitePageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined );\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get( Constants.CCTriggerIndividualPageViewCount );\r\nif ( individualPageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href );\r\n} else {\r\n  individualPageViewCount = ( parseInt( individualPageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href );\r\n}\r\n\r\n( window as any ).click = 0;\r\n\r\nwindow.onscroll = function ( e ) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = ( window.pageXOffset || doc.scrollLeft ) - ( doc.clientLeft || 0 );\r\n  let top = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\r\n  ( window as any ).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers( top );\r\n}\r\n\r\ndocument.onclick = function ( e ) {\r\n  ( window as any ).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey( surveyId: any, trigger: Triggers ) {\r\n    TriggerManager.triggerInstances[ surveyId ] = trigger;\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length >= 1 ) {\r\n      ( window as any ).ccsdkDebug ? console.log( TriggerManager.triggerInterval ) : '';\r\n      if ( TriggerManager.triggerInterval == null ) {\r\n        ( window as any ).ccsdkDebug ? console.log( \"TriggerHandler : Setting up Interval Trigger Handlers.\" ) : '';\r\n        TriggerManager.triggerInterval = setInterval( TriggerManager.processIntervalTriggers, 1000 );\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId: string ) {\r\n    delete TriggerManager.triggerInstances[ surveyId ];\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length == 0 ) {\r\n      clearInterval( TriggerManager.triggerInterval );\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set( Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href );\r\n    Cookie.set( Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined );\r\n    //set cookies and call every process Interval Triggers.\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      TriggerManager.triggerInstances[ trigger ].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[ trigger ].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers( scrollNow ) {\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[ trigger ].processScrollTriggers( scrollNow );\r\n    }\r\n  }\r\n\r\n  static disableTriggers( surveyId: string ) {\r\n    TriggerManager.triggerInstances[ surveyId ].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk : any;\r\n  pageCountTrigger : boolean;\r\n  pageTimeTrigger : boolean;\r\n  siteCountTrigger : boolean;\r\n  siteTimeTrigger : boolean;\r\n  urlParamTrigger : boolean;\r\n  notUrlParamTrigger : boolean;\r\n  utmParamTrigger : boolean;\r\n  scrollPixelsTrigger : boolean;\r\n  minPageCount : number;\r\n  minSiteCount : number;\r\n  minPageTime : number;\r\n  minSiteTime : number;\r\n  minScrollPixels : number;\r\n  utm : string;\r\n  inUrl : RegExp;\r\n  notinUrl : RegExp;\r\n  pageCountTriggerEnabled : boolean;\r\n  siteCountTriggerEnabled : boolean;\r\n  pageTimeTriggerEnabled : boolean;\r\n  siteTimeTriggerEnabled : boolean;\r\n  urlParamTriggerEnabled : boolean;\r\n  notUrlParamTriggerEnabled : boolean;\r\n  utmParamTriggerEnabled : boolean;\r\n  scrollPixelsTriggerEnabled : boolean;\r\n\r\n  conditionalTriggers : any;\r\n\r\n  constructor(ccsdk) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger(target : string, cb : any) {\r\n    let item = document.querySelectorAll(target)[0];\r\n    if(typeof item !== 'undefined') {\r\n      item.addEventListener('click',cb);\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger(minPageCount : number) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger(minSiteCount : number) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger(minPageTime : number) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger(minSiteTime : number) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger(urlPattern : RegExp) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger(urlPattern : RegExp) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger(urlPattern : string) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger(minScrollPixels : number) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers(config : CCSDKConfig) {\r\n    (window as any).ccsdkDebug?console.log(config.grepURL):'';\r\n    //\r\n    if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ((typeof config.onExitDetect !== 'undefined')) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)){\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      (window as any).ccsdkDebug?console.log('returning'):'';\r\n      return;\r\n    }\r\n    if(typeof this.conditionalTriggers !== 'undefined') {\r\n      if(Object.keys(this.conditionalTriggers).length == 0) {\r\n        return false;\r\n      }\r\n      for(let conditionalTrigger in this.conditionalTriggers) {\r\n        if(this.conditionalTriggers[conditionalTrigger] != null) {\r\n          switch(conditionalTrigger) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                (window as any).ccsdkDebug?console.log(\"Mouse out\"):'';\r\n\r\n              });\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n\r\n            break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ((window as any).click >= this.conditionalTriggers.click);\r\n            break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n              let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('waitSeconds enabled', isEnabled):'';\r\n            break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( (window as any).ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('scrollPercent enabled', isEnabled):'';\r\n              \r\n            break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('grepURL enabled', isEnabled):'';\r\n            break;\r\n            case \"grepInvertURL\":\r\n                isEnabled = isEnabled && !TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                (window as any).ccsdkDebug?console.log('grepInvertURL enabled', isEnabled):'';\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(isEnabled) {\r\n        SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers(scrollNow : number) {\r\n    this.TriggerPopUpByScrollPixels(scrollNow);\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt(Cookie.get(Constants.CCTriggerSitePageViewCount));\r\n    if(pageCount == NaN) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  \r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n    let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition(pageTime, pageStartTime,this.minPageTime) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date(Cookie.get(Constants.CCTriggerSiteStartTime)).getTime();\r\n    let siteTime = new Date(Cookie.get(Constants.CCTriggerSiteElapsedTime)).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n    \r\n  }\r\n\r\n  TriggerPopUpByScrollPixels(scrollNow : number) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll(scrollNow, this.minScrollPixels) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split(\"=\");\r\n    let utmVal = Cookie.getParameterByName(utmP[0], undefined); \r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]){\r\n      this.utmParamTrigger = true;\r\n      \r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts"],"sourceRoot":""}