<<<<<<< HEAD
{"version":3,"sources":["webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap 398115974da89c3141e0","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","parents","push","listener","evt","sel","handler","selectorMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","internalHandler","event","t","target","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","e","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","console","error","setupSurvey","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isAnd","filterQuestion","groupBy","toUpperCase","isOr","isNumberCheck","answerCheck","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","selfOption","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","selectedValueList","translatedSelection","selectOption","removeOption","csv","allOptions","allOptions_1","domOptions","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","toInteger","Number","isNaN","isFinite","floor","abs","maxSafeInteger","pow","toLength","len","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","includes","searchElement","fromIndex","y","surveyToken","trim","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","tracking","trackEvent","token","isMobile","action","destroy","dom","callback","prefill","answerObject","prefillByTag","questionTag","fillPrefill","prefillByNote","questionNote","fillPrefillByNote","show","hide","localCCSDK","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","debug","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","questions","preFill","skipWelcomePage","hideLoader","initSurveyQuestions","displayWelcomeQuestion","fetchQuestions","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","setTimeout","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","String","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","surveyStartTime","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","setCoolDownPeriod","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","acceptAnswers","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","complete","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","legendDimension","parentContainer","dimension","initial_1","initial_2","optionLeftExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","invertedMultiSelect","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","transform","locals","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","$1","newUrl","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","undefined","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers","payload","successCb","errorCb","searchParams","idsite","rec","action_name","action_url","uid","_cvar","1","new_visit","e_c","e_a","e_n","rand","ceil","param"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var selectorMatches = function (el, selector) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n            return f.call(el, selector);\r\n        };\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (selectorMatches(t, sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr, translatedArr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var translatedOpt = (translatedArr[i] || arr[i]).split(';');\r\n                var arrOpt = arr[i].split(';');\r\n                res += '<option value=\"' + arrOpt[0] + '\">' + (translatedOpt[0]) + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && (opt.indexOf(';') !== -1) && (opt.indexOf('.') !== -1);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            // console.log( res );\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n            console.error('Microsurvey not properly set up. Contact Support.');\r\n            return;\r\n        }\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n        window.globalSurveyStartTime = new Date();\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers, successcb, errorcb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        if (this.status >= 200 && this.status < 300) {\r\n            if (xhr.response) {\r\n            }\r\n            var res = xhr.response && typeof xhr.response === 'string' && !xhr.response.match('GIF') ? JSON.parse(xhr.response) : '';\r\n            if (successcb)\r\n                successcb(res);\r\n        }\r\n        else {\r\n            if (errorcb) {\r\n                errorcb({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        if (errorcb) {\r\n            errorcb({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        }\r\n    };\r\n    if (headers) {\r\n        Object.keys(headers).forEach(function (key) {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers, successcb, errorcb) {\r\n        headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.get = function (url, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, null, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data, successcb, errorcb) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), {}, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.indexOf(\":\") !== -1) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if (question.text) {\r\n            var qText = question.text.split(':');\r\n            if (question.text.indexOf(\":\") !== -1) {\r\n                qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n            }\r\n            return qText;\r\n        }\r\n        else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined' &&\r\n                question.translated[surveyHandler.ccsdk.config.language].multiSelect) {\r\n                var translatedOptions_1 = question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n                return question.multiSelect.map(function (x, i) {\r\n                    if (translatedOptions_1[i]) {\r\n                        return translatedOptions_1[i];\r\n                    }\r\n                    else {\r\n                        return x;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    Config.GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(16);\r\nvar QuestionSurvey = __webpack_require__(21);\r\nvar QuestionStart = __webpack_require__(22);\r\nvar QuestionSingleline = __webpack_require__(23);\r\nvar QuestionNumber = __webpack_require__(24);\r\nvar QuestionMultiline = __webpack_require__(25);\r\nvar QuestionCheckbox = __webpack_require__(26);\r\nvar QuestionRadio = __webpack_require__(27);\r\nvar QuestionRadioImage = __webpack_require__(28);\r\nvar QuestionScale = __webpack_require__(29);\r\nvar QuestionCSATAgreement5 = __webpack_require__(30);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(31);\r\nvar QuestionNPS = __webpack_require__(32);\r\nvar QuestionSelect = __webpack_require__(33);\r\nvar QuestionMultiSelect = __webpack_require__(34);\r\nvar QuestionSmile = __webpack_require__(35);\r\nvar QuestionSmileInverted = __webpack_require__(36);\r\nvar QuestionStar = __webpack_require__(37);\r\nvar QuestionSlider = __webpack_require__(38);\r\nvar OptionRadioImage = __webpack_require__(39);\r\nvar OptionRadio = __webpack_require__(40);\r\nvar OptionCheckbox = __webpack_require__(41);\r\nvar OptionCheckboxImage = __webpack_require__(42);\r\nvar ThankYou = __webpack_require__(43);\r\nvar LanguageSelector = __webpack_require__(44);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isAnd(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isAnd = isAnd;\r\nfunction isOr(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isOr = isOr;\r\nfunction isNumberCheck(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isNumberCheck = isNumberCheck;\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nfunction doesSatisfy(surveyHandler, filterQuestion) {\r\n    var answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n    if (isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    }\r\n    else {\r\n        // any text match for text answers\r\n        if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n            if (answer.textInput && answer.textInput !== ' ') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        var iFoundAll = false;\r\n        var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n        var questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n        if (!answer) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n            var aAnswer = _a[_i];\r\n            if (question.displayType === 'MultiSelect') {\r\n                var selectedOptions = answer.textInput.split(',');\r\n                if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            else if (questionAnswerText === aAnswer) {\r\n                iFoundAll = true;\r\n            }\r\n        }\r\n        return iFoundAll;\r\n    }\r\n    return false;\r\n}\r\nexports.doesSatisfy = doesSatisfy;\r\nfunction questionCompare(a, b) {\r\n    return a.sequence - b.sequence;\r\n}\r\nexports.questionCompare = questionCompare;\r\nfunction checkLanguage(surveyHandler, fOption) {\r\n    if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n        return fOption.language === surveyHandler.ccsdk.config.language;\r\n    }\r\n    return false;\r\n}\r\nexports.checkLanguage = checkLanguage;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            var selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = selectionTrigger.textContent;\r\n            var selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectionTrigger.setAttribute('data-selection-value', value);\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                selectionTrigger.textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n                    selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                    selectedValueText = value;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n                selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.selectOptions(selectedValueText);\r\n                selectedValueText;\r\n                if (selectedOptionText.length < 1) {\r\n                    selectionTrigger.textContent = 'Select';\r\n                }\r\n                else {\r\n                    selectionTrigger.textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value, question, surveyHandler) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        var selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n        var selectedValueList = value.split(',');\r\n        var translatedSelection = selectedValueList.map(function (x) { return LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x); });\r\n        selectTrigger.textContent = translatedSelection.join(',');\r\n        selectTrigger.setAttribute('data-selection-value', value);\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.removeOption = function (el) {\r\n        this.util.removeClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                    else {\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    Select.prototype.addOrRemoveFromList = function (listAsString, item) {\r\n        var list = listAsString.split(',');\r\n        var itemIndex = list.indexOf(item);\r\n        if (itemIndex !== -1) {\r\n            list.splice(itemIndex, 1);\r\n        }\r\n        else {\r\n            list.push(item);\r\n        }\r\n        return list.join(',');\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                // console.log( aQuestion );\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var surveyQuestions = surveyHandler.getSurveyQuestions();\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (surveyQuestions.indexOf(aQuestion) === -1) {\r\n                            surveyQuestions.push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyQuestions.indexOf(aQuestion) !== -1) {\r\n                            aRemovedCount++;\r\n                            surveyQuestions.splice(surveyQuestions.indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(filter_utils_1.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(12);\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n    Array.from = (function () {\r\n        var toStr = Object.prototype.toString;\r\n        var isCallable = function (fn) {\r\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n        };\r\n        var toInteger = function (value) {\r\n            var number = Number(value);\r\n            if (isNaN(number)) {\r\n                return 0;\r\n            }\r\n            if (number === 0 || !isFinite(number)) {\r\n                return number;\r\n            }\r\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n        };\r\n        var maxSafeInteger = Math.pow(2, 53) - 1;\r\n        var toLength = function (value) {\r\n            var len = toInteger(value);\r\n            return Math.min(Math.max(len, 0), maxSafeInteger);\r\n        };\r\n        // The length property of the from method is 1.\r\n        return function from(arrayLike /*, mapFn, thisArg */) {\r\n            // 1. Let C be the this value.\r\n            var C = this;\r\n            // 2. Let items be ToObject(arrayLike).\r\n            var items = Object(arrayLike);\r\n            // 3. ReturnIfAbrupt(items).\r\n            if (arrayLike == null) {\r\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n            }\r\n            // 4. If mapfn is undefined, then let mapping be false.\r\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n            var T;\r\n            if (typeof mapFn !== 'undefined') {\r\n                // 5. else\r\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n                if (!isCallable(mapFn)) {\r\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n                }\r\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n                if (arguments.length > 2) {\r\n                    T = arguments[2];\r\n                }\r\n            }\r\n            // 10. Let lenValue be Get(items, \"length\").\r\n            // 11. Let len be ToLength(lenValue).\r\n            var len = toLength(items.length);\r\n            // 13. If IsConstructor(C) is true, then\r\n            // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n            // of C with an argument list containing the single item len.\r\n            // 14. a. Else, Let A be ArrayCreate(len).\r\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n            // 16. Let k be 0.\r\n            var k = 0;\r\n            // 17. Repeat, while k < len… (also steps a - h)\r\n            var kValue;\r\n            while (k < len) {\r\n                kValue = items[k];\r\n                if (mapFn) {\r\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n                }\r\n                else {\r\n                    A[k] = kValue;\r\n                }\r\n                k += 1;\r\n            }\r\n            // 18. Let putStatus be Put(A, \"length\", len, true).\r\n            A.length = len;\r\n            // 20. Return A.\r\n            return A;\r\n        };\r\n    }());\r\n}\r\n// custom event polyfill\r\n(function () {\r\n    if (typeof window.CustomEvent === \"function\")\r\n        return false;\r\n    function CustomEvent(event, params) {\r\n        params = params || {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            detail: undefined\r\n        };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n// includes polyfill\r\nif (!Array.prototype.includes) {\r\n    Object.defineProperty(Array.prototype, 'includes', {\r\n        value: function (searchElement, fromIndex) {\r\n            if (this == null) {\r\n                throw new TypeError('\"this\" is null or not defined');\r\n            }\r\n            // 1. Let O be ? ToObject(this value).\r\n            var o = Object(this);\r\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n            var len = o.length >>> 0;\r\n            // 3. If len is 0, return false.\r\n            if (len === 0) {\r\n                return false;\r\n            }\r\n            // 4. Let n be ? ToInteger(fromIndex).\r\n            //    (If fromIndex is undefined, this step produces the value 0.)\r\n            var n = fromIndex | 0;\r\n            // 5. If n ≥ 0, then\r\n            //  a. Let k be n.\r\n            // 6. Else n < 0,\r\n            //  a. Let k be len + n.\r\n            //  b. If k < 0, let k be 0.\r\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n            function sameValueZero(x, y) {\r\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n            }\r\n            // 7. Repeat, while k < len\r\n            while (k < len) {\r\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                if (sameValueZero(o[k], searchElement)) {\r\n                    return true;\r\n                }\r\n                // c. Increase k by 1. \r\n                k++;\r\n            }\r\n            // 8. Return false\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(14);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n    // Disabling this as Sentry captures errors from host web site. \r\n    // let sentry = document.createElement( 'script' );\r\n    // sentry.src = \"https://browser.sentry-cdn.com/4.5.3/bundle.min.js\";\r\n    // sentry.crossOrigin = \"anonymous\";\r\n    // sentry.onload = () => {\r\n    //   Sentry.init( { dsn: 'https://49d72b03f26d4936a104ceb51cd1f669@sentry.io/1391030' } );\r\n    // }\r\n    // document.head.appendChild( sentry );\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    surveyToken = decodeURIComponent(surveyToken).trim();\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-coolDown') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-coolDown')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: window.isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    if (!SurveyManager_1.SurveyManager ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken] ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom) {\r\n        return;\r\n    }\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Trigger Type', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Event Listeners', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken, questionId, answerObject) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionId,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken, questionTag, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by tag', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionTag,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken, questionNote, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by Note', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionNote,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(15);\r\nvar DomSurvey_1 = __webpack_require__(46);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(49);\r\nvar Triggers_1 = __webpack_require__(50);\r\nvar Request_1 = __webpack_require__(4);\r\nvar Config_1 = __webpack_require__(6);\r\nvar tracking_1 = __webpack_require__(52);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.requester = new Request_1.RequestHelper();\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        this.tracking = new tracking_1.MatomoTracker();\r\n        this.tracking.token = surveyToken;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var self = this;\r\n        var successcb = function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        };\r\n        Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var successcb = function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var _this = this;\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var successcb = function (throttleResponse) {\r\n            _this.debug ? console.log(throttleResponse) : '';\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers, successcb, null);\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var ccSDKElement = document.querySelector('.cc-sdk');\r\n        if (!ccSDKElement) {\r\n            return;\r\n        }\r\n        var ccSDKDir = ccSDKElement.getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n        ccSDKElement.setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.tracking.trackEvent('Welcome Pop up Position', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: this.survey.surveyDisplay.position,\r\n                action: null\r\n            }\r\n        }, null, null);\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var self = this;\r\n        var successcb = function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n                self.tracking.username = surveyData.questions[0].user;\r\n            }\r\n            self.tracking.token = self.surveyToken;\r\n            self.tracking.trackEvent('Login Success', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: 'Token',\r\n                    action: self.surveyToken\r\n                }\r\n            }, console.log, console.error);\r\n            self.tracking.trackEvent('Survey Length', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: surveyData.questions.length + \" Questions\",\r\n                    action: (surveyData.preFill ? surveyData.preFill.length : 0) + \" Prefills\"\r\n                }\r\n            }, null, null);\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            if (!self.config.skipWelcomePage) {\r\n                self.dom.hideLoader();\r\n            }\r\n            if (self.surveyData) {\r\n                self.initSurveyQuestions();\r\n            }\r\n            else {\r\n                this.tracking.trackEvent('Expired Survey', {\r\n                    token: this.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n                self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n            }\r\n        };\r\n        var errorcb = null;\r\n        this.survey.fetchQuestions(successcb, errorcb);\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n            self.survey.displayWelcomeQuestion();\r\n        }\r\n        else if (self.config.skipWelcomePage) {\r\n            var onImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n            document.dispatchEvent(onImpressionEvent);\r\n            self.dom.startSurvey();\r\n        }\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n        this.tracking.trackEvent('Survey Destroyed', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: (new Date() - window.globalSurveyStartTime) + 's',\r\n                action: null\r\n            }\r\n        }, null, null);\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (questionId, answer) {\r\n        //save this in this.surveyHandler\r\n        // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n        this.survey.fillPrefillDirect(questionId, answer);\r\n    };\r\n    Survey.prototype.fillPrefill = function (questionTag, answer) {\r\n        //save this in this.surveyHandler\r\n        this.survey.fillPrefill(questionTag, answer);\r\n    };\r\n    Survey.prototype.fillPrefillByNote = function (questionNote, answer) {\r\n        this.survey.fillPrefillByNote(questionNote, answer);\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                console.log('enable click trigger ##');\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(6);\r\nvar Request_1 = __webpack_require__(4);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(45);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select_1 = __webpack_require__(9);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this._prefillsPartiallyPosted = false;\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost(null, null);\r\n            if (_this.ccsdk && _this.ccsdk.tracking) {\r\n                _this.ccsdk.tracking.trackEvent('Completed Survey', {\r\n                    token: _this.ccsdk.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n            }\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{branding}}\", _this.surveyData.branding && _this.surveyData.branding.toUpperCase() === 'NONE' ? 'no-branding' : 'full-branding');\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function (successcb, errorcb) {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        Request_1.RequestHelper.get(surveyUrl, successcb, errorcb);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupPrefill();\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.setupPrefill = function () {\r\n        var _this = this;\r\n        if (this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0) {\r\n            this.surveyData.preFill.map(function (response) {\r\n                _this.fillPrefillQuestionObject(response.questionId, response);\r\n            });\r\n        }\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function (warningWelcomeText) {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        if (warningWelcomeText) {\r\n            document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n        }\r\n        else {\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n        }\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.setCoolDownPeriod = function (campaign, surveyToken) {\r\n        if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n            Cookie_1.Cookie.set(surveyToken + '-coolDown', 'true', campaign.coolDownPeriod / 86400, '/');\r\n        }\r\n        else {\r\n            Cookie_1.Cookie.set(surveyToken + '-coolDown', 'true', 1, '/');\r\n        }\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n        if (this.surveyData.translated) {\r\n            options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        }\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            // self.postPrefillPartialAnswer( false, null, null );\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (tag, value) {\r\n        this.prefillWithTags[tag.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (note, value) {\r\n        this.prefillWithNote[note.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (questionId, value) {\r\n        this.prefillDirect[questionId] = value;\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        // console.log(this.questions);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function (fullSubmission, successcb, errorcb) {\r\n        if (fullSubmission === void 0) { fullSubmission = false; }\r\n        if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n            return;\r\n        }\r\n        this._prefillsPartiallyPosted = true;\r\n        if (!this.surveyData.partialResponseId) {\r\n            return;\r\n        }\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run successCB if there is one.\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                return response;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (question.id == id) {\r\n                return question;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete, successcb, errorcb) {\r\n        if (complete === void 0) { complete = false; }\r\n        this.postPrefillPartialAnswer(complete, null, null);\r\n        // let data = new FormData();\r\n        //in case of file.\r\n        // let input = document.querySelector('input[type=\"file\"]') ;\r\n        // data.append('file', input.files[0]);\r\n        var question = this.questionsToDisplay[index];\r\n        if (typeof question === 'undefined') {\r\n            //now?\r\n            // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n        }\r\n        var data = {\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        // if(this.isPartialAvailable == false) {\r\n        //   this.answers.push(data);\r\n        //   return;\r\n        // }\r\n        // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        //if this is the last of displayed question\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n        //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n        // } else {\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        // }\r\n        // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run success callback and return\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function (successcb, errorcb) {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        if (Object.keys(this.surveyAnswers).length == 0) {\r\n            return;\r\n        }\r\n        for (var answer in this.surveyAnswers) {\r\n            var response = this.surveyAnswers[answer];\r\n            if (response && (response.textInput !== null || response.numberInput !== null)) {\r\n                answersAll.push(response);\r\n                lastAnswer = response;\r\n            }\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        if (lastAnswer) {\r\n            var _lastAnswer = {\r\n                text: lastAnswer.textInput,\r\n                number: lastAnswer.numberInput\r\n            };\r\n            this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true, null, null);\r\n        }\r\n        if (finalData.responses && finalData.responses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(postSurveyFinalUrl, finalData, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            successcb();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var displayLegend = question.displayLegend;\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (displayLegend[0]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, displayLegend[0] + '-');\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (displayLegend[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, displayLegend[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0) {\r\n                            if (question.attributes.scaleColor !== 'Gradient') {\r\n                                tileColor = question.attributes.scaleColor;\r\n                            }\r\n                            else {\r\n                                tileColor = \"#02BAEE\";\r\n                            }\r\n                        }\r\n                        else if (question.presentationMode != null && question.presentationMode.indexOf(\"Color\") !== -1) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\r\n                <style>\\\r\n                #id' + question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : ' + tileColor + ';\\\r\n                }\\\r\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : ' + tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        if (question.questionTags.includes(\"ces_agree_5\") || question.questionTags.includes(\"ces_agree_7\")) {\r\n                            startRangeLabel_1 = \"Strongly Disagree\";\r\n                            endRangeLabel_1 = \"Strongly Agree\";\r\n                        }\r\n                        else if (question.questionTags.includes(\"ces_effort_5\") || question.questionTags.includes(\"ces_effort_7\")) {\r\n                            startRangeLabel_1 = \"High Effort\";\r\n                            endRangeLabel_1 = \"Low Effort\";\r\n                        }\r\n                        var displayLegend_1 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend_1) {\r\n                            if (displayLegend_1.length > 0) {\r\n                                startRangeLabel_1 = displayLegend_1[0] ? displayLegend_1[0] : null;\r\n                                endRangeLabel_1 = displayLegend_1[1] ? displayLegend_1[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        var legendDimension = void 0;\r\n                        if (window.isMobile) {\r\n                            if (endRange < 11) {\r\n                                var parentContainer = window.innerWidth - 40;\r\n                                var dimension = ((100 / (endRange - startRange + 1)) - .5) * parentContainer / 100;\r\n                                dimension = dimension > 48 ? 48 : dimension;\r\n                                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                                optionStyle = \"width:\" + dimension + \"px;height:\" + dimension + \"px;padding:\" + (dimension - 15) / 2 + \"px;\";\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        if (question.questionTags.includes(\"CES\")) {\r\n                            for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                                options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-' + endRange + '-scale-' + initial_1 + ' ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var initial_2 = startRange; initial_2 <= endRange; initial_2 += divider) {\r\n                                options += '<span data-rating=\"' + initial_2 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_2 + '</span>';\r\n                            }\r\n                        }\r\n                        if ((endRange - startRange + 1) <= 11) {\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                            var optionMaxWidth = (((endRange - startRange + 1) * 38 / 2) - 5) + 'px';\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{legendStyle}}\", \"style=\\\"position:relative;width:\" + (mobileImageUrl ? '100%' : legendDimension + 'px') + \";min-height: 20px;\\\"\");\r\n                        questionTemplate = questionTemplate.replace(/\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class');\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{characterLimit}}\", question.attributes && question.attributes.characterLimit ? question.attributes.characterLimit : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    var invertedMultiSelect = void 0;\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    else {\r\n                        invertedMultiSelect = question.multiSelect;\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        window.ccsdkDebug ? console.log('select radio image', checkOptionContainsImage) : '';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect.length > 0) && multiSelect[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect.length > 1) && multiSelect[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            window.ccsdkDebug ? console.log({ options2: options2 }) : '';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        var invertedMultiSelect_1;\r\n                        if (question.presentationMode == 'Invert') {\r\n                            invertedMultiSelect_1 = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n                        }\r\n                        else {\r\n                            invertedMultiSelect_1 = question.multiSelect;\r\n                        }\r\n                        options1 = self.util.generateRadioOptions(invertedMultiSelect_1, multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        window.ccsdkDebug ? console.log('select type 3') : '';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    // console.log( questionTemplate );\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Dropdown\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Date\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log('prefillTags', this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    if (question.conditionalFilter === null ||\r\n                        (question.conditionalFilter != null &&\r\n                            (question.conditionalFilter.filterquestions == null\r\n                                || question.conditionalFilter.filterquestions.length == 0))) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            // console.log(this.questionsToDisplay);\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined') {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug ? console.log('fillprefillwithtags', this.prefillWithTags) : '';\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug ? console.log('fillprefillwithtags', tag) : '';\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    window.ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags) : '';\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        // let bodyElement = <HTMLElement>document.\r\n        //   getElementsByTagName( \"body\" )[ 0 ];\r\n        // this.util.removeClass( bodyElement, \"blurr\" );\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(19)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(18)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul{padding-right:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;right:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;width:100%;left:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-left:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-right:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:right}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-left:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:left;bottom:9px;left:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-left:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-right:0}.cc-sdk .submit-icon{margin-left:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.cc-sdk .radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-right:15px}.cc-sdk .cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-sdk .cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-right:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-right:0}.cc-sdk .submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;right:0;left:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}[dir=rtl].cc-sdk ul{padding-left:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}[dir=rtl].cc-sdk.cc-question-container{margin-right:0;margin-left:0;left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;left:-2px;right:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}[dir=rtl].cc-sdk .cc-question-container:before{margin-right:-4px;margin-left:0}[dir=rtl].cc-sdk .multiline-box{margin:0 0 0 50px}[dir=rtl].cc-sdk .hl.dropdown{background-position:3%;text-align:left}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:left}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:left}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-right:20px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:auto;left:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container{right:auto;left:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.cc-sdk .option-number-item{color:#fff;float:right;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-right:1px;margin-left:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-right:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;right:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .option-right-rating-text{right:auto;left:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:left;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-left:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-right:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;text-align:right;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;right:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-left:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-right:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-right:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-right:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:right;font-size:15px;height:35px;box-sizing:border-box;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:right;width:35%;left:0}.cc-sdk .radial-legend-left{width:35%;text-align:left;right:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-left:1px;margin-right:0;float:left}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 418px);left:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{right:0;width:40%;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:0;text-align:left}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-left:29px;margin-right:0}[dir=rtl].cc-sdk .option-star-box img{margin-right:19px;margin-left:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-right:0;margin-left:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%;text-align:left}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-right:0;margin-left:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;text-align:right;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{left:10px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 322px);left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{right:auto!important;left:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{left:auto!important;right:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-right:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-right:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;right:2px;left:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:left}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:0 4px 4px 0}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";right:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);right:4px;transform:rotate(45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:0;display:block;padding-left:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{right:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-right:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;right:auto;top:0;left:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{left:0;right:auto}[dir=rtl].cc-sdk .cc-sdk-loader{left:28px;right:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-left:10px;margin-right:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{left:0}.cc-sdk .left{right:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;right:auto;top:0;left:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{right:0;left:auto;margin-right:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(-100%)}.hide-left-right{transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{left:0;right:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\" : \".cc-sdk ul{padding-left:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;left:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;width:100%;right:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-right:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-left:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:left}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-right:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:right;bottom:9px;right:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-right:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-left:0}.cc-sdk .submit-icon{margin-right:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.cc-sdk .radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-left:15px}.cc-sdk .cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-sdk .cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-left:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-left:0}.cc-sdk .submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;left:0;right:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}[dir=rtl].cc-sdk ul{padding-right:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}[dir=rtl].cc-sdk.cc-question-container{margin-left:0;margin-right:0;right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;right:-2px;left:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}[dir=rtl].cc-sdk .cc-question-container:before{margin-left:-4px;margin-right:0}[dir=rtl].cc-sdk .multiline-box{margin:0 50px 0 0}[dir=rtl].cc-sdk .hl.dropdown{background-position:97%;text-align:right}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:right}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:right}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-left:20px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:auto;right:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container{left:auto;right:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.cc-sdk .option-number-item{color:#fff;float:left;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-left:1px;margin-right:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-left:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;left:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .option-right-rating-text{left:auto;right:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:right;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-right:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-left:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;text-align:left;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;left:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-right:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-left:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-left:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-left:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:left;font-size:15px;height:35px;box-sizing:border-box;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:left;width:35%;right:0}.cc-sdk .radial-legend-left{width:35%;text-align:right;left:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-right:1px;margin-left:0;float:right}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 418px);right:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{left:0;width:40%;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:0;text-align:right}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-right:29px;margin-left:0}[dir=rtl].cc-sdk .option-star-box img{margin-left:19px;margin-right:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-left:0;margin-right:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%;text-align:right}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-left:0;margin-right:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;text-align:left;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{right:10px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 322px);right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{left:auto!important;right:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{right:auto!important;left:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-left:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-left:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;left:2px;right:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:right}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:4px 0 0 4px}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";left:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);left:4px;transform:rotate(-45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:0;display:block;padding-right:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{left:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-left:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;left:auto;top:0;right:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{right:0;left:auto}[dir=rtl].cc-sdk .cc-sdk-loader{right:28px;left:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-right:10px;margin-left:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{right:0}.cc-sdk .left{left:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;left:auto;top:0;right:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{left:0;right:auto;margin-left:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(100%)}.hide-left-right{transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{right:0;left:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(20);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id={{surveyToken}}-survey> <div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\"> <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div> <div class=\\\"cc-popup-container-2__icons cc-left-icon\\\"> <span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span> <ul class=cc-sdk-loader> <li class=cc-sdk-chart data-percent=75></li> </ul> </div> <div class=\\\"cc-popup-container-2__icons cc-right-icon\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\"> </div> <div class=cc-survey-container> <div class=cc-survey-content> <div class=cc-questions-container> </div> </div> <div class=\\\"submit-icon act-cc-button-next\\\"></div> <div class=\\\"{{location}} progress-bar\\\" id=progressBar> <span class=progress-line id=progress-line></span> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id={{surveyToken}}-welcome> <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div> <div class=\\\"cc-loaderimg hide\\\"> <svg version=1.1 id=L9 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=preserve> <path fill=red d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\"> <animateTransform attributeName=transform attributeType=XML type=rotate dur=1s from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=indefinite /> </path> </svg> </div> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\"> <div class=cc-message-box> <h2 class=cc-message-box__text>{{question}}</h2> <a href=javascript:void(0) class=\\\"cc-message-box__btn act-cc-{{action}} mobile-hide\\\" id=\\\"\\\">{{button}}</a> </div> </div>\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=singleline data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=cc-sdk-form-control> </div> </div>\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=number data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=cc-sdk-form-control> </div> </div>\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=multiline data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <textarea class=\\\"multiline-box cc-sdk-form-control\\\" maxlength={{characterLimit}} id={{questionId}} placeholder=\\\"Share your thoughts...\\\"></textarea> </div> </div>\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=checkbox data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-big-list-container\\\" id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=radio data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required={{isRequired}} data-type=radioImage data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=scale data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id={{questionId}}> <div class=cc-question-container__list> {{optionsRange}} <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=0 title=0 href=# class=option-number-item data-rating=0 coords=83,193,62,228,38,212,23,193,57,167 shape=poly> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=54,165,21,189,11,173,4,154,2,140,43,134 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=43,131,2,135,1,118,5,93,8,83,45,97 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=48,92,10,78,17,61,28,44,39,32,66,66 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=70,61,42,30,55,20,70,14,91,5,101,45 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=105,44,92,5,113,2,134,3,147,5,139,46 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=141,46,150,6,169,11,184,19,200,30,172,63 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=175,63,202,34,218,48,227,66,232,78,194,93 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=196,97,233,81,239,103,240,118,240,135,199,130 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=199,135,240,140,236,159,229,175,221,189,187,167 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=183,169,217,191,204,212,178,229,158,192 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map2 /> <map name=Map2 id=Map2> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=67,180,40,210,26,195,15,176,11,169,47,152 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=48,149,9,163,2,140,1,124,3,110,45,115 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=44,110,4,105,8,79,17,67,22,57,58,79 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=58,76,24,54,33,39,48,29,65,18,85,54 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=87,51,68,15,85,7,106,3,120,3,122,45 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=123,42,123,0,141,2,163,8,176,14,157,52 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=159,53,180,16,201,30,212,44,220,54,186,77 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=188,80,222,55,229,69,236,83,241,108,199,111 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=200,116,239,112,241,128,240,146,234,165,196,150 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=193,153,233,168,225,187,212,202,202,212,175,181 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=legend-container {{legendstyle}}> <span class=\\\"option-left-rating-text {{optionLeftExtraClass}} {{radialLegend}}-left\\\" style=max-width:maxWidth>{{leftLabel}}</span> <span class=\\\"option-right-rating-text {{optionRightExtraClass}} {{radialLegend}}-right\\\" style=max-width:maxWidth>{{rightLabel}}</span> </div> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> {{style}}\";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <ul class=cc-question-container__list> <li> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-0> <label for=service-0></label> </div> <span>Completely Disagree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-1> <label for=service-1></label> </div> <span>Somewhat Disagree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-2> <label for=service-2></label> </div> <span>Agree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-3> <label for=service-3></label> </div> <span>Somewhat Agree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-4> <label for=service-4></label> </div> <span>Completely Agree</span> </span> </li> </ul> </div> </div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id={{questionId}}> <ul class=cc-question-container__list> <li> <span class=\\\"option-csat option-smile-box cc-one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-0> <label for=service-0></label> </div> <span>Very Unsatisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-1> <label for=service-1></label> </div> <span>Unsatisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-2> <label for=service-2></label> </div> <span>Neutral</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-3> <label for=service-3></label> </div> <span>Satisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-4> <label for=service-4></label> </div> <span>Very Satisfied</span> </span> </li> </ul> </div> </div>\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=nps data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id={{questionId}}> <div class=cc-question-container__list> <div class=cc-options-container> <span data-rating=0 class=\\\"option-number-item mobile-hide option-zero\\\">0</span> <span data-rating=1 class=\\\"option-number-item mobile-hide option-one\\\">1</span> <span data-rating=2 class=\\\"option-number-item mobile-hide option-two\\\">2</span> <span data-rating=3 class=\\\"option-number-item mobile-hide option-three\\\">3</span> <span data-rating=4 class=\\\"option-number-item mobile-hide option-four\\\">4</span> <span data-rating=5 class=\\\"option-number-item mobile-hide option-five\\\">5</span> <span data-rating=6 class=\\\"option-number-item mobile-hide option-six\\\">6</span> <span data-rating=7 class=\\\"option-number-item mobile-hide option-seven\\\">7</span> <span data-rating=8 class=\\\"option-number-item mobile-hide option-eight\\\">8</span> <span data-rating=9 class=\\\"option-number-item mobile-hide option-nine\\\">9</span> <span data-rating=10 class=\\\"option-number-item mobile-hide option-ten\\\">10</span> <div class=\\\"circle-image desktop-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/circle.svg class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=0 coords=86,199,61,177,25,201,38,219,52,230,66,238 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=1 coords=59,173,22,198,12,180,5,160,4,146,44,138 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=2 coords=44,134,49,101,8,84,3,98,0,116,2,141 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=3 coords=49,97,71,68,42,33,25,54,14,71,10,81 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=4 coords=74,65,106,47,94,5,70,14,46,31 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=5 coords=144,47,154,4,135,1,114,1,98,4,108,48 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=6 coords=149,48,157,5,183,15,209,30,180,65 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=7 coords=183,67,211,34,231,56,243,79,204,97 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=8 coords=203,100,245,85,251,106,252,124,251,141,207,135 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=9 coords=208,140,251,146,245,169,231,197,194,172 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=10 coords=193,179,229,201,218,218,202,230,185,238,166,200 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=ccsdk-clearfix></span> <span class=\\\"option-left-rating-text radial-legend-left\\\">Not at all likely</span> <span class=\\\"option-right-rating-text radial-legend-right\\\">Very likely</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" data-selection-value={{model}} placeholder=Select> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" placeholder=Select data-type=multiple> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=\\\"option-smile-box cc-one\\\" data-rating=1></span> <span class=\\\"option-smile-box cc-two\\\" data-rating=2></span> <span class=\\\"option-smile-box cc-three\\\" data-rating=3></span> <span class=\\\"option-smile-box cc-four\\\" data-rating=4></span> <span class=\\\"option-smile-box cc-five\\\" data-rating=5></span> </div> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=\\\"option-smile-box cc-five\\\" data-rating=5></span> <span class=\\\"option-smile-box cc-four\\\" data-rating=4></span> <span class=\\\"option-smile-box cc-three\\\" data-rating=3></span> <span class=\\\"option-smile-box cc-two\\\" data-rating=2></span> <span class=\\\"option-smile-box cc-one\\\" data-rating=1></span> </div> <span class=option-right-rating-text>{{leftLabel}}</span> <span class=option-left-rating-text>{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=star data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=option-star-box data-rating=1></span> <span class=option-star-box data-rating=2></span> <span class=option-star-box data-rating=3></span> <span class=option-star-box data-rating=4></span> <span class=option-star-box data-rating=5></span> </div> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-required={{isRequired}} data-type=slider data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color cc-sdk-range-slider\\\" id={{questionId}}> <div class=cc-question-container__slider> <input type=range value={{min}} min={{min}} max={{max}} class=\\\"cc-sdk-range cc-blue\\\"> <div class=legend-container {{legendstyle}}> <span class=option-left-rating-text>{{minLabel}}{{min}}</span> <span class=option-right-rating-text>{{maxLabel}}{{max}}</span> <span class=\\\"slider-tip act-slider-tip\\\"></span> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-img-service-{{labelFor}} value={{value}}> <label for={{qId}}-img-service-{{labelFor}}></label> </div> <span> <label for={{qId}}-img-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\"> <img src={{image}} /> {{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-service-{{labelFor}} value={{value}}> <label for={{qId}}-service-{{labelFor}}></label> </div> <span> <label for={{qId}}-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label for=check-{{labelFor}}> </label> </div> <span> <label for=check-{{labelFor}}>{{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label for=check-{{labelFor}}> </label> </div> <span> <label for=check-{{labelFor}}> <img src={{image}} /> {{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=cc-thankyou-container> <div class=cc-question-container__text> <p>{{question}}</p> <p class=\\\"cc-thankyou-powered {{branding}}\\\"><span class=cc-thankyou-logo></span>Delight powered by Cloudcherry</p> </div> <div class=cc-question-container__content> </div> </div>\";\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label></span>Select language</p> <span class=cc-question-container__required>* Mandatory</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionalText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionalText_1 = question.text.split(':');\r\n            if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n                conditionalText_1 = conditionalText_1[0] + ': <br><span class=\"text-normal\">' + conditionalText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionalText_1 = conditionalText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (filter_utils_1.checkLanguage(surveyHandler, fOption)\r\n                            || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                                && surveyHandler.ccsdk.config.language.toLowerCase().includes('default')\r\n                                && fOption.language === null)\r\n                            || (surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null)) {\r\n                            var groupTitle = void 0;\r\n                            if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                                groupTitle = conditionalText.split(':')[0];\r\n                                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n                            }\r\n                            else {\r\n                                conditionalText = fOption.text;\r\n                            }\r\n                        }\r\n                        conditionalText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionalText;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(9);\r\nvar Theme_1 = __webpack_require__(47);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar Slider_1 = __webpack_require__(48);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (this.ccsdk.surveyData.translated === null || (this.ccsdk.surveyData.translated && Object.keys(this.ccsdk.surveyData.translated).length < 1)) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        if (this.ccsdk && this.ccsdk.tracking) {\r\n            this.ccsdk.tracking.trackEvent('Questions Answered', {\r\n                token: this.ccsdk.surveyToken,\r\n                data: {\r\n                    name: this.qIndex + \"/\" + this.ccsdk.survey.questionsToDisplay.length,\r\n                    action: this.currentQuestionId\r\n                }\r\n            }, null, null);\r\n        }\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        // console.debug()\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n            this.removePrevListener('.cc-language-select');\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        // console.log( compiledTemplate );\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        // console.log( 'qtype', qType )\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            window.ccsdkDebug ? console.log('Checkbox selected', rating) : '';\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-star-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            console.log('dispatching event in csat', this);\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        // console.log( 'singleline qResponse', self.qResponse );\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                var question = this.ccsdk.survey.getQuestionById(questionId);\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text, question, this.ccsdk.survey);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].getAttribute('data-selection-value');\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = \"\\n\\t\\t.cc-sdk #progressBar{\\n\\t\\t\\tbackground : \" + this.brandColorDark + \";\\n\\t\\t}\\n\\t\\t.cc-sdk #progress-line{ \\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n\\t\\t\\tbackground:\" + brandColor + \";\\n\\t\\t}\\n\\t\\t.ccsdk-overlay.glass{\\n\\t\\t\\tbackground-color:\" + this.util.hexToRGB(brandColor, .5) + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n\\t\\t\\tborder-color: #fff;\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-sdk-form-control:focus {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-message-box__btn{\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t\\tcolor:#fff;\\n\\t\\t}\\n\\t\\t\\t.cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t[dir=\\\"rtl\\\"].cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-question-container__required-label{\\n\\t\\t\\tcolor: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-webkit-slider-runnable-track{\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\t   background: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: -webkit-linear-gradient(-45deg, \" + brandColor + \"' 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t   }\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-moz-range-track {\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\tbackground: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: -webkit-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t}\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-webkit-slider-thumb{\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-moz-range-thumb {\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk svg.timer circle {\\n\\t\\t\\tanimation: countdown \" + time + \"s linear 1 forwards;\\n\\t\\t\\tstroke: \" + brandColor + \";\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-checkbox label:hover:before{\\n\\t\\t\\t\\tborder: solid 1px \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t @media (max-width: 768px){\\n\\t \\t\\t\\t.ccsdk-overlay.glass{\\n\\t \\t\\t\\tbackground-color:rgba(255,255,255,.85);\\n\\t \\t\\t\\tbackground-image:none;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container{\\n\\t\\t\\t\\t\\tbackground-color : transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\\n\\t\\t\\t\\t\\tbackground-color : \" + this.util.hexToRGB(brandColor, .9) + \";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\n\\t\\t\\t\\t\\tcolor:#fff;\\n\\t\\t\\t\\t}\\n\\t\\t\";\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('cc-sdk-range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(51);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                if (this.ccsdk && this.ccsdk.tracking) {\r\n                    this.ccsdk.tracking.trackEvent('Popped Up', {\r\n                        token: this.ccsdk.tracking.token,\r\n                        data: {\r\n                            name: null,\r\n                            action: null\r\n                        }\r\n                    }, null, null);\r\n                }\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request_1 = __webpack_require__(4);\r\nvar MatomoTracker = /** @class */ (function () {\r\n    function MatomoTracker() {\r\n    }\r\n    MatomoTracker.prototype.trackEvent = function (event, payload, successCb, errorCb) {\r\n        var url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n        // constants for project\r\n        var idsite = 4;\r\n        var rec = 1;\r\n        var searchParams = {\r\n            idsite: idsite,\r\n            rec: rec,\r\n            action_name: event,\r\n            url: window.location.href,\r\n            action_url: window.location.href,\r\n            uid: this.username,\r\n            _cvar: { '1': ['Token', payload.token] },\r\n            new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n            e_c: event,\r\n            e_a: payload.data.action,\r\n            e_n: payload.data.name,\r\n            rand: Math.ceil(Math.random() * 100)\r\n        };\r\n        Object.keys(searchParams).forEach(function (x) {\r\n            var param;\r\n            if (typeof searchParams[x] === 'string') {\r\n                param = searchParams[x];\r\n            }\r\n            else {\r\n                param = JSON.stringify(searchParams[x]);\r\n            }\r\n            url.searchParams.set(x, param);\r\n        });\r\n        return Request_1.RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n    };\r\n    return MatomoTracker;\r\n}());\r\nexports.MatomoTracker = MatomoTracker;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 398115974da89c3141e0","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || ( <any>p ).msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: string[], translatedArr: string[] ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let translatedOpt = ( translatedArr[ i ] || arr[ i ] ).split( ';' );\r\n        let arrOpt = arr[ i ].split( ';' );\r\n        res += '<option value=\"' + arrOpt[ 0 ] + '\">' + ( translatedOpt[ 0 ] ) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && ( opt.indexOf( ';' ) !== -1 ) && ( opt.indexOf( '.' ) !== -1 );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        let translatedOpt = translatedArr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: string, translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if ( !SurveyManager.surveyInstances || !SurveyManager.surveyInstances[ surveyId ] ) {\r\n      console.error( 'Microsurvey not properly set up. Contact Support.' );\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n    ( window as any ).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\n\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: \"\",\r\n  question_start: \"\",\r\n  question_text: \"\",\r\n  question_number: \"\",\r\n  question_scale: \"\",\r\n  question_csat_agreement_5: \"\",\r\n  question_csat_satisfaction_5: \"\",\r\n  question_nps: \"\",\r\n  question_multi_line_text: \"\",\r\n  question_multi_select: \"\",\r\n  question_radio: \"\",\r\n  question_radio_image: \"\",\r\n  question_checkbox: \"\",\r\n  question_select: \"\",\r\n  question_smile_5: \"\",\r\n  question_smile_5_inverted: \"\",\r\n  question_star_5: \"\",\r\n  question_slider: \"\",\r\n  option_radio_image: \"\",\r\n  option_radio: \"\",\r\n  option_checkbox: \"\",\r\n  option_checkbox_image: \"\",\r\n  thankyou: \"\",\r\n  language_selector: \"\"\r\n\r\n};\r\n\r\n\r\ntemplates.question_survey = QuestionSurvey;\r\n\r\ntemplates.question_start = QuestionStart;\r\n\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\n\r\n\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\n\r\ntemplates.question_slider = QuestionSlider;\r\n\r\n\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\n\r\n\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\n\r\n\r\ntemplates.question_select = QuestionSelect;\r\n\r\n\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\n\r\ntemplates.question_star_5 = QuestionStar;\r\n\r\ntemplates.question_checkbox = QuestionCheckbox;\r\n\r\ntemplates.question_radio = QuestionRadio;\r\n\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\n\r\ntemplates.thankyou = ThankYou;\r\n\r\ntemplates.language_selector = LanguageSelector;\r\n\r\n\r\nexport { templates };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","export function isAnd( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.answerCheck[ 0 ] === \"lt\" || filterQuestion.answerCheck[ 0 ] === \"gt\" || filterQuestion.answerCheck[ 0 ] === \"eq\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy( surveyHandler: any, filterQuestion: any ): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId( filterQuestion.questionId );\r\n  if ( isNumberCheck( filterQuestion ) ) {\r\n    if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"lt\" ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput < filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"gt\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput > filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"eq\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput == filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if ( filterQuestion.answerCheck[ 0 ] && filterQuestion.answerCheck[ 0 ].toLowerCase() === 'any text' ) {\r\n      if ( answer.textInput && answer.textInput !== ' ' ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById( filterQuestion.questionId );\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if ( !answer ) {\r\n      return false;\r\n    }\r\n    for ( let aAnswer of filterQuestion.answerCheck ) {\r\n      if ( question.displayType === 'MultiSelect' ) {\r\n        let selectedOptions = answer.textInput.split( ',' );\r\n        if ( selectedOptions.indexOf( aAnswer ) !== -1 ) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if ( questionAnswerText === aAnswer ) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare( a: any, b: any ) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language \r\n  }\r\n  return false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/filter-utils.ts","import { DomUtilities } from \"./DomUtilities\";\r\nimport {LanguageTextFilter} from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor( qId: string ) {\r\n    this.qId = qId;\r\n  }\r\n  init( qId: string ) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    this.$html = document.querySelectorAll( \"html\" )[ 0 ];\r\n    var select = document.querySelectorAll( \"#\" + qId + \" .cc-select\" );\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[ 0 ].getAttribute( 'data-type' );\r\n    Array.prototype.forEach.call( select, function ( el, i ) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll( \"#\" + qId + \" .cc-select-options\" );\r\n      var classes = self.getAttribute( \"class\" ),\r\n        id = self.getAttribute( \"id\" ),\r\n        name = self.getAttribute( \"name\" );\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute( \"placeholder\" ) + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll( \"option\" );\r\n      Array.prototype.forEach.call( options, function ( el, i ) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute( \"class\" ) + '\" data-value=\"' + el.getAttribute( \"value\" ) + '\">' + el.innerHTML + '</span>';\r\n      } );\r\n      template += '</div></div></div>';\r\n      parent.util.addClass( self, 'hide' );\r\n      self.insertAdjacentHTML( 'afterend', template );\r\n    } );\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-option\", function ( e ) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-option', this ) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute( 'data-value' );\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( select ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectOptions ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectWrapper ) : '';\r\n      let selectionTrigger = select.querySelectorAll( '.cc-select-trigger' )[ 0 ];\r\n\r\n      self.util.addClass( this, \"selection\" );\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute( 'data-selection-value' ) || '';\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n      if ( self.type !== 'multiple' ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        ( window as any ).ccsdkDebug ? console.log( 'selected option', selectedOptionText ) : '';\r\n        self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n        selectionTrigger.setAttribute( 'data-selection-value', value );\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );\r\n        self.util.addClass( self, 'selection' );\r\n      } else {\r\n        ( window as any ).ccsdkDebug ? console.log( selectedOptionText ) : '';\r\n        if ( selectedOptionText != 'Select' ) {\r\n            selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n            selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          ( window as any ).ccsdkDebug ? console.log( selfOption.textContent ) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = selectedValueText;\r\n        selectionTrigger.setAttribute( 'data-selection-value', selectedValueText );\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );        \r\n        self.selectOptions(selectedValueText);\r\n        \r\n        selectedValueText\r\n        if ( selectedOptionText.length < 1 ) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    } );\r\n    this.listeners.push( ref2 );\r\n    ref2.internalHandler = this.util.listener( this.$body, ref2.type, ref2.id, ref2.cb );\r\n    let ref = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-trigger\", function ( e ) {\r\n      self.$html.addEventListener( 'click', function ( e ) {\r\n        if ( !self.util.hasClass( e.target, 'cc-select-option' ) ) {\r\n          self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n          self.$html.removeEventListener( 'click', function () {\r\n          } );\r\n        }\r\n      } )\r\n      var ccSelect = this.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-trigger', ccSelect ) : '';\r\n      self.util.toggleClass( ccSelect, \"opened\" );\r\n      e.stopPropagation();\r\n    } );\r\n    this.listeners.push( ref );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for ( let listener of this.listeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue( value: string, question, surveyHandler ) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll( \"#\" + qId + \" select\" )[ 0 ];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll( \"#\" + qId + \" .cc-select-trigger\" )[ 0 ];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x) );\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption( el: any ) {\r\n    this.util.addClass( el, 'selection' );\r\n  }\r\n\r\n  removeOption(el){\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions( csv: string ) {\r\n    let self = this;\r\n    if ( csv ) {\r\n      let allOptions = csv.split( ',' );\r\n      for ( let option of allOptions ) {\r\n        let domOptions = document.querySelectorAll( \"#\" + self.qId + \" .cc-select-option\" );\r\n        Array.prototype.forEach.call( domOptions, function ( el, i ) {\r\n          if ( el.getAttribute( 'data-value' ) == option ) {\r\n            self.selectOption( el );\r\n          } else {\r\n            \r\n          }\r\n        } );\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string){\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if(itemIndex !== -1){\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif ( !( <any>Array ).from ) {\r\n  ( <any>Array ).from = ( function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function ( fn ) {\r\n      return typeof fn === 'function' || toStr.call( fn ) === '[object Function]';\r\n    };\r\n    var toInteger = function ( value ) {\r\n      var number = Number( value );\r\n      if ( isNaN( number ) ) {\r\n        return 0;\r\n      }\r\n      if ( number === 0 || !isFinite( number ) ) {\r\n        return number;\r\n      }\r\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\r\n    };\r\n    var maxSafeInteger = Math.pow( 2, 53 ) - 1;\r\n    var toLength = function ( value ) {\r\n      var len = toInteger( value );\r\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from( arrayLike /*, mapFn, thisArg */ ) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object( arrayLike );\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if ( arrayLike == null ) {\r\n        throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\r\n      var T;\r\n      if ( typeof mapFn !== 'undefined' ) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if ( !isCallable( mapFn ) ) {\r\n          throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if ( arguments.length > 2 ) {\r\n          T = arguments[ 2 ];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength( items.length );\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while ( k < len ) {\r\n        kValue = items[ k ];\r\n        if ( mapFn ) {\r\n          A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\r\n        } else {\r\n          A[ k ] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }() );\r\n}\r\n\r\n// custom event polyfill\r\n( function () {\r\n\r\n  if ( typeof ( <any>window ).CustomEvent === \"function\" ) return false;\r\n\r\n  function CustomEvent( event, params ) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent( 'CustomEvent' );\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = ( <any>window ).Event.prototype;\r\n\r\n  ( <any>window ).CustomEvent = CustomEvent;\r\n} )();\r\n\r\n// includes polyfill\r\nif ( !( <any>Array.prototype ).includes ) {\r\n  Object.defineProperty( Array.prototype, 'includes', {\r\n    value: function ( searchElement, fromIndex ) {\r\n\r\n      if ( this == null ) {\r\n        throw new TypeError( '\"this\" is null or not defined' );\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object( this );\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if ( len === 0 ) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max( n >= 0 ? n : len - Math.abs( n ), 0 );\r\n\r\n      function sameValueZero( x, y ) {\r\n        return x === y || ( typeof x === 'number' && typeof y === 'number' && isNaN( x ) && isNaN( y ) );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while ( k < len ) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if ( sameValueZero( o[ k ], searchElement ) ) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  } );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills/ccsdk.polyfill.ts","import { Cookie } from './helpers/Cookie';\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Survey } from \"./Survey\";\r\n\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n( window as any ).globalSurveyRunning = false;\r\n( window as any ).ccsdkDebug = false;\r\n( window as any ).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif ( typeof ( window as any ).CCSDK !== 'undefined' ) {\r\n  var queue = ( window as any ).CCSDK.q;\r\n  ( window as any ).CCSDK = function () {\r\n    if ( arguments && arguments.length == 0 ) {\r\n      var time = new Date();\r\n    } else {\r\n      ( window as any ).ccsdkDebug ? console.log( arguments ) : '';\r\n      var args = ( Array as any ).from( arguments );\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( functionName ) : '';\r\n      return localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  };\r\n  if ( queue ) {\r\n    for ( var q of queue ) {\r\n      var args = ( Array as any ).from( q );\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent( 'Event' );\r\n  eventCCReady.initEvent( 'ccready', true, true );\r\n  document.dispatchEvent( eventCCReady );\r\n\r\n  // Disabling this as Sentry captures errors from host web site. \r\n  // let sentry = document.createElement( 'script' );\r\n  // sentry.src = \"https://browser.sentry-cdn.com/4.5.3/bundle.min.js\";\r\n  // sentry.crossOrigin = \"anonymous\";\r\n  // sentry.onload = () => {\r\n  //   Sentry.init( { dsn: 'https://49d72b03f26d4936a104ceb51cd1f669@sentry.io/1391030' } );\r\n  // }\r\n  // document.head.appendChild( sentry );\r\n\r\n}\r\n\r\nexport function init( surveyToken: any ) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent( surveyToken ).trim();\r\n  let config = ( typeof arguments[ 1 ] === 'object' ) ? arguments[ 1 ] : {};\r\n  //create survey instance\r\n  if ( typeof Cookie.get( surveyToken + '-finish' ) !== 'undefined' && Cookie.get( surveyToken + '-finish' ) ) {\r\n    return;\r\n  }\r\n  if ( typeof Cookie.get( surveyToken + '-coolDown' ) !== 'undefined' && Cookie.get( surveyToken + '-coolDown' ) ) {\r\n    return;\r\n  }\r\n\r\n  if ( typeof config.isActive !== 'undefined' && config.isActive ) {\r\n    SurveyManager.surveyInstances[ surveyToken ] = ( SurveyManager.surveyInstances[ surveyToken ] ) ? SurveyManager.surveyInstances[ surveyToken ] : new Survey( surveyToken, config );\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Init MicroSurvey', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: ( <any>window ).isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    return SurveyManager.surveyInstances[ surveyToken ];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy( surveyToken: string ) {\r\n  //remove from trigger manager, delete instance.\r\n  if ( !SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[ surveyToken ] ||\r\n    !SurveyManager.surveyInstances[ surveyToken ].dom ) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n  delete SurveyManager.surveyInstances[ surveyToken ];\r\n}\r\n//\r\nexport function trigger( surveyToken: string, type: string, target: string ) {\r\n  ( window as any ).ccsdkDebug ? console.log( SurveyManager.surveyInstances ) : '';\r\n\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Trigger Type', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].trigger( type, target );\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on( surveyToken: string, type: string, callback: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Event Listeners', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].on( type, callback );\r\n  }\r\n}\r\n\r\nexport function prefill( surveyToken: string, questionId: string, answerObject: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionId,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( questionId, answerObject );\r\n  }\r\n}\r\n\r\nexport function prefillByTag( surveyToken: string, questionTag: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by tag', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionTag,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefill( questionTag, answer );\r\n  }\r\n}\r\n\r\nexport function prefillByNote( surveyToken: string, questionNote: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by Note', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionNote,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefillByNote( questionNote, answer );\r\n  }\r\n}\r\n\r\nexport function show( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].show();\r\n  }\r\n}\r\n\r\nexport function hide( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n    SurveyManager.surveyInstances[ surveyToken ].hide();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\nimport { MatomoTracker } from './helpers/tracking';\r\nimport { templates } from \"./helpers/templates\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: number;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor( surveyToken: string, config: CCSDKConfig ) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if ( typeof this.config.textDirection === 'undefined' ) {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers( this );\r\n    TriggerManager.addSurvey( this.surveyToken, this.triggers );\r\n    this.survey = new SurveyHandler( this );\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor ) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger( document, this.surveyToken + '-ready', { 'survey': this } );\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger( \"click\", this.config.cssSelector );\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers( this.config );\r\n    // this.login(function() {\r\n    //on login\r\n    // });\r\n  }\r\n\r\n  getSurveyThrottlingLogic( cb ) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace( '{location}', this.config.location );\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function ( data ) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling( cb );\r\n    };\r\n\r\n    RequestHelper.getWithHeaders( getThrottleUrl, headers, successcb, null );\r\n  }\r\n\r\n  checkThrottling( cb ) {\r\n    if ( this.thorttlingLogic != null ) {\r\n      if ( this.thorttlingLogic.inputIds == null ) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push( this.thorttlingLogic[ this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] );\r\n      if ( this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null ) {\r\n        this.thorttlingLogic.logics[ 0 ].filter.location = [];\r\n        this.thorttlingLogic.logics[ 0 ].filter.location.push( this.config.location );\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function ( throttleResponse ) {\r\n\r\n      if ( typeof throttleResponse[ 0 ][ self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] && throttleResponse[ 0 ].value ) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders( postThrottleUrl, this.thorttlingLogic, headers, successcb, null );\r\n  }\r\n\r\n  addThrottlingEntries( isOpen: boolean ) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = ( throttleResponse ) => {\r\n      this.debug ? console.log( throttleResponse ) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders( addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null );\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector( '.cc-sdk' );\r\n    if ( !ccSDKElement ) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute( 'dir' );\r\n    let direction: string = ( this.config && this.config.textDirection ) ?\r\n      this.config.textDirection : ( ccSDKDir ? ccSDKDir : \"ltr\" );\r\n    ccSDKElement.setAttribute( 'dir', direction );\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch ( this.survey.surveyDisplay.position ) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent( 'Welcome Pop up Position', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: this.survey.surveyDisplay.position,\r\n        action: null\r\n      }\r\n    }, null, null );\r\n\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search( /bottom/gi ) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function ( surveyData ) {\r\n      self.debug ? console.log( surveyData ) : '';\r\n      // console.log(surveyData);\r\n\r\n      self.surveyData = surveyData;\r\n      if ( surveyData && surveyData.questions && surveyData.questions[ 0 ] ) {\r\n        self.tracking.username = surveyData.questions[ 0 ].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n\r\n      self.tracking.trackEvent( 'Login Success', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: 'Token',\r\n          action: self.surveyToken\r\n        }\r\n      }, console.log, console.error )\r\n      self.tracking.trackEvent( 'Survey Length', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: `${ surveyData.questions.length } Questions`,\r\n          action: `${ surveyData.preFill ? surveyData.preFill.length : 0 } Prefills`\r\n        }\r\n      }, null, null );\r\n      let event = new CustomEvent( Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse( JSON.stringify( surveyData ) ) } );\r\n      document.dispatchEvent( event );\r\n      if ( !self.config.skipWelcomePage ) {\r\n        self.dom.hideLoader();\r\n      }\r\n      if ( self.surveyData ) {\r\n        self.initSurveyQuestions();\r\n      } else {\r\n        this.tracking.trackEvent( 'Expired Survey', {\r\n          token: this.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n        self.survey.displayWelcomeQuestion( \"The Survey has been expired\" );\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions( successcb, errorcb );\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey( this );\r\n    self.dom.setTheme( self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0 );\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    if ( self.surveyToken && decodeURIComponent( self.surveyToken ).trim() !== '' && !self.config.skipWelcomePage ) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if ( self.config.skipWelcomePage ) {\r\n      let onImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n      document.dispatchEvent( onImpressionEvent );\r\n      self.dom.startSurvey();\r\n    }\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey( this.surveyData );\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent( Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyStartEvent );\r\n  }\r\n\r\n  public on( type: string, callback: any ) {\r\n    document.addEventListener( type + \"-\" + this.surveyToken, function ( e: any ) {\r\n      callback( e.detail );\r\n    } );\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent( 'Survey Destroyed', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: ( <any>new Date() - ( <any>window ).globalSurveyStartTime ) + 's',\r\n        action: null\r\n      }\r\n    }, null, null );\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill( questionId: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect( questionId, answer );\r\n  }\r\n\r\n  public fillPrefill( questionTag: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill( questionTag, answer );\r\n  }\r\n\r\n  public fillPrefillByNote( questionNote: string, answer: any ) {\r\n    this.survey.fillPrefillByNote( questionNote, answer );\r\n  }\r\n\r\n  public trigger( type: string, target: any ) {\r\n    let self: Survey = this;\r\n    switch ( type ) {\r\n      case 'click':\r\n        console.log( 'enable click trigger ##' )\r\n        this.triggers.enableClickTrigger( target, function () {\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey( self.surveyToken );\r\n\r\n        } );\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt( target );\r\n        this.triggers.enablePageCountTrigger( count );\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt( target );\r\n        this.triggers.enableSiteCountTrigger( count2 );\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger( target );\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger( target );\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger( target );\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger( parseInt( target ) );\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey( self.surveyToken );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\r\n// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from './helpers/dom/Select';\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\r\n\r\n\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor( ccsdk ) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      'position': '',\r\n      'surveyPosition': '',\r\n      'welcomePopupAnimation': '',\r\n      'surveyPopupAnimation': '',\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = ( e: any ) => {\r\n      //perform final post\r\n      this.finalPost( null, null );\r\n      if ( this.ccsdk && this.ccsdk.tracking ) {\r\n        this.ccsdk.tracking.trackEvent( 'Completed Survey', {\r\n          token: this.ccsdk.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : ( this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You' );\r\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n      thankyouHtml = thankyouHtml.replace( \"{{question}}\", thankyouText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{button}}\", startText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{branding}}\", this.surveyData.branding && this.surveyData.branding.toUpperCase() === 'NONE' ? 'no-branding' : 'full-branding' )\r\n      this.ccsdk.dom.replaceInQuestionsContainer( thankyouHtml );\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get( \"#cc-thankyou-container\" );\r\n      ( window as any ).ccsdkDebug ? console.log( thankyouContainer ) : '';\r\n      this.util.addClass( thankyouContainer[ 0 ], 'show-thankyou-slide' );\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      //set done cookie for 30 days.\r\n      Cookie.set( this.surveyToken + '-finish', 'true', 30, '/' );\r\n      setTimeout( () => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000 );\r\n    }\r\n\r\n    this.destroySurveyCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      self.destroy();\r\n    }\r\n\r\n    this.acceptAnswersCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n      switch ( data.type ) {\r\n        case 'scale':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'nps':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radio':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radioImage':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'smile':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'star':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'multiline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'singleline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'number':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'checkbox':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'select':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'slider':\r\n          response.text = data.data.text;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchQuestions( successcb, errorcb ) {\r\n    this.randomNumber = parseInt( ( String )( Math.random() * 1000 ) );\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace( \"{token}\", \"\" + this.surveyToken );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get( surveyUrl, successcb, errorcb );\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer( questionId ) {\r\n    delete this.answers[ questionId ];\r\n    delete this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  attachSurvey( surveyData: any ) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if ( this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0 ) {\r\n      this.surveyData.preFill.map( response => {\r\n        this.fillPrefillQuestionObject( response.questionId, response );\r\n      } )\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    surveyHtml = surveyHtml.replace( \"{{animation}}\", this.surveyDisplay.surveyPopupAnimation );\r\n    surveyHtml = surveyHtml.replace( /{{location}}/g, this.surveyDisplay.surveyPosition );\r\n    this.ccsdk.dom.appendInBody( surveyHtml );\r\n  }\r\n\r\n  displayQuestionSelector() {\r\n\r\n  }\r\n\r\n  displayWelcomeQuestion( warningWelcomeText?: string ) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyImpressionEvent );\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n    if ( warningWelcomeText ) {\r\n      document.getElementById( this.surveyToken + \"-welcome\" ).remove();\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", warningWelcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", \"Close\" );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"button-close\" );\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", welcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", startText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"survey-start\" );\r\n    }\r\n    welcomeHtml = welcomeHtml.replace( \"{{location}}\", this.surveyDisplay.position );\r\n    welcomeHtml = welcomeHtml.replace( \"{{animation}}\", this.surveyDisplay.welcomePopupAnimation );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody( welcomeHtml );\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod( this.ccsdk.config, this.surveyToken )\r\n    if ( ( typeof this.ccsdk.config.keepAlive != undefined ) && ( this.ccsdk.config.keepAlive > 0 ) ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval( () => { self.checkWelcomeQuestionDisplay( self.ccsdk.config.keepAlive ) }\r\n        , 1000 );\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n\r\n  }\r\n\r\n  setCoolDownPeriod( campaign, surveyToken ) {\r\n    if ( campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0 ) {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', campaign.coolDownPeriod / 86400, '/' );\r\n    } else {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', 1, '/' );\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay( keepAlive ) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if ( keepAlive ) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if ( keepAlive <= ( now.getTime() - this.welcomeQuestionDisplayTime.getTime() ) / 1000 ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = 'languageSelector';\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions( [ \"default\" ] );\r\n    if ( this.surveyData.translated ) {\r\n      options1 = this.util.generateLanguageSelectOptions( [ \"default\" ].concat( Object.keys( this.surveyData.translated ) ) );\r\n    }\r\n    cTemplate1 = cTemplate1.replace( /{{questionId}}/g, qId );\r\n    cTemplate1 = cTemplate1.replace( \"{{options}}\", options1 );\r\n    cTemplate1 = cTemplate1.replace( \"{{requiredLabel}}\", true ? \"*\" : \"\" );\r\n    this.ccsdk.dom.replaceInQuestionsContainer( cTemplate1 );\r\n    let $questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    let $body = document.getElementsByTagName( \"body\" )[ 0 ];\r\n\r\n    this.util.addClass( $questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.languageSelect = new Select( qId );\r\n    let submitBtn = document.querySelectorAll( '.submit-icon' );\r\n    this.util.removeClassAll( submitBtn, 'act-cc-button-next' );\r\n    this.util.addClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n    if ( this.languageSelect ) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init( qId );\r\n    let selectRes = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"display language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageSelectOption' ) : '';\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n    } );\r\n    this.domListeners.push( ref );\r\n    ref.internalHandler = this.util.listener( $body, ref.type, ref.id, ref.cb );\r\n\r\n\r\n    let languageSelect2 = this.util.initListener( \"click\", \".act-cc-button-lang-next\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageNext' ) : '';\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n      //set config rtl or ltr\r\n      let isRTL = /[\\u0600-\\u06FF]/.test( selectRes );\r\n      self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n      self.ccsdk.setHtmlTextDirection();\r\n      self.util.removeClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n      self.util.addClassAll( submitBtn, 'act-cc-button-next' );\r\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\r\n      // self.postPrefillPartialAnswer( false, null, null );\r\n    } );\r\n    this.domListeners.push( languageSelect2 );\r\n\r\n    languageSelect2.internalHandler = this.util.listener( $body, languageSelect2.type, languageSelect2.id, languageSelect2.cb );\r\n\r\n\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    ( window as any ).ccsdkDebug ? console.log( cTemplate1 ) : '';\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccdone', this.displayThankYouCb );\r\n  }\r\n\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort( this.questionCompare );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName( \"cc-questions-container\" );\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[ 0 ];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for ( let question of this.questionsToDisplay ) {\r\n      if ( this.checkConditionals( question ) ) {\r\n        let compiledTemplate = this.compileTemplate( question );\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if ( this.isPrefillQuestion( question ) ) {\r\n          this.prefillQuestions.push( question );\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId( questionId: string ) {\r\n    let answer = this.surveyAnswers[ questionId ];\r\n    if ( typeof answer === 'undefined' ) {\r\n      for ( let response of this.prefillResponses ) {\r\n        if ( response.questionId == questionId ) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener( 'q-answered', this.acceptAnswersCb );\r\n  }\r\n\r\n  fillPrefillQuestionObject( id: any, response: any ) {\r\n    let question: any = this.getQuestionById( id );\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n  }\r\n\r\n  fillPrefill( tag: any, value: object ) {\r\n    this.prefillWithTags[ tag.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByTag', this.prefillWithTags ) : '';\r\n  }\r\n\r\n  fillPrefillByNote( note: any, value: object ) {\r\n    this.prefillWithNote[ note.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByNote', this.prefillWithNote ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillDirect( questionId: string, value: object ) {\r\n    this.prefillDirect[ questionId ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillDirect', this.prefillDirect ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillQuestion( id: any, value: any, valueType: string ) {\r\n    let question: any = this.getQuestionById( id );\r\n    // console.log(this.questions);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType( question.displayType );\r\n\r\n    if ( valueType.toLowerCase() == \"number\" ) {\r\n      response.numberInput = value;\r\n    }\r\n    if ( valueType.toLowerCase() == \"text\" ) {\r\n      response.textInput = value;\r\n    }\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n\r\n  }\r\n\r\n  postPrefillPartialAnswer( fullSubmission = false, successcb, errorcb ) {\r\n    if ( !fullSubmission && this._prefillsPartiallyPosted ) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", \"false\" );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{tabletId}\", \"\" + this.randomNumber );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    ( window as any ).ccsdkDebug ? console.log( \"Posting Prefill Responses to Server\" ) : '';\r\n    ( window as any ).ccsdkDebug ? console.log( this.prefillResponses ) : '';\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run successCB if there is one.\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    if ( typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById( id: any, resp: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        response = resp;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById( id: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        return response;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getQuestionById( id: any ) {\r\n    for ( let question of this.questions ) {\r\n      if ( question.id == id ) {\r\n        return question;\r\n      }\r\n    }\r\n  }\r\n\r\n  postPartialAnswer( index: any, response: any, complete = false, successcb, errorcb ) {\r\n    this.postPrefillPartialAnswer( complete, null, null );\r\n    // let data = new FormData();\r\n    //in case of file.\r\n    // let input = document.querySelector('input[type=\"file\"]') ;\r\n    // data.append('file', input.files[0]);\r\n\r\n    let question: any = this.questionsToDisplay[ index ];\r\n    if ( typeof question === 'undefined' ) {\r\n      //now?\r\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n    }\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n    // if(this.isPartialAvailable == false) {\r\n    //   this.answers.push(data);\r\n    //   return;\r\n    // }\r\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    //if this is the last of displayed question\r\n    ( window as any ).ccsdkDebug ? console.log( \"partial response\", question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) : '';\r\n    // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n    //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    // } else {\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", `${ complete }` );\r\n    // }\r\n    // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[ question.id ] = data;\r\n\r\n    data = [ data ];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent( Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyAnswerEvent );\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run success callback and return\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if ( question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    } else {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    }\r\n\r\n  }\r\n\r\n  finalPost( successcb, errorcb ) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace( \"{tokenId}\", this.ccsdk.surveyToken );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if ( Object.keys( this.surveyAnswers ).length == 0 ) {\r\n      return;\r\n    }\r\n    for ( let answer in this.surveyAnswers ) {\r\n      let response = this.surveyAnswers[ answer ];\r\n      if ( response && ( response.textInput !== null || response.numberInput !== null ) ) {\r\n        answersAll.push( response );\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for ( let answer in this.prefillResponses ) {\r\n      answersAll.push( this.prefillResponses[ answer ] );\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor( ( timeAtPost - this.ccsdk.surveyStartTime.getTime() ) / 1000 )\r\n    };\r\n    if ( lastAnswer ) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      }\r\n      this.postPartialAnswer( this.questionsToDisplay.length - 1, _lastAnswer, true, null, null )\r\n    }\r\n\r\n    if ( finalData.responses && finalData.responses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( postSurveyFinalUrl, finalData, {}, successcb, errorcb );\r\n    } else {\r\n      successcb();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals( question: any ) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate( question: any ) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if ( question != 'undefined' ) {\r\n      switch ( question.displayType ) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[ 0 ].split( \"-\" );\r\n          let optMin: any = opt[ 0 ].split( \";\" );\r\n          let optMax: any = opt[ 1 ].split( \";\" );\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{min}}/g, optMin[ 0 ] );\r\n          if ( displayLegend[ 0 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, displayLegend[ 0 ] + '-' );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{max}}/g, optMax[ 0 ] );\r\n          if ( displayLegend[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, displayLegend[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          ( window as any ).ccsdkDebug ? console.log( question.questionTags ) : '';\r\n          if ( question.questionTags.includes( \"NPS\" ) ) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else if ( question.questionTags.includes( \"CSAT\" ) ) {\r\n            if ( question.questionTags.includes( \"csat_satisfaction_5\" ) ) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if ( question.questionTags.includes( \"csat_agreement_5\" ) ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else {\r\n            let tileColor = '';\r\n            let style = '';\r\n            if ( question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0 ) {\r\n              if ( question.attributes.scaleColor !== 'Gradient' ) {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\"\r\n              }\r\n            } else if ( question.presentationMode != null && question.presentationMode.indexOf( \"Color\" ) !== -1 ) {\r\n              tileColor = question.presentationMode.split( ':' )[ 1 ];\r\n            }\r\n            if ( tileColor.length > 0 ) {\r\n              let tileColorDark = this.util.shadeBlendConvert( -0.3, tileColor, undefined );\r\n              style = '\\\r\n                <style>\\\r\n                #id'+ question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : '+ tileColor + ';\\\r\n                }\\\r\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : '+ tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace( /{{style}}/g, style );\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n\r\n            if ( question.questionTags.includes( \"ces_agree_5\" ) || question.questionTags.includes( \"ces_agree_7\" ) ) {\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n            }\r\n            else if ( question.questionTags.includes( \"ces_effort_5\" ) || question.questionTags.includes( \"ces_effort_7\" ) ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n            }\r\n\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend( this, question );\r\n            if ( displayLegend ) {\r\n              if ( displayLegend.length > 0 ) {\r\n                startRangeLabel = displayLegend[ 0 ] ? displayLegend[ 0 ] : null;\r\n                endRangeLabel = displayLegend[ 1 ] ? displayLegend[ 1 ] : null;\r\n              }\r\n            }\r\n            if ( question.multiSelect.length > 0 ) {\r\n              startRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 0 ] );\r\n              if ( startRangeLabel == null ) {\r\n                startRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 0 ].split( \";\" )[ 1 ];\r\n              }\r\n              endRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 1 ] );\r\n              if ( endRangeLabel == null ) {\r\n                endRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 1 ].split( \";\" )[ 1 ];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = '';\r\n            let imageVisibility010 = 'hide';\r\n            let imageVisibility110 = 'hide';\r\n            let scaleVisibility = 'show-inline';\r\n            let scaleImageContainer = '';\r\n            if ( startRange == 0 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = 'show';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            } else if ( startRange == 1 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'show';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if ( endRange < 11 ) {\r\n            } else {\r\n              divider = ( endRange - startRange ) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = '';\r\n            let legendDimension;\r\n            if ( ( window as any ).isMobile ) {\r\n              if ( endRange < 11 ) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                let dimension = ( ( 100 / ( endRange - startRange + 1 ) ) - .5 ) * parentContainer / 100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = ( endRange - startRange + 1 ) * ( dimension + 1 );\r\n                optionStyle = `width:${ dimension }px;height:${ dimension }px;padding:${ ( dimension - 15 ) / 2 }px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'show-inline';\r\n              scaleImageContainer = '';\r\n              mobileImageUrl = \"\";\r\n            }\r\n\r\n            if ( question.questionTags.includes( \"CES\" ) ) {\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-' + endRange + '-scale-' + initial + ' ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n            else {\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n\r\n            if ( ( endRange - startRange + 1 ) <= 11 ) {\r\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n              var optionMaxWidth = ( ( ( endRange - startRange + 1 ) * 38 / 2 ) - 5 ) + 'px';\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{legendStyle}}\", `style=\"position:relative;width:${ mobileImageUrl ? '100%' : legendDimension + 'px' };min-height: 20px;\"` )\r\n            questionTemplate = questionTemplate.replace( /\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class' );\r\n            questionTemplate = questionTemplate.replace( \"{{optionsRange}}\", options );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace( /maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth );\r\n            questionTemplate = questionTemplate.replace( /{{optionLeftExtraClass}}/g, optionLeftExtraClass );\r\n            questionTemplate = questionTemplate.replace( /{{optionRightExtraClass}}/g, optionRightExtraClass );\r\n            questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n            questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n            questionTemplate = questionTemplate.replace( /{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"' );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility010}}\", imageVisibility010 );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility110}}\", imageVisibility110 );\r\n            questionTemplate = questionTemplate.replace( \"{{scaleImageContainer}}\", scaleImageContainer );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{characterLimit}}\", question.attributes && question.attributes.characterLimit ? question.attributes.characterLimit : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if ( ( ( question.displayStyle == 'radiobutton/checkbox' ) || ( question.displayStyle == 'icon' ) ) && ( multiSelect1.length < 6 ) ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect1 );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 1 ) && multiSelect1[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if (\r\n                typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log( options3 ) : '';\r\n            questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n            acTemplate = questionTemplate;\r\n\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          let invertedMultiSelect;\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if ( ( question.displayStyle == 'radiobutton/checkbox' ) && ( multiSelect.length < 6 ) ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect );\r\n            ( window as any ).ccsdkDebug ? console.log( 'select radio image', checkOptionContainsImage ) : '';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect.length > 1 ) && multiSelect[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              ( window as any ).ccsdkDebug ? console.log( { options2 } ) : '';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n              questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n            }\r\n          } else if ( ( question.displayStyle == 'icon' ) && ( multiSelect.length < 6 ) ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if ( question.presentationMode == 'Invert' ) {\r\n              invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n          } else {\r\n\r\n            ( window as any ).ccsdkDebug ? console.log( 'select type 3' ) : '';\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if ( typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if ( question.presentationMode == \"Invert\" ) {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n\r\n          } else {\r\n\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend2 ) {\r\n            if ( displayLegend2.length > 0 ) {\r\n              startRangeLabel = displayLegend2[ 0 ] ? displayLegend2[ 0 ] : null;\r\n              endRangeLabel = displayLegend2[ 1 ] ? displayLegend2[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend3 ) {\r\n            if ( displayLegend3.length > 0 ) {\r\n              startRangeLabel1 = displayLegend3[ 0 ] ? displayLegend3[ 0 ] : null;\r\n              endRangeLabel1 = displayLegend3[ 1 ] ? displayLegend3[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel1 );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel1 );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType( displayType: string ) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch ( displayType ) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for ( let question of this.questions ) {\r\n      if ( !question.isRetired ) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if ( this.isPrefillTags( question ) ) {\r\n          self.ccsdk.debug ? console.log( 'prefillTags', this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillNote( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillDirect( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( !( this.isPrefillQuestion( question ) ) ) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            ( question.conditionalFilter != null &&\r\n              ( question.conditionalFilter.filterquestions == null\r\n                || question.conditionalFilter.filterquestions.length == 0 ) )\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n            if ( supportedDisplayTypes.indexOf( question.displayType ) > -1 ) {\r\n              this.questionsToDisplay.push( question );\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if ( ConditionalFlowFilter.filterQuestion( this, question ) ) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push( question );\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags( question );\r\n          this.fillPrefillWithNote( question );\r\n          ConditionalFlowFilter.filterQuestion( this, question );\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for ( let question of this.questions ) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion( this, question );\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags( question: any ) {\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        switch ( tag.toLowerCase() ) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion( question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\" );\r\n            return true;\r\n          default:\r\n            if ( typeof this.prefillWithTags[ tag.toLowerCase() ] != 'undefined' ) {\r\n              let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n              this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined'\r\n      && question.note != null\r\n      && question.note.length > 0\r\n      && this.prefillWithNote[ question.note.toLowerCase() ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect( question: any ) {\r\n    if ( typeof question !== 'undefined'\r\n      && this.prefillDirect[ question.id ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillDirect[ question.id ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags( question: any ) {\r\n    ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', this.prefillWithTags ) : '';\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', tag ) : '';\r\n        if ( typeof this.prefillWithTags[ tag.toLowerCase() ] !== 'undefined' ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'prefil ', tag.toLowerCase(), this.prefillWithTags[ tag.toLowerCase() ], this.prefillWithTags ) : '';\r\n\r\n          let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n          this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined' && question.note != null && question.note.length > 0 ) {\r\n      if ( typeof this.prefillWithNote[ question.note.toLowerCase() ] !== 'undefined' ) {\r\n        let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n        this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion( question: any ) {\r\n    if ( question.apiFill == true ) {\r\n      return true;\r\n    }\r\n    if ( question.staffFill == true ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled( question: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == question.questionId ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccclose', this.destroySurveyCb );\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer( this.surveyToken );\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer( this.surveyToken );\r\n    if ( typeof surveyContainer != 'undefined' ) {\r\n      this.util.remove( surveyContainer );\r\n    }\r\n    if ( typeof welcomeContainer != 'undefined' ) {\r\n      this.util.remove( welcomeContainer );\r\n    }\r\n    document.removeEventListener( 'ccclose', this.destroySurveyCb );\r\n    document.removeEventListener( 'ccdone', this.displayThankYouCb );\r\n    document.removeEventListener( 'q-answered', this.acceptAnswersCb );\r\n    ( window as any ).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 16\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 18\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 19\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 20\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.indexOf( \":\" ) !== -1 ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( isAnd( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( checkLanguage( surveyHandler, fOption )\r\n              || ( surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().includes( 'default' )\r\n                && fOption.language === null )\r\n              || ( surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null ) ) {\r\n              let groupTitle;\r\n              if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n                groupTitle = conditionalText.split( ':' )[ 0 ];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from './Select';\r\nimport { Theme } from './Theme';\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\nimport { setInterval } from 'timers';\r\n\r\nclass DomSurvey {\r\n\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n\r\n  constructor( ccsdk: any ) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities()\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready( function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    } );\r\n  }\r\n\r\n  setTheme( brandColor, time ) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready( function () {\r\n      self.theme = new Theme( brandColor, time );\r\n    } );\r\n  }\r\n\r\n  setQIndex( index: number ) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    this.$popupContainer = document.querySelectorAll( \".cc-popup-container\" );\r\n    this.$popupContainer2 = document.querySelectorAll( \".cc-popup-container-2\" );\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    // this.select = new Select();\r\n\r\n  }\r\n\r\n\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener( \"click\", \".act-cc-survey-start\", function () {\r\n      if ( ( !self.util.hasClass( self.$startBtn, 'disabled' ) ) && ( self.ccsdk.surveyStatus != 'minimized' ) ) {\r\n        let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n        document.dispatchEvent( onSurveyClickEvent );\r\n        self.util.addClass( self.$startBtn, 'disabled' );\r\n        self.showLoader();\r\n        self.startSurvey();\r\n      } else {\r\n        self.initSurveyDom();\r\n      }\r\n    } );\r\n    this.domListeners.push( startSurvey );\r\n\r\n    startSurvey.internalHandler = this.util.listener( this.$body, startSurvey.type, startSurvey.id, startSurvey.cb );\r\n\r\n    let nextQue = this.util.initListener( \"click\", \".act-cc-button-next\", function () {\r\n      // alert(\"working\");\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( nextQue );\r\n\r\n    nextQue.internalHandler = this.util.listener( this.$body, nextQue.type, nextQue.id, nextQue.cb );\r\n\r\n    let prevQue = this.util.initListener( \"click\", \".act-cc-button-prev\", function () {\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.prevQuestion();\r\n    } );\r\n    this.domListeners.push( prevQue );\r\n\r\n    prevQue.internalHandler = this.util.listener( this.$body, prevQue.type, prevQue.id, prevQue.cb );\r\n\r\n    let closeSurvey = this.util.initListener( \"click\", \".act-cc-button-close\", function () {\r\n      let onSurveyCloseEvent = new CustomEvent( Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyCloseEvent );\r\n      self.ccsdk.survey.answers = {};\r\n      self.trackSelects = [];\r\n      self.destroyListeners();\r\n      self.util.trigger( document, 'ccclose', undefined );\r\n      self.bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      self.util.removeClass( self.bodyElement, \"blurr\" )\r\n      self.ccsdk.survey.destroy();\r\n\r\n    } );\r\n    this.domListeners.push( closeSurvey );\r\n\r\n\r\n    closeSurvey.internalHandler = this.util.listener( this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb );\r\n\r\n    let minSurvey = this.util.initListener( \"click\", \".act-cc-button-minimize\", function () {\r\n      self.minimizeSurvey();\r\n    } );\r\n    this.domListeners.push( minSurvey );\r\n\r\n\r\n    minSurvey.internalHandler = this.util.listener( self.$body, minSurvey.type, minSurvey.id, minSurvey.cb );\r\n  }\r\n\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.removeClass( this.$popupContainer2[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.addClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.ccsdk.surveyStatus = 'minimized';\r\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass( this.$startBtn, 'disabled' );\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for ( let listener of this.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    for ( let listener of this.ccsdk.survey.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    if ( this.ccsdk.survey.languageSelect ) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if ( this.select ) {\r\n      this.select.destroyListeners();\r\n    }\r\n\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll( this.$popupContainer2, 'show-slide' );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    if ( this.ccsdk.surveyStatus == 'minimized' ) {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      ( window as any ).ccsdkDebug ? console.log( this.ccsdk.surveyData ) : '';\r\n      if ( this.ccsdk.surveyData.translated === null || ( this.ccsdk.surveyData.translated && Object.keys( this.ccsdk.surveyData.translated ).length < 1 ) ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll( \"#progress-line\" )[ 0 ];\r\n    if ( this.ccsdk && this.ccsdk.tracking ) {\r\n      this.ccsdk.tracking.trackEvent( 'Questions Answered', {\r\n        token: this.ccsdk.surveyToken,\r\n        data: {\r\n          name: `${ this.qIndex }/${ this.ccsdk.survey.questionsToDisplay.length }`,\r\n          action: this.currentQuestionId\r\n        }\r\n      }, null, null );\r\n    }\r\n    el.style.width = ( this.qIndex / this.ccsdk.survey.questionsToDisplay.length ) * 100 + '%';\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics( this.$questionContainer, 0 );\r\n    this.util.removeClassAll( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n    this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n  }\r\n\r\n  nextQuestion() {\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response init', this.qResponse ) : '';\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[ 0 ].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__required\" )[ 0 ]\r\n    let validationSpan: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__validation\" )[ 0 ]\r\n    if ( span )\r\n      this.util.removeClass( span, \"show\" );\r\n    if ( validationSpan )\r\n      this.util.removeClass( validationSpan, \"show\" );\r\n\r\n\r\n    //check if question is required \r\n    isRequired = q.getAttribute( 'data-required' ).toLowerCase() == 'true' ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if ( isRequired && ( Object.keys( this.qResponse ).length === 0 ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else if ( isRequired && ( !this.qResponse.text ) && ( !this.qResponse.number ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else {\r\n      if ( span ) {\r\n        this.util.removeClass( span, \"show\" );\r\n        this.util.addClass( span, \"hide\" );\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[ this.qIndex ].validationRegex\r\n      if ( validationRegex ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'validationRegex', validationRegex ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( 'response', this.qResponse ) : '';\r\n        let pattern = validationRegex.match( new RegExp( '^/(.*?)/([gimy]*)$' ) );\r\n        let regex = new RegExp( validationRegex );\r\n        if ( this.qResponse.text ) {\r\n          if ( regex.test( this.qResponse.text ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        else if ( this.qResponse.number ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'test regex text', regex.test( this.qResponse.number ) ) : '';\r\n\r\n          if ( regex.test( this.qResponse.number ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      if ( this.qResponse !== 'undefined' ) {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && this.qResponse.type == this.ccsdk.survey.answers[ this.currentQuestionId ].type\r\n          && this.qResponse.text == this.ccsdk.survey.answers[ this.currentQuestionId ].text\r\n          && this.qResponse.number == this.ccsdk.survey.answers[ this.currentQuestionId ].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && !this.qResponse.text\r\n          && !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n          this.submitQuestion( this.qIndex, this.qResponse, this.qResponse.type, qId );\r\n          //save response\r\n          this.ccsdk.survey.answers[ this.currentQuestionId ] = JSON.parse( JSON.stringify( this.qResponse ) );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion( this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[ this.qIndex ] );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = 'initial';\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if ( this.qIndex == this.ccsdk.survey.questionsToDisplay.length ) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      let rightIcon: any = this.util.get( '.cc-icon-right' );\r\n      let nextIcon: any = this.util.get( '.act-cc-button-next' );\r\n      this.util.addClassAll( leftIcon, 'hide' );\r\n      this.util.addClassAll( rightIcon, 'hide' );\r\n      this.util.addClassAll( nextIcon, 'hide' );\r\n      this.util.trigger( document, 'ccdone', undefined );\r\n      this.util.removeClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      this.updateProgress();\r\n    } else {\r\n      if ( ( this.qIndex > this.ccsdk.survey.questionsToDisplay.length ) ) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics( nextQ, this.qIndex );\r\n      this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    } else {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClass( leftIcon[ 0 ], 'show-slide' );\r\n      this.util.removeClass( leftIcon[ 0 ], 'hide-slide' );\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.qIndex--;\r\n    if ( !this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0 ) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics( null, this.qIndex );\r\n    this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n    ( window as any ).ccsdkDebug ? console.log( \"prevQuestion qResponse\", this.qResponse ) : '';\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.updateProgress();\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n      this.util.removeClassAll( leftIcon, 'show-slide' );\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.addClass( $loader, 'show' );\r\n    this.util.removeClass( $loader, 'hide' );\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.removeClass( $loader, 'show' );\r\n    this.util.addClass( $loader, 'hide' );\r\n  }\r\n\r\n  appendInBody( html ) {\r\n    document.querySelectorAll( \"body\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer( html ) {\r\n    this.$questionContainer[ 0 ].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer( html ) {\r\n    document.querySelectorAll( \".cc-questions-container\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".act-cc-welcome-question-box\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll( \".act-cc-survey-start\" )[ 0 ];\r\n\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".cc-language-selector\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    let self = this;\r\n    if ( this.util.checkIfListenerExists( '.cc-language-select', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '.cc-language-select' );\r\n    }\r\n    let languageSelect = this.util.initListener( \"click\", \".cc-language-select\", function () {\r\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyClickEvent);\r\n      //select language show next question.\r\n      // self.startSurvey();\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n    } );\r\n\r\n    languageSelect.internalHandler = this.util.listener( this.$body, languageSelect.type, languageSelect.id, languageSelect.cb );\r\n  }\r\n\r\n  getSurveyContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-survey\" )[ 0 ];\r\n  }\r\n\r\n  getWelcomeContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-welcome\" )[ 0 ];\r\n  }\r\n\r\n  loadQuestionSpecifics( q: HTMLElement, index: number ) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[ 0 ].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate( this.ccsdk.survey.questionsToDisplay[ index ] );\r\n    // console.log( compiledTemplate );\r\n    this.$questionContainer[ 0 ].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-type' );\r\n    let qId: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-id' );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring( 2, qId.length );\r\n    // console.log( 'qtype', qType )\r\n    switch ( qType ) {\r\n      case 'scale':\r\n        let allOptions1: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n        let optionWidth1 = ( 100 / allOptions1.length ) - .6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale( index, qId );\r\n        break;\r\n      case 'nps':\r\n        this.setupListenersQuestionNPS( index, qId );\r\n        break;\r\n      case 'multiline':\r\n        this.setupListenersQuestionMultiline( index, qId );\r\n        break;\r\n      case 'select':\r\n        if ( typeof this.select !== 'undefined' ) {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect( index, qId );\r\n        break;\r\n      case 'radio':\r\n        this.setupListenersQuestionRadio( index, qId );\r\n        break;\r\n      case 'radioImage':\r\n        this.setupListenersQuestionRadioImage( index, qId );\r\n        break;\r\n      case 'checkbox':\r\n        this.setupListenersQuestionCheckbox( index, qId );\r\n        break;\r\n      case 'star':\r\n        this.setupListenersQuestionStar( index, qId );\r\n        break;\r\n      case 'smile':\r\n        this.setupListenersQuestionSmile( index, qId );\r\n        break;\r\n      case 'csat':\r\n        this.setupListenersQuestionCsat( index, qId );\r\n        break;\r\n      case 'slider':\r\n        this.setupListenersQuestionSlider( index, qId );\r\n        break;\r\n      case 'singleline':\r\n        this.setupListenersQuestionSingleline( index, qId );\r\n        break;\r\n      case 'number':\r\n        this.setupListenersQuestionNumber( index, qId );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let selectedRating1 = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 1 ];\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'scale';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'scale';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      selectedRating1.innerHTML = '' + rating;\r\n\r\n      //move to next question automagically\r\n      // alert('calling next questions inside scale');\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionNPS( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'nps question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'nps previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        let $mobileRating = document.querySelectorAll( \".act-cc-nps-selected-rating\" )[ 0 ];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = 'nps';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'nps';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // alert('calling next questions inside scale');\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"checkbox question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValues = this.ccsdk.survey.answers[ questionId ].text;\r\n      if ( previousValues ) {\r\n        previousValues = previousValues.split( ',' );\r\n        for ( let previousValue of previousValues ) {\r\n          let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n          ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n          if ( typeof previousSelection !== 'undefined' ) {\r\n            this.util.addClass( previousSelection, \"selected\" );\r\n            previousSelection.setAttribute( 'checked', 'checked' );\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n      // let rating : number = this.querySelectorAll('input')[0].value;\r\n      let rating: string = [].filter.call( document.querySelectorAll( '#' + qId + ' .cc-checkbox input' ), function ( c ) {\r\n        return c.checked;\r\n      } ).map( function ( c ) {\r\n        return c.value;\r\n      } ).join( ',' );\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'Checkbox selected', rating ) : '';\r\n\r\n      self.qResponse.type = 'checkbox';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n    let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyClickEvent );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadio( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      // return;\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radio';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radio';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio image question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio image question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio image previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radioImage';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radioImage';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionStar( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-star-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-star-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'star question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'star previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'star';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-star-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-star-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous sibling\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n\r\n\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'star';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSmile( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'smile question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'smile previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous siblings\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n\r\n  setupListenersQuestionCsat( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"csat question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'csat question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'csat previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      this.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n      let child: any = this.previousSibling;\r\n      while ( ( child = child.previousSibling ) != null ) {\r\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n        self.util.addClass( child, \"selected\" );\r\n      }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      console.log( 'dispatching event in csat', this )\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionMultiline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"multiine question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'multiine question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'multiline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = 'multiline';\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSingleline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"singleline question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'singleline question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'singleline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = 'singleline';\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersQuestionNumber( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"number question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'number question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'number input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'number';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = 'number';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSlider( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = '';\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" input\" )[ 0 ];\r\n\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" input\", this.domListeners ) ) {\r\n      // return;\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'slider question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" .act-slider-tip\" )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = 'slider';\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( \"change\", '#' + qId + \" input\", function () {\r\n      sliderRes = this.value;\r\n      self.qResponse.type = 'slider';\r\n      self.qResponse.number = sliderRes;\r\n      self.qResponse.text = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSelect( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que', this.domListeners ) : '';\r\n    questionId = qId.substring( 2, qId.length );\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'select que listner exists' ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n\r\n      // return;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que' ) : '';\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que initialize select' ) : '';\r\n\r\n    self.select = new Select( qId );\r\n    self.select.destroyListeners();\r\n    self.select.init( qId );\r\n\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      if ( this.ccsdk.survey.answers[ questionId ].text ) {\r\n        let question = this.ccsdk.survey.getQuestionById( questionId );\r\n        self.select.setValue( this.ccsdk.survey.answers[ questionId ].text, question, this.ccsdk.survey );\r\n        self.select.selectOptions( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.qResponse.type = 'select';\r\n        self.qResponse.text = this.ccsdk.survey.answers[ questionId ].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push( qId );\r\n    // }\r\n    let selectRes: string = '';\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      // selectRes = this.getAttribute('data-value');\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].getAttribute( 'data-selection-value' );\r\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n      self.qResponse.type = 'select';\r\n      self.qResponse.text = selectRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // self.nextQuestion();\r\n    } );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion( index: number, data: any, type: string, qId: string ) {\r\n    // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n    this.util.trigger( document, 'q-answered', {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.substring( 2, qId.length )\r\n    } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { DomSurvey }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif ( Cookie.get( Constants.CCTriggerSiteStartTime ) == null ) {\r\n  Cookie.set( Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined );\r\n}\r\n//always add on page Time\r\nCookie.set( Constants.CCTriggerPageStartTime, new Date(), undefined, undefined );\r\n\r\nlet sitePageViewCount = Cookie.get( Constants.CCTriggerSitePageViewCount );\r\nif ( sitePageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, 1, undefined, undefined );\r\n} else {\r\n  sitePageViewCount = ( parseInt( sitePageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined );\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get( Constants.CCTriggerIndividualPageViewCount );\r\nif ( individualPageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href );\r\n} else {\r\n  individualPageViewCount = ( parseInt( individualPageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href );\r\n}\r\n\r\n( window as any ).click = 0;\r\n\r\nwindow.onscroll = function ( e ) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = ( window.pageXOffset || doc.scrollLeft ) - ( doc.clientLeft || 0 );\r\n  let top = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\r\n  ( window as any ).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers( top );\r\n}\r\n\r\ndocument.onclick = function ( e ) {\r\n  ( window as any ).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey( surveyId: any, trigger: Triggers ) {\r\n    TriggerManager.triggerInstances[ surveyId ] = trigger;\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length >= 1 ) {\r\n      ( window as any ).ccsdkDebug ? console.log( TriggerManager.triggerInterval ) : '';\r\n      if ( TriggerManager.triggerInterval == null ) {\r\n        ( window as any ).ccsdkDebug ? console.log( \"TriggerHandler : Setting up Interval Trigger Handlers.\" ) : '';\r\n        TriggerManager.triggerInterval = setInterval( TriggerManager.processIntervalTriggers, 1000 );\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId: string ) {\r\n    delete TriggerManager.triggerInstances[ surveyId ];\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length == 0 ) {\r\n      clearInterval( TriggerManager.triggerInterval );\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set( Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href );\r\n    Cookie.set( Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined );\r\n    //set cookies and call every process Interval Triggers.\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      TriggerManager.triggerInstances[ trigger ].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[ trigger ].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers( scrollNow ) {\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[ trigger ].processScrollTriggers( scrollNow );\r\n    }\r\n  }\r\n\r\n  static disableTriggers( surveyId: string ) {\r\n    TriggerManager.triggerInstances[ surveyId ].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor( ccsdk ) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger( target: string, cb: any ) {\r\n    let item = document.querySelectorAll( target )[ 0 ];\r\n    if ( typeof item !== 'undefined' ) {\r\n      item.addEventListener( 'click', cb );\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger( minPageCount: number ) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger( minSiteCount: number ) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger( minPageTime: number ) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger( minSiteTime: number ) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger( urlPattern: string ) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger( minScrollPixels: number ) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers( config: CCSDKConfig ) {\r\n    ( window as any ).ccsdkDebug ? console.log( config.grepURL ) : '';\r\n    //\r\n    if ( ( typeof config.click !== 'undefined' ) && ( config.click != 0 ) ) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ( ( typeof config.onExitDetect !== 'undefined' ) ) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ( ( typeof config.waitSeconds !== 'undefined' ) && ( config.waitSeconds !== 0 ) ) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ( ( typeof config.scrollPercent !== 'undefined' ) && ( config.scrollPercent !== 0 ) ) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ( ( typeof config.grepInvertURL !== 'undefined' ) && ( config.grepInvertURL ) ) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ( ( typeof config.grepURL !== 'undefined' ) && ( config.grepURL ) ) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'returning' ) : '';\r\n      return;\r\n    }\r\n    if ( typeof this.conditionalTriggers !== 'undefined' ) {\r\n      if ( Object.keys( this.conditionalTriggers ).length == 0 ) {\r\n        return false;\r\n      }\r\n      for ( let conditionalTrigger in this.conditionalTriggers ) {\r\n        if ( this.conditionalTriggers[ conditionalTrigger ] != null ) {\r\n          switch ( conditionalTrigger ) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener( \"mouseout\", \"document\", function () {\r\n                ( window as any ).ccsdkDebug ? console.log( \"Mouse out\" ) : '';\r\n\r\n              } );\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener( document, onExitDetect.type, onExitDetect.id, onExitDetect.cb );\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ( ( window as any ).click >= this.conditionalTriggers.click );\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n              let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'waitSeconds enabled', isEnabled ) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( ( window as any ).ccsdkTopOffset, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'scrollPercent enabled', isEnabled ) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepURL enabled', isEnabled ) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepInvertURL enabled', isEnabled ) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if ( isEnabled ) {\r\n        if ( this.ccsdk && this.ccsdk.tracking ) {\r\n          this.ccsdk.tracking.trackEvent( 'Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null )\r\n        }\r\n        SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers( scrollNow: number ) {\r\n    this.TriggerPopUpByScrollPixels( scrollNow );\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt( Cookie.get( Constants.CCTriggerSitePageViewCount ) );\r\n    if ( pageCount == NaN ) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount( pageCount, this.minPageCount ) ) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n    let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.minPageTime ) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date( Cookie.get( Constants.CCTriggerSiteStartTime ) ).getTime();\r\n    let siteTime = new Date( Cookie.get( Constants.CCTriggerSiteElapsedTime ) ).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition( siteTime, siteStartTime, this.minSiteTime ) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels( scrollNow: number ) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll( scrollNow, this.minScrollPixels ) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split( \"=\" );\r\n    let utmVal = Cookie.getParameterByName( utmP[ 0 ], undefined );\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[ 1 ] ) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts","import { RequestHelper } from './Request';\r\n\r\nexport class MatomoTracker {\r\n\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent( event, payload, successCb, errorCb ) {\r\n    let url = new URL( 'https://matomo.getcloudcherry.com/piwik.php' );\r\n    // constants for project\r\n    const idsite = 4;\r\n    const rec = 1;\r\n\r\n    let searchParams = {\r\n      idsite,\r\n      rec,\r\n      action_name: event,\r\n      url: window.location.href,\r\n      action_url: window.location.href,\r\n      uid: this.username,\r\n      _cvar: { '1': [ 'Token', payload.token ] },\r\n      new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n      e_c: event,\r\n      e_a: payload.data.action,\r\n      e_n: payload.data.name,\r\n      rand: Math.ceil( Math.random() * 100 )\r\n    };\r\n    Object.keys( searchParams ).forEach( x => {\r\n      let param;\r\n      if ( typeof searchParams[ x ] === 'string' ) {\r\n        param = searchParams[ x ];\r\n      } else {\r\n        param = JSON.stringify( searchParams[ x ] );\r\n      }\r\n      url.searchParams.set( x, param );\r\n    } )\r\n    return RequestHelper.post( url.toString(), null, successCb, errorCb );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/tracking.ts"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap 44deabb8488b0a61e2e6","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","selectorMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","internalHandler","event","t","target","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","console","error","setupSurvey","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isAnd","filterQuestion","groupBy","toUpperCase","isOr","isNumberCheck","answerCheck","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selfOption","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","selectedValueList","translatedSelection","selectOption","removeOption","csv","allOptions","allOptions_1","domOptions","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","toInteger","Number","isNaN","isFinite","floor","abs","maxSafeInteger","pow","toLength","len","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","includes","searchElement","fromIndex","y","surveyToken","trim","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","tracking","trackEvent","token","isMobile","action","destroy","dom","callback","prefill","answerObject","prefillByTag","questionTag","fillPrefill","prefillByNote","questionNote","fillPrefillByNote","show","hide","localCCSDK","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","sentry","src","crossOrigin","Sentry","dsn","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","debug","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","questions","preFill","skipWelcomePage","hideLoader","initSurveyQuestions","displayWelcomeQuestion","fetchQuestions","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","setCoolDownPeriod","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","setTimeout","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","surveyStartTime","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","acceptAnswers","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","complete","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","legendDimension","parentContainer","dimension","initial_1","initial_2","optionLeftExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","invertedMultiSelect","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","transform","locals","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","$1","newUrl","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","allOptions1","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers","payload","successCb","errorCb","searchParams","idsite","rec","action_name","action_url","uid","_cvar","1","new_visit","e_c","e_a","e_n","rand","ceil","param"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var selectorMatches = function (el, selector) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n            return f.call(el, selector);\r\n        };\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (selectorMatches(t, sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr, translatedArr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var translatedOpt = (translatedArr[i] || arr[i]).split(';');\r\n                var arrOpt = arr[i].split(';');\r\n                res += '<option value=\"' + arrOpt[0] + '\">' + (translatedOpt[0]) + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && (opt.indexOf(';') !== -1) && (opt.indexOf('.') !== -1);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            // console.log( res );\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n            console.error('Microsurvey not properly set up. Contact Support.');\r\n            return;\r\n        }\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n        window.globalSurveyStartTime = new Date();\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers, successcb, errorcb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        if (this.status >= 200 && this.status < 300) {\r\n            if (xhr.response) {\r\n            }\r\n            var res = xhr.response && typeof xhr.response === 'string' && !xhr.response.match('GIF') ? JSON.parse(xhr.response) : '';\r\n            if (successcb)\r\n                successcb(res);\r\n        }\r\n        else {\r\n            if (errorcb) {\r\n                errorcb({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        if (errorcb) {\r\n            errorcb({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        }\r\n    };\r\n    if (headers) {\r\n        Object.keys(headers).forEach(function (key) {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers, successcb, errorcb) {\r\n        headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.get = function (url, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, null, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data, successcb, errorcb) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), {}, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.indexOf(\":\") !== -1) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if (question.text) {\r\n            var qText = question.text.split(':');\r\n            if (question.text.indexOf(\":\") !== -1) {\r\n                qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n            }\r\n            return qText;\r\n        }\r\n        else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined' &&\r\n                question.translated[surveyHandler.ccsdk.config.language].multiSelect) {\r\n                var translatedOptions_1 = question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n                return question.multiSelect.map(function (x, i) {\r\n                    if (translatedOptions_1[i]) {\r\n                        return translatedOptions_1[i];\r\n                    }\r\n                    else {\r\n                        return x;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    Config.GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(16);\r\nvar QuestionSurvey = __webpack_require__(21);\r\nvar QuestionStart = __webpack_require__(22);\r\nvar QuestionSingleline = __webpack_require__(23);\r\nvar QuestionNumber = __webpack_require__(24);\r\nvar QuestionMultiline = __webpack_require__(25);\r\nvar QuestionCheckbox = __webpack_require__(26);\r\nvar QuestionRadio = __webpack_require__(27);\r\nvar QuestionRadioImage = __webpack_require__(28);\r\nvar QuestionScale = __webpack_require__(29);\r\nvar QuestionCSATAgreement5 = __webpack_require__(30);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(31);\r\nvar QuestionNPS = __webpack_require__(32);\r\nvar QuestionSelect = __webpack_require__(33);\r\nvar QuestionMultiSelect = __webpack_require__(34);\r\nvar QuestionSmile = __webpack_require__(35);\r\nvar QuestionSmileInverted = __webpack_require__(36);\r\nvar QuestionStar = __webpack_require__(37);\r\nvar QuestionSlider = __webpack_require__(38);\r\nvar OptionRadioImage = __webpack_require__(39);\r\nvar OptionRadio = __webpack_require__(40);\r\nvar OptionCheckbox = __webpack_require__(41);\r\nvar OptionCheckboxImage = __webpack_require__(42);\r\nvar ThankYou = __webpack_require__(43);\r\nvar LanguageSelector = __webpack_require__(44);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isAnd(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isAnd = isAnd;\r\nfunction isOr(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isOr = isOr;\r\nfunction isNumberCheck(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isNumberCheck = isNumberCheck;\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nfunction doesSatisfy(surveyHandler, filterQuestion) {\r\n    var answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n    if (isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    }\r\n    else {\r\n        // any text match for text answers\r\n        if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n            if (answer.textInput && answer.textInput !== ' ') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        var iFoundAll = false;\r\n        var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n        var questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n        if (!answer) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n            var aAnswer = _a[_i];\r\n            if (question.displayType === 'MultiSelect') {\r\n                var selectedOptions = answer.textInput.split(',');\r\n                if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            else if (questionAnswerText === aAnswer) {\r\n                iFoundAll = true;\r\n            }\r\n        }\r\n        return iFoundAll;\r\n    }\r\n    return false;\r\n}\r\nexports.doesSatisfy = doesSatisfy;\r\nfunction questionCompare(a, b) {\r\n    return a.sequence - b.sequence;\r\n}\r\nexports.questionCompare = questionCompare;\r\nfunction checkLanguage(surveyHandler, fOption) {\r\n    if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n        return fOption.language === surveyHandler.ccsdk.config.language;\r\n    }\r\n    return false;\r\n}\r\nexports.checkLanguage = checkLanguage;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            var selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = selectionTrigger.textContent;\r\n            var selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectionTrigger.setAttribute('data-selection-value', value);\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                selectionTrigger.textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n                    selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                    selectedValueText = value;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n                selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.selectOptions(selectedValueText);\r\n                selectedValueText;\r\n                if (selectedOptionText.length < 1) {\r\n                    selectionTrigger.textContent = 'Select';\r\n                }\r\n                else {\r\n                    selectionTrigger.textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value, question, surveyHandler) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        var selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n        var selectedValueList = value.split(',');\r\n        var translatedSelection = selectedValueList.map(function (x) { return LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x); });\r\n        selectTrigger.textContent = translatedSelection.join(',');\r\n        selectTrigger.setAttribute('data-selection-value', value);\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.removeOption = function (el) {\r\n        this.util.removeClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                    else {\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    Select.prototype.addOrRemoveFromList = function (listAsString, item) {\r\n        var list = listAsString.split(',');\r\n        var itemIndex = list.indexOf(item);\r\n        if (itemIndex !== -1) {\r\n            list.splice(itemIndex, 1);\r\n        }\r\n        else {\r\n            list.push(item);\r\n        }\r\n        return list.join(',');\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                // console.log( aQuestion );\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var surveyQuestions = surveyHandler.getSurveyQuestions();\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (surveyQuestions.indexOf(aQuestion) === -1) {\r\n                            surveyQuestions.push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyQuestions.indexOf(aQuestion) !== -1) {\r\n                            aRemovedCount++;\r\n                            surveyQuestions.splice(surveyQuestions.indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(filter_utils_1.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(12);\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n    Array.from = (function () {\r\n        var toStr = Object.prototype.toString;\r\n        var isCallable = function (fn) {\r\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n        };\r\n        var toInteger = function (value) {\r\n            var number = Number(value);\r\n            if (isNaN(number)) {\r\n                return 0;\r\n            }\r\n            if (number === 0 || !isFinite(number)) {\r\n                return number;\r\n            }\r\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n        };\r\n        var maxSafeInteger = Math.pow(2, 53) - 1;\r\n        var toLength = function (value) {\r\n            var len = toInteger(value);\r\n            return Math.min(Math.max(len, 0), maxSafeInteger);\r\n        };\r\n        // The length property of the from method is 1.\r\n        return function from(arrayLike /*, mapFn, thisArg */) {\r\n            // 1. Let C be the this value.\r\n            var C = this;\r\n            // 2. Let items be ToObject(arrayLike).\r\n            var items = Object(arrayLike);\r\n            // 3. ReturnIfAbrupt(items).\r\n            if (arrayLike == null) {\r\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n            }\r\n            // 4. If mapfn is undefined, then let mapping be false.\r\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n            var T;\r\n            if (typeof mapFn !== 'undefined') {\r\n                // 5. else\r\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n                if (!isCallable(mapFn)) {\r\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n                }\r\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n                if (arguments.length > 2) {\r\n                    T = arguments[2];\r\n                }\r\n            }\r\n            // 10. Let lenValue be Get(items, \"length\").\r\n            // 11. Let len be ToLength(lenValue).\r\n            var len = toLength(items.length);\r\n            // 13. If IsConstructor(C) is true, then\r\n            // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n            // of C with an argument list containing the single item len.\r\n            // 14. a. Else, Let A be ArrayCreate(len).\r\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n            // 16. Let k be 0.\r\n            var k = 0;\r\n            // 17. Repeat, while k < len… (also steps a - h)\r\n            var kValue;\r\n            while (k < len) {\r\n                kValue = items[k];\r\n                if (mapFn) {\r\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n                }\r\n                else {\r\n                    A[k] = kValue;\r\n                }\r\n                k += 1;\r\n            }\r\n            // 18. Let putStatus be Put(A, \"length\", len, true).\r\n            A.length = len;\r\n            // 20. Return A.\r\n            return A;\r\n        };\r\n    }());\r\n}\r\n// custom event polyfill\r\n(function () {\r\n    if (typeof window.CustomEvent === \"function\")\r\n        return false;\r\n    function CustomEvent(event, params) {\r\n        params = params || {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            detail: undefined\r\n        };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n// includes polyfill\r\nif (!Array.prototype.includes) {\r\n    Object.defineProperty(Array.prototype, 'includes', {\r\n        value: function (searchElement, fromIndex) {\r\n            if (this == null) {\r\n                throw new TypeError('\"this\" is null or not defined');\r\n            }\r\n            // 1. Let O be ? ToObject(this value).\r\n            var o = Object(this);\r\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n            var len = o.length >>> 0;\r\n            // 3. If len is 0, return false.\r\n            if (len === 0) {\r\n                return false;\r\n            }\r\n            // 4. Let n be ? ToInteger(fromIndex).\r\n            //    (If fromIndex is undefined, this step produces the value 0.)\r\n            var n = fromIndex | 0;\r\n            // 5. If n ≥ 0, then\r\n            //  a. Let k be n.\r\n            // 6. Else n < 0,\r\n            //  a. Let k be len + n.\r\n            //  b. If k < 0, let k be 0.\r\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n            function sameValueZero(x, y) {\r\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n            }\r\n            // 7. Repeat, while k < len\r\n            while (k < len) {\r\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                if (sameValueZero(o[k], searchElement)) {\r\n                    return true;\r\n                }\r\n                // c. Increase k by 1. \r\n                k++;\r\n            }\r\n            // 8. Return false\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(14);\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n    var sentry = document.createElement('script');\r\n    sentry.src = \"https://browser.sentry-cdn.com/4.5.3/bundle.min.js\";\r\n    sentry.crossOrigin = \"anonymous\";\r\n    sentry.onload = function () {\r\n        Sentry.init({ dsn: 'https://49d72b03f26d4936a104ceb51cd1f669@sentry.io/1391030' });\r\n    };\r\n    document.head.appendChild(sentry);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    surveyToken = decodeURIComponent(surveyToken).trim();\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-coolDown') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-coolDown')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: window.isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    if (!SurveyManager_1.SurveyManager ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken] ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom) {\r\n        return;\r\n    }\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Trigger Type', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Event Listeners', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken, questionId, answerObject) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionId,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken, questionTag, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by tag', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionTag,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken, questionNote, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by Note', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionNote,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(15);\r\nvar DomSurvey_1 = __webpack_require__(46);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(49);\r\nvar Triggers_1 = __webpack_require__(50);\r\nvar Request_1 = __webpack_require__(4);\r\nvar Config_1 = __webpack_require__(6);\r\nvar tracking_1 = __webpack_require__(52);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.requester = new Request_1.RequestHelper();\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        this.tracking = new tracking_1.MatomoTracker();\r\n        this.tracking.token = surveyToken;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var self = this;\r\n        var successcb = function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        };\r\n        Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var successcb = function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var _this = this;\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var successcb = function (throttleResponse) {\r\n            _this.debug ? console.log(throttleResponse) : '';\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers, successcb, null);\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var ccSDKElement = document.querySelector('.cc-sdk');\r\n        if (!ccSDKElement) {\r\n            return;\r\n        }\r\n        var ccSDKDir = ccSDKElement.getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n        ccSDKElement.setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.tracking.trackEvent('Welcome Pop up Position', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: this.survey.surveyDisplay.position,\r\n                action: null\r\n            }\r\n        }, null, null);\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var self = this;\r\n        var successcb = function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n                self.tracking.username = surveyData.questions[0].user;\r\n            }\r\n            self.tracking.token = self.surveyToken;\r\n            self.tracking.trackEvent('Login Success', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: 'Token',\r\n                    action: self.surveyToken\r\n                }\r\n            }, console.log, console.error);\r\n            self.tracking.trackEvent('Survey Length', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: surveyData.questions.length + \" Questions\",\r\n                    action: (surveyData.preFill ? surveyData.preFill.length : 0) + \" Prefills\"\r\n                }\r\n            }, null, null);\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            if (!self.config.skipWelcomePage) {\r\n                self.dom.hideLoader();\r\n            }\r\n            if (self.surveyData) {\r\n                self.initSurveyQuestions();\r\n            }\r\n            else {\r\n                this.tracking.trackEvent('Expired Survey', {\r\n                    token: this.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n                self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n            }\r\n        };\r\n        var errorcb = null;\r\n        this.survey.fetchQuestions(successcb, errorcb);\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n            self.survey.displayWelcomeQuestion();\r\n        }\r\n        else if (self.config.skipWelcomePage) {\r\n            var onImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n            document.dispatchEvent(onImpressionEvent);\r\n            self.dom.startSurvey();\r\n            self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n        }\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n        this.tracking.trackEvent('Survey Destroyed', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: (new Date() - window.globalSurveyStartTime) + 's',\r\n                action: null\r\n            }\r\n        }, null, null);\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (questionId, answer) {\r\n        //save this in this.surveyHandler\r\n        // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n        this.survey.fillPrefillDirect(questionId, answer);\r\n    };\r\n    Survey.prototype.fillPrefill = function (questionTag, answer) {\r\n        //save this in this.surveyHandler\r\n        this.survey.fillPrefill(questionTag, answer);\r\n    };\r\n    Survey.prototype.fillPrefillByNote = function (questionNote, answer) {\r\n        this.survey.fillPrefillByNote(questionNote, answer);\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                console.log('enable click trigger ##');\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(6);\r\nvar Request_1 = __webpack_require__(4);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(45);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select_1 = __webpack_require__(9);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this._prefillsPartiallyPosted = false;\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost(null, null);\r\n            if (_this.ccsdk && _this.ccsdk.tracking) {\r\n                _this.ccsdk.tracking.trackEvent('Completed Survey', {\r\n                    token: _this.ccsdk.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n            }\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{branding}}\", _this.surveyData.branding && _this.surveyData.branding.toUpperCase() === 'NONE' ? 'no-branding' : 'full-branding');\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function (successcb, errorcb) {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        Request_1.RequestHelper.get(surveyUrl, successcb, errorcb);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupPrefill();\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.setupPrefill = function () {\r\n        var _this = this;\r\n        if (this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0) {\r\n            this.surveyData.preFill.map(function (response) {\r\n                _this.fillPrefillQuestionObject(response.questionId, response);\r\n            });\r\n        }\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function (warningWelcomeText) {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        if (warningWelcomeText) {\r\n            document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n        }\r\n        else {\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n        }\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.setCoolDownPeriod = function (campaign, surveyToken) {\r\n        if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n            Cookie_1.Cookie.set(surveyToken + '-coolDown', 'true', campaign.coolDownPeriod / 86400, '/');\r\n        }\r\n        else {\r\n            Cookie_1.Cookie.set(surveyToken + '-coolDown', 'true', 1, '/');\r\n        }\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n        if (this.surveyData.translated) {\r\n            options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        }\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            // self.postPrefillPartialAnswer( false, null, null );\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (tag, value) {\r\n        this.prefillWithTags[tag.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (note, value) {\r\n        this.prefillWithNote[note.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (questionId, value) {\r\n        this.prefillDirect[questionId] = value;\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        // console.log(this.questions);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function (fullSubmission, successcb, errorcb) {\r\n        if (fullSubmission === void 0) { fullSubmission = false; }\r\n        if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n            return;\r\n        }\r\n        this._prefillsPartiallyPosted = true;\r\n        if (!this.surveyData.partialResponseId) {\r\n            return;\r\n        }\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run successCB if there is one.\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                return response;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (question.id == id) {\r\n                return question;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete, successcb, errorcb) {\r\n        if (complete === void 0) { complete = false; }\r\n        this.postPrefillPartialAnswer(complete, null, null);\r\n        // let data = new FormData();\r\n        //in case of file.\r\n        // let input = document.querySelector('input[type=\"file\"]') ;\r\n        // data.append('file', input.files[0]);\r\n        var question = this.questionsToDisplay[index];\r\n        if (typeof question === 'undefined') {\r\n            //now?\r\n            // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n        }\r\n        var data = {\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        // if(this.isPartialAvailable == false) {\r\n        //   this.answers.push(data);\r\n        //   return;\r\n        // }\r\n        // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        //if this is the last of displayed question\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n        //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n        // } else {\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        // }\r\n        // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run success callback and return\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function (successcb, errorcb) {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        if (Object.keys(this.surveyAnswers).length == 0) {\r\n            return;\r\n        }\r\n        for (var answer in this.surveyAnswers) {\r\n            var response = this.surveyAnswers[answer];\r\n            if (response && (response.textInput !== null || response.numberInput !== null)) {\r\n                answersAll.push(response);\r\n                lastAnswer = response;\r\n            }\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        if (lastAnswer) {\r\n            var _lastAnswer = {\r\n                text: lastAnswer.textInput,\r\n                number: lastAnswer.numberInput\r\n            };\r\n            this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true, null, null);\r\n        }\r\n        if (finalData.responses && finalData.responses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(postSurveyFinalUrl, finalData, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            successcb();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var displayLegend = question.displayLegend;\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (displayLegend[0]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, displayLegend[0] + '-');\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (displayLegend[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, displayLegend[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0) {\r\n                            if (question.attributes.scaleColor !== 'Gradient') {\r\n                                tileColor = question.attributes.scaleColor;\r\n                            }\r\n                            else {\r\n                                tileColor = \"#02BAEE\";\r\n                            }\r\n                        }\r\n                        else if (question.presentationMode != null && question.presentationMode.indexOf(\"Color\") !== -1) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\r\n                <style>\\\r\n                #id' + question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : ' + tileColor + ';\\\r\n                }\\\r\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : ' + tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        if (question.questionTags.includes(\"ces_agree_5\") || question.questionTags.includes(\"ces_agree_7\")) {\r\n                            startRangeLabel_1 = \"Strongly Disagree\";\r\n                            endRangeLabel_1 = \"Strongly Agree\";\r\n                        }\r\n                        else if (question.questionTags.includes(\"ces_effort_5\") || question.questionTags.includes(\"ces_effort_7\")) {\r\n                            startRangeLabel_1 = \"High Effort\";\r\n                            endRangeLabel_1 = \"Low Effort\";\r\n                        }\r\n                        var displayLegend_1 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend_1) {\r\n                            if (displayLegend_1.length > 0) {\r\n                                startRangeLabel_1 = displayLegend_1[0] ? displayLegend_1[0] : null;\r\n                                endRangeLabel_1 = displayLegend_1[1] ? displayLegend_1[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        var legendDimension = void 0;\r\n                        if (window.isMobile) {\r\n                            if (endRange < 11) {\r\n                                var parentContainer = window.innerWidth - 40;\r\n                                var dimension = ((100 / (endRange - startRange + 1)) - .5) * parentContainer / 100;\r\n                                dimension = dimension > 48 ? 48 : dimension;\r\n                                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                                optionStyle = \"width:\" + dimension + \"px;height:\" + dimension + \"px;padding:\" + (dimension - 15) / 2 + \"px;\";\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        if (question.questionTags.includes(\"CES\")) {\r\n                            for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                                options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-' + endRange + '-scale-' + initial_1 + ' ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var initial_2 = startRange; initial_2 <= endRange; initial_2 += divider) {\r\n                                options += '<span data-rating=\"' + initial_2 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_2 + '</span>';\r\n                            }\r\n                        }\r\n                        if ((endRange - startRange + 1) <= 11) {\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                            var optionMaxWidth = (((endRange - startRange + 1) * 38 / 2) - 5) + 'px';\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{legendStyle}}\", \"style=\\\"position:relative;width:\" + (mobileImageUrl ? '100%' : legendDimension + 'px') + \";min-height: 20px;\\\"\");\r\n                        questionTemplate = questionTemplate.replace(/\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class');\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{characterLimit}}\", question.attributes && question.attributes.characterLimit ? question.attributes.characterLimit : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    var invertedMultiSelect = void 0;\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    else {\r\n                        invertedMultiSelect = question.multiSelect;\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        window.ccsdkDebug ? console.log('select radio image', checkOptionContainsImage) : '';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect.length > 0) && multiSelect[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect.length > 1) && multiSelect[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            window.ccsdkDebug ? console.log({ options2: options2 }) : '';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        var invertedMultiSelect_1;\r\n                        if (question.presentationMode == 'Invert') {\r\n                            invertedMultiSelect_1 = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n                        }\r\n                        else {\r\n                            invertedMultiSelect_1 = question.multiSelect;\r\n                        }\r\n                        options1 = self.util.generateRadioOptions(invertedMultiSelect_1, multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        window.ccsdkDebug ? console.log('select type 3') : '';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    // console.log( questionTemplate );\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Dropdown\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Date\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log('prefillTags', this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    if (question.conditionalFilter === null ||\r\n                        (question.conditionalFilter != null &&\r\n                            (question.conditionalFilter.filterquestions == null\r\n                                || question.conditionalFilter.filterquestions.length == 0))) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            // console.log(this.questionsToDisplay);\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined') {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug ? console.log('fillprefillwithtags', this.prefillWithTags) : '';\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug ? console.log('fillprefillwithtags', tag) : '';\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    window.ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags) : '';\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        // let bodyElement = <HTMLElement>document.\r\n        //   getElementsByTagName( \"body\" )[ 0 ];\r\n        // this.util.removeClass( bodyElement, \"blurr\" );\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(19)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(18)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul {\\n  padding-right: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  right: 0;\\n  width: 100%;\\n  left: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  right: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-right: 15px;\\n  text-align: right;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-left: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-left: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 50px 0 0px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-left: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-right: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: right;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: rtl;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-left: 75px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-left: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: left;\\n    bottom: 9px;\\n    left: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-left: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-left: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: auto;\\n    left: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-right: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    right: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: right;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: right;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-right: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-right: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-right: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: right;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    right: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    left: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  left: auto;\\n  right: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: auto;\\n  right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-right: 0;\\n  margin-left: 0;\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  left: 0%;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  left: -2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 15px !important;\\n  padding-right: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-left: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-left: 15px;\\n  padding-right: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-right: -4px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 0px 0 50px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 3% center;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-right: 20px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-right: 20px;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px;\\n    margin-left: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-left: 25px !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: left;\\n    width: 100%;\\n    margin-left: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-left: 15px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: right;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-right: 1px;\\n  margin-left: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  right: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .option-right-rating-text {\\n  right: auto;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px;\\n  text-align: left;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-left: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-left: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-left: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-right: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-left: 68px;\\n  width: 30px;\\n  padding-right: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-left: 0px;\\n  width: auto;\\n  padding-right: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-left: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-right: 25px;\\n    position: relative;\\n    text-align: right;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  right: 0px;\\n  line-height: 100px;\\n  left: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  right: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-left: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-right: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: right;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-left: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: left; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: right;\\n    width: 35%;\\n    left: 0; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: left;\\n    right: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-left: 45px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-left: 1px;\\n  margin-right: 0;\\n  float: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  right: calc(100% - 418px);\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  left: 0px;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  left: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  right: 0;\\n  width: 40%;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-left: 29px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-right: 19px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-left: 25px;\\n  text-align: left;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-right: 0;\\n  margin-left: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc(100% - ( 100% - 44px)) center;\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-right: 0px;\\n    margin-left: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 10px;\\n    margin-right: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    right: 17px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 7px;\\n    text-align: right;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 20px;\\n    right: auto !important;\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-left: 0px;\\n    padding-right: 5px;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-left: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc(100% - ( 100% - 44px)) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-left: 39px;\\n    text-align: left;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 322px);\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    right: 13px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    right: auto !important;\\n    left: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    left: auto !important;\\n    right: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 258px);\\n    left: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 22px 0 84px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: right;\\n  padding: 5px 5px 5px 20px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  left: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-left: 1px solid #222;\\n  transform: rotate(-45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  right: 0;\\n  left: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: right;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-right: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 84px 0 22px;\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  right: 2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 0px 4px 4px 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 4px 0 0px 4px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 25px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  right: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-left-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  right: 4px;\\n  transform: rotate(45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-right: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-right: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-left: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  right: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: right;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  right: 0px;\\n  left: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  right: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  left: 28px;\\n  right: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px;\\n    margin-right: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  left: 0; }\\n\\n.cc-sdk .left {\\n  right: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  right: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  right: 0;\\n  left: auto;\\n  margin-right: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    right: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0;\\n    left: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(-5px);\\n  -moz-transform: translateX(-5px);\\n  -ms-transform: translateX(-5px);\\n  -o-transform: translateX(-5px);\\n  transform: translateX(-5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  left: 0;\\n  right: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  right: 0;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\" : \".cc-sdk ul {\\n  padding-left: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  left: 0;\\n  width: 100%;\\n  right: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  left: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-left: 15px;\\n  text-align: left;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-right: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-right: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 0px 0 50px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-right: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-left: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: left;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: ltr;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-right: 75px;\\n  font-size: 16px /*rtl:14px*/;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-right: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: right;\\n    bottom: 9px;\\n    right: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-right: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-right: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: auto;\\n    right: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-left: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    left: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: left;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: left;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-left: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-left: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-left: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: left;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    left: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    right: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  right: auto;\\n  left: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: auto;\\n  left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-left: 0;\\n  margin-right: 0;\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  right: 0%;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  right: -2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 15px !important;\\n  padding-left: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-right: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-right: 15px;\\n  padding-left: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-left: -4px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 50px 0 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 97% center;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-left: 20px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-left: 20px;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px;\\n    margin-right: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-right: 25px !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: right;\\n    width: 100%;\\n    margin-right: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-right: 15px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important;\\n    margin-right: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: left;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-left: 1px;\\n  margin-right: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  left: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .option-right-rating-text {\\n  left: auto;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px;\\n  text-align: right;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-right: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-right: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-right: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-left: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-right: 68px;\\n  width: 30px;\\n  padding-left: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-right: 0px;\\n  width: auto;\\n  padding-left: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-right: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-left: 25px;\\n    position: relative;\\n    text-align: left;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  left: 0px;\\n  line-height: 100px;\\n  right: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-right: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-left: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: left;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-right: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: right; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: left;\\n    width: 35%;\\n    right: 0; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: right;\\n    left: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-right: 45px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-right: 1px;\\n  margin-left: 0;\\n  float: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  left: calc(100% - 418px);\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  right: 0px;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  right: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  left: 0;\\n  width: 40%;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-right: 29px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-left: 19px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-right: 25px;\\n  text-align: right;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-left: 0;\\n  margin-right: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc( 100% - 44px) center;\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-left: 0px;\\n    margin-right: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 10px;\\n    margin-left: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    left: 17px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 7px;\\n    text-align: left;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 20px;\\n    left: auto !important;\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-right: 0px;\\n    padding-left: 5px;\\n    margin-right: 0;\\n    margin-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-right: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc( 100% - 44px) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-right: 39px;\\n    text-align: right;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 322px);\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    left: 13px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    left: auto !important;\\n    right: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    right: auto !important;\\n    left: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 258px);\\n    right: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 84px 0 22px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: left;\\n  padding: 5px 20px 5px 5px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  right: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-right: 1px solid #222;\\n  transform: rotate(45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(-135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: left;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-left: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 22px 0 84px;\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  left: 2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 0px 0 4px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 0 4px 4px 0px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 25px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-right-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  left: 4px;\\n  transform: rotate(-45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-left: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-left: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-right: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  left: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: left;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  left: 0px;\\n  right: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  left: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  right: 28px;\\n  left: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px;\\n    margin-left: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  right: 0; }\\n\\n.cc-sdk .left {\\n  left: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  left: 0;\\n  right: auto;\\n  margin-left: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    left: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0;\\n    right: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(5px);\\n  -moz-transform: translateX(5px);\\n  -ms-transform: translateX(5px);\\n  -o-transform: translateX(5px);\\n  transform: translateX(5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(-90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  right: 0;\\n  left: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(20);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id=\\\"{{surveyToken}}-survey\\\">\\r\\n\\t<div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\">\\r\\n\\t\\t<div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-left-icon\\\">\\r\\n\\t\\t\\t<span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span>\\r\\n\\t\\t\\t<ul class=\\\"cc-sdk-loader\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"cc-sdk-chart\\\" data-percent=\\\"75\\\"></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-right-icon\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg\\\" class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-survey-container\\\">\\r\\n\\t\\t\\t<div class=\\\"cc-survey-content\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"cc-questions-container\\\">\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"submit-icon act-cc-button-next\\\"></div>\\r\\n\\t\\t\\t<div class=\\\"{{location}} progress-bar\\\" id=\\\"progressBar\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"progress-line\\\" id=\\\"progress-line\\\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id=\\\"{{surveyToken}}-welcome\\\">\\r\\n  <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div>\\r\\n  <div class=\\\"cc-loaderimg hide\\\">\\r\\n    <svg version=\\\"1.1\\\" id=\\\"L9\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\r\\n      viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=\\\"preserve\\\">\\r\\n      <path fill=\\\"red\\\" d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\">\\r\\n        <animateTransform attributeName=\\\"transform\\\" attributeType=\\\"XML\\\" type=\\\"rotate\\\" dur=\\\"1s\\\" from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=\\\"indefinite\\\"\\r\\n        />\\r\\n      </path>\\r\\n    </svg>\\r\\n  </div>\\r\\n  <!-- <svg class=\\\"cc-sdk-timer\\\">\\r\\n    <circle r=\\\"8\\\" cx=\\\"20\\\" cy=\\\"20\\\" stroke=\\\"black\\\" stroke-width=\\\"0\\\" fill=\\\"red\\\"></circle>\\r\\n  </svg> -->\\r\\n  <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\">\\r\\n  <div class=\\\"cc-message-box\\\">\\r\\n    <h2 class=\\\"cc-message-box__text\\\">{{question}}</h2>\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"cc-message-box__btn act-cc-{{action}} mobile-hide\\\"  id=\\\"\\\">{{button}}</a>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"singleline\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"cc-sdk-form-control\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"number\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"cc-sdk-form-control\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"multiline\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <textarea class=\\\"multiline-box cc-sdk-form-control\\\" maxlength=\\\"{{characterLimit}}\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Share your thoughts...\\\"></textarea>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"checkbox\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-big-list-container\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=\\\"radio\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"radioImage\\\"\\r\\n  data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=\\\"scale\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      {{optionsRange}}\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\">\\r\\n        <img src={{mobileImageUrl}} class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n        <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"0\\\" title=\\\"0\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"83,193,62,228,38,212,23,193,57,167\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"54,165,21,189,11,173,4,154,2,140,43,134\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"43,131,2,135,1,118,5,93,8,83,45,97\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"48,92,10,78,17,61,28,44,39,32,66,66\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"70,61,42,30,55,20,70,14,91,5,101,45\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"105,44,92,5,113,2,134,3,147,5,139,46\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"141,46,150,6,169,11,184,19,200,30,172,63\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"175,63,202,34,218,48,227,66,232,78,194,93\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"196,97,233,81,239,103,240,118,240,135,199,130\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"199,135,240,140,236,159,229,175,221,189,187,167\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"183,169,217,191,204,212,178,229,158,192\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\">\\r\\n        <img src={{mobileImageUrl}} class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map2\\\" />\\r\\n        <map name=\\\"Map2\\\" id=\\\"Map2\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"67,180,40,210,26,195,15,176,11,169,47,152\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"48,149,9,163,2,140,1,124,3,110,45,115\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"44,110,4,105,8,79,17,67,22,57,58,79\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"58,76,24,54,33,39,48,29,65,18,85,54\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"87,51,68,15,85,7,106,3,120,3,122,45\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"123,42,123,0,141,2,163,8,176,14,157,52\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"159,53,180,16,201,30,212,44,220,54,186,77\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"188,80,222,55,229,69,236,83,241,108,199,111\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"200,116,239,112,241,128,240,146,234,165,196,150\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,153,233,168,225,187,212,202,202,212,175,181\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"legend-container\\\" {{legendStyle}}>\\r\\n        <span class=\\\"option-left-rating-text {{optionLeftExtraClass}} {{radialLegend}}-left\\\" style=\\\"max-width:maxWidth;\\\">{{leftLabel}}</span>\\r\\n        <span class=\\\"option-right-rating-text {{optionRightExtraClass}} {{radialLegend}}-right\\\" style=\\\"max-width:maxWidth;\\\">{{rightLabel}}</span>\\r\\n      </div>\\r\\n      <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n{{style}}\";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-0\\\">\\r\\n            <label for=\\\"service-0\\\"></label>\\r\\n          </div>\\r\\n          <span>Completely Disagree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-1\\\">\\r\\n            <label for=\\\"service-1\\\"></label>\\r\\n          </div>\\r\\n          <span>Somewhat Disagree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-2\\\">\\r\\n            <label for=\\\"service-2\\\"></label>\\r\\n          </div>\\r\\n          <span>Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-3\\\">\\r\\n            <label for=\\\"service-3\\\"></label>\\r\\n          </div>\\r\\n          <span>Somewhat Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-4\\\">\\r\\n            <label for=\\\"service-4\\\"></label>\\r\\n          </div>\\r\\n          <span>Completely Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-0\\\">\\r\\n            <label for=\\\"service-0\\\"></label>\\r\\n          </div>\\r\\n          <span>Very Unsatisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-1\\\">\\r\\n            <label for=\\\"service-1\\\"></label>\\r\\n          </div>\\r\\n          <span>Unsatisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-2\\\">\\r\\n            <label for=\\\"service-2\\\"></label>\\r\\n          </div>\\r\\n          <span>Neutral</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-3\\\">\\r\\n            <label for=\\\"service-3\\\"></label>\\r\\n          </div>\\r\\n          <span>Satisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-4\\\">\\r\\n            <label for=\\\"service-4\\\"></label>\\r\\n          </div>\\r\\n          <span>Very Satisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"nps\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div class=\\\"cc-options-container\\\">\\r\\n        <span data-rating=\\\"0\\\" class=\\\"option-number-item mobile-hide option-zero\\\">0</span>\\r\\n        <span data-rating=\\\"1\\\" class=\\\"option-number-item mobile-hide option-one\\\">1</span>\\r\\n        <span data-rating=\\\"2\\\" class=\\\"option-number-item mobile-hide option-two\\\">2</span>\\r\\n        <span data-rating=\\\"3\\\" class=\\\"option-number-item mobile-hide option-three\\\">3</span>\\r\\n        <span data-rating=\\\"4\\\" class=\\\"option-number-item mobile-hide option-four\\\">4</span>\\r\\n        <span data-rating=\\\"5\\\" class=\\\"option-number-item mobile-hide option-five\\\">5</span>\\r\\n        <span data-rating=\\\"6\\\" class=\\\"option-number-item mobile-hide option-six\\\">6</span>\\r\\n        <span data-rating=\\\"7\\\" class=\\\"option-number-item mobile-hide option-seven\\\">7</span>\\r\\n        <span data-rating=\\\"8\\\" class=\\\"option-number-item mobile-hide option-eight\\\">8</span>\\r\\n        <span data-rating=\\\"9\\\" class=\\\"option-number-item mobile-hide option-nine\\\">9</span>\\r\\n        <span data-rating=\\\"10\\\" class=\\\"option-number-item mobile-hide option-ten\\\">10</span>\\r\\n        <div class=\\\"circle-image desktop-hide\\\">\\r\\n          <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/circle.svg\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n          <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"86,199,61,177,25,201,38,219,52,230,66,238\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"59,173,22,198,12,180,5,160,4,146,44,138\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"44,134,49,101,8,84,3,98,0,116,2,141\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"49,97,71,68,42,33,25,54,14,71,10,81\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"74,65,106,47,94,5,70,14,46,31\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"144,47,154,4,135,1,114,1,98,4,108,48\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"149,48,157,5,183,15,209,30,180,65\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"183,67,211,34,231,56,243,79,204,97\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"203,100,245,85,251,106,252,124,251,141,207,135\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"208,140,251,146,245,169,231,197,194,172\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,179,229,201,218,218,202,230,185,238,166,200\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n          </map>\\r\\n          <!-- <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"49,192,91,229,111,191,83,169\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"29,139,47,189,83,166,70,135\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"35,83,29,136,71,131,75,96\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"36,79,67,35,95,66,75,94\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"69,32,117,7,127,49,97,64\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"120,7,175,7,165,48,131,48\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"178,7,168,49,197,64,225,32\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"200,67,220,95,260,80,229,35\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"221,98,224,131,266,136,259,83\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"224,135,266,139,248,191,212,167\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"184,191,203,230,246,194,211,169\\\" />\\r\\n            </map> -->\\r\\n          <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n        </div>\\r\\n        <span class=\\\"ccsdk-clearfix\\\"></span>\\r\\n        <span class=\\\"option-left-rating-text radial-legend-left\\\">Not at all likely</span>\\r\\n        <span class=\\\"option-right-rating-text radial-legend-right\\\">Very likely</span>\\r\\n        <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" data-selection-value=\\\"{{model}}\\\" placeholder=\\\"Select\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" placeholder=\\\"Select\\\" data-type=\\\"multiple\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-smile-box cc-one\\\" data-rating=\\\"1\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-two\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-five\\\" data-rating=\\\"5\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-smile-box cc-five\\\" data-rating=\\\"5\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-two\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-one\\\" data-rating=\\\"1\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-right-rating-text\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-left-rating-text\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"star\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"1\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"5\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"slider\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n        <p>\\r\\n            <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n        <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content rating-color cc-sdk-range-slider\\\" id=\\\"{{questionId}}\\\">\\r\\n        <div class=\\\"cc-question-container__slider\\\">\\r\\n            <input type=\\\"range\\\" value=\\\"{{min}}\\\" min=\\\"{{min}}\\\" max=\\\"{{max}}\\\" class=\\\"cc-sdk-range cc-blue\\\">\\r\\n            <div class=\\\"legend-container\\\" {{legendStyle}}>\\r\\n                <span class=\\\"option-left-rating-text\\\">{{minLabel}}{{min}}</span>\\r\\n                <span class=\\\"option-right-rating-text\\\">{{maxLabel}}{{max}}</span>\\r\\n                <span class=\\\"slider-tip act-slider-tip\\\"></span>\\r\\n            </div>\\r\\n            <!-- <span class=\\\"slider-tip act-slider-tip\\\">{{min}}</span> -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-img-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label for=\\\"{{qId}}-img-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"{{qId}}-img-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">\\r\\n      <img src=\\\"{{image}}\\\" /> {{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label for=\\\"{{qId}}-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"{{qId}}-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox\\\">\\r\\n    <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"check-{{labelFor}}\\\">{{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox\\\">\\r\\n    <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n      <img src=\\\"{{image}}\\\" /> {{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=\\\"cc-thankyou-container\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>{{question}}</p>\\r\\n    <p class=\\\"cc-thankyou-powered {{branding}}\\\"><span class=\\\"cc-thankyou-logo\\\"></span>Delight powered by Cloudcherry</p>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\"\\r\\n  data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\"></span>Select language</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">* Mandatory</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" placeholder=\\\"Select\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionalText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionalText_1 = question.text.split(':');\r\n            if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n                conditionalText_1 = conditionalText_1[0] + ': <br><span class=\"text-normal\">' + conditionalText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionalText_1 = conditionalText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (filter_utils_1.checkLanguage(surveyHandler, fOption)\r\n                            || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                                && surveyHandler.ccsdk.config.language.toLowerCase().includes('default')\r\n                                && fOption.language === null)\r\n                            || (surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null)) {\r\n                            var groupTitle = void 0;\r\n                            if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                                groupTitle = conditionalText.split(':')[0];\r\n                                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n                            }\r\n                            else {\r\n                                conditionalText = fOption.text;\r\n                            }\r\n                        }\r\n                        conditionalText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionalText;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(9);\r\nvar Theme_1 = __webpack_require__(47);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar Slider_1 = __webpack_require__(48);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (this.ccsdk.surveyData.translated === null || (this.ccsdk.surveyData.translated && Object.keys(this.ccsdk.surveyData.translated).length < 1)) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        if (this.ccsdk && this.ccsdk.tracking) {\r\n            this.ccsdk.tracking.trackEvent('Questions Answered', {\r\n                token: this.ccsdk.surveyToken,\r\n                data: {\r\n                    name: this.qIndex + \"/\" + this.ccsdk.survey.questionsToDisplay.length,\r\n                    action: this.currentQuestionId\r\n                }\r\n            }, null, null);\r\n        }\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        // console.debug()\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n            this.removePrevListener('.cc-language-select');\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        // console.log( compiledTemplate );\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        // console.log( 'qtype', qType )\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            window.ccsdkDebug ? console.log('Checkbox selected', rating) : '';\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-star-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            console.log('dispatching event in csat', this);\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        // console.log( 'singleline qResponse', self.qResponse );\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                var question = this.ccsdk.survey.getQuestionById(questionId);\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text, question, this.ccsdk.survey);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].getAttribute('data-selection-value');\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = \"\\n\\t\\t.cc-sdk #progressBar{\\n\\t\\t\\tbackground : \" + this.brandColorDark + \";\\n\\t\\t}\\n\\t\\t.cc-sdk #progress-line{ \\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n\\t\\t\\tbackground:\" + brandColor + \";\\n\\t\\t}\\n\\t\\t.ccsdk-overlay.glass{\\n\\t\\t\\tbackground-color:\" + this.util.hexToRGB(brandColor, .5) + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n\\t\\t\\tborder-color: #fff;\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-sdk-form-control:focus {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-message-box__btn{\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t\\tcolor:#fff;\\n\\t\\t}\\n\\t\\t\\t.cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t[dir=\\\"rtl\\\"].cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-question-container__required-label{\\n\\t\\t\\tcolor: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-webkit-slider-runnable-track{\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\t   background: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: -webkit-linear-gradient(-45deg, \" + brandColor + \"' 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t   }\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-moz-range-track {\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\tbackground: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: -webkit-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t}\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-webkit-slider-thumb{\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-moz-range-thumb {\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk svg.timer circle {\\n\\t\\t\\tanimation: countdown \" + time + \"s linear 1 forwards;\\n\\t\\t\\tstroke: \" + brandColor + \";\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-checkbox label:hover:before{\\n\\t\\t\\t\\tborder: solid 1px \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t @media (max-width: 768px){\\n\\t \\t\\t\\t.ccsdk-overlay.glass{\\n\\t \\t\\t\\tbackground-color:rgba(255,255,255,.85);\\n\\t \\t\\t\\tbackground-image:none;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container{\\n\\t\\t\\t\\t\\tbackground-color : transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\\n\\t\\t\\t\\t\\tbackground-color : \" + this.util.hexToRGB(brandColor, .9) + \";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\n\\t\\t\\t\\t\\tcolor:#fff;\\n\\t\\t\\t\\t}\\n\\t\\t\";\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('cc-sdk-range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(51);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                if (this.ccsdk && this.ccsdk.tracking) {\r\n                    this.ccsdk.tracking.trackEvent('Popped Up', {\r\n                        token: this.ccsdk.tracking.token,\r\n                        data: {\r\n                            name: null,\r\n                            action: null\r\n                        }\r\n                    }, null, null);\r\n                }\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request_1 = __webpack_require__(4);\r\nvar MatomoTracker = /** @class */ (function () {\r\n    function MatomoTracker() {\r\n    }\r\n    MatomoTracker.prototype.trackEvent = function (event, payload, successCb, errorCb) {\r\n        var url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n        // constants for project\r\n        var idsite = 4;\r\n        var rec = 1;\r\n        var searchParams = {\r\n            idsite: idsite,\r\n            rec: rec,\r\n            action_name: event,\r\n            url: window.location.href,\r\n            action_url: window.location.href,\r\n            uid: this.username,\r\n            _cvar: { '1': ['Token', payload.token] },\r\n            new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n            e_c: event,\r\n            e_a: payload.data.action,\r\n            e_n: payload.data.name,\r\n            rand: Math.ceil(Math.random() * 100)\r\n        };\r\n        Object.keys(searchParams).forEach(function (x) {\r\n            var param;\r\n            if (typeof searchParams[x] === 'string') {\r\n                param = searchParams[x];\r\n            }\r\n            else {\r\n                param = JSON.stringify(searchParams[x]);\r\n            }\r\n            url.searchParams.set(x, param);\r\n        });\r\n        return Request_1.RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n    };\r\n    return MatomoTracker;\r\n}());\r\nexports.MatomoTracker = MatomoTracker;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 44deabb8488b0a61e2e6","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || ( <any>p ).msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: string[], translatedArr: string[] ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let translatedOpt = ( translatedArr[ i ] || arr[ i ] ).split( ';' );\r\n        let arrOpt = arr[ i ].split( ';' );\r\n        res += '<option value=\"' + arrOpt[ 0 ] + '\">' + ( translatedOpt[ 0 ] ) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && ( opt.indexOf( ';' ) !== -1 ) && ( opt.indexOf( '.' ) !== -1 );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        let translatedOpt = translatedArr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: string, translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if ( !SurveyManager.surveyInstances || !SurveyManager.surveyInstances[ surveyId ] ) {\r\n      console.error( 'Microsurvey not properly set up. Contact Support.' );\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n    ( window as any ).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\n\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: \"\",\r\n  question_start: \"\",\r\n  question_text: \"\",\r\n  question_number: \"\",\r\n  question_scale: \"\",\r\n  question_csat_agreement_5: \"\",\r\n  question_csat_satisfaction_5: \"\",\r\n  question_nps: \"\",\r\n  question_multi_line_text: \"\",\r\n  question_multi_select: \"\",\r\n  question_radio: \"\",\r\n  question_radio_image: \"\",\r\n  question_checkbox: \"\",\r\n  question_select: \"\",\r\n  question_smile_5: \"\",\r\n  question_smile_5_inverted: \"\",\r\n  question_star_5: \"\",\r\n  question_slider: \"\",\r\n  option_radio_image: \"\",\r\n  option_radio: \"\",\r\n  option_checkbox: \"\",\r\n  option_checkbox_image: \"\",\r\n  thankyou: \"\",\r\n  language_selector: \"\"\r\n\r\n};\r\n\r\n\r\ntemplates.question_survey = QuestionSurvey;\r\n\r\ntemplates.question_start = QuestionStart;\r\n\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\n\r\n\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\n\r\ntemplates.question_slider = QuestionSlider;\r\n\r\n\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\n\r\n\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\n\r\n\r\ntemplates.question_select = QuestionSelect;\r\n\r\n\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\n\r\ntemplates.question_star_5 = QuestionStar;\r\n\r\ntemplates.question_checkbox = QuestionCheckbox;\r\n\r\ntemplates.question_radio = QuestionRadio;\r\n\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\n\r\ntemplates.thankyou = ThankYou;\r\n\r\ntemplates.language_selector = LanguageSelector;\r\n\r\n\r\nexport { templates };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","export function isAnd( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.answerCheck[ 0 ] === \"lt\" || filterQuestion.answerCheck[ 0 ] === \"gt\" || filterQuestion.answerCheck[ 0 ] === \"eq\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy( surveyHandler: any, filterQuestion: any ): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId( filterQuestion.questionId );\r\n  if ( isNumberCheck( filterQuestion ) ) {\r\n    if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"lt\" ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput < filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"gt\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput > filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"eq\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput == filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if ( filterQuestion.answerCheck[ 0 ] && filterQuestion.answerCheck[ 0 ].toLowerCase() === 'any text' ) {\r\n      if ( answer.textInput && answer.textInput !== ' ' ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById( filterQuestion.questionId );\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if ( !answer ) {\r\n      return false;\r\n    }\r\n    for ( let aAnswer of filterQuestion.answerCheck ) {\r\n      if ( question.displayType === 'MultiSelect' ) {\r\n        let selectedOptions = answer.textInput.split( ',' );\r\n        if ( selectedOptions.indexOf( aAnswer ) !== -1 ) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if ( questionAnswerText === aAnswer ) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare( a: any, b: any ) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language \r\n  }\r\n  return false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/filter-utils.ts","import { DomUtilities } from \"./DomUtilities\";\r\nimport {LanguageTextFilter} from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor( qId: string ) {\r\n    this.qId = qId;\r\n  }\r\n  init( qId: string ) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    this.$html = document.querySelectorAll( \"html\" )[ 0 ];\r\n    var select = document.querySelectorAll( \"#\" + qId + \" .cc-select\" );\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[ 0 ].getAttribute( 'data-type' );\r\n    Array.prototype.forEach.call( select, function ( el, i ) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll( \"#\" + qId + \" .cc-select-options\" );\r\n      var classes = self.getAttribute( \"class\" ),\r\n        id = self.getAttribute( \"id\" ),\r\n        name = self.getAttribute( \"name\" );\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute( \"placeholder\" ) + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll( \"option\" );\r\n      Array.prototype.forEach.call( options, function ( el, i ) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute( \"class\" ) + '\" data-value=\"' + el.getAttribute( \"value\" ) + '\">' + el.innerHTML + '</span>';\r\n      } );\r\n      template += '</div></div></div>';\r\n      parent.util.addClass( self, 'hide' );\r\n      self.insertAdjacentHTML( 'afterend', template );\r\n    } );\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-option\", function ( e ) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-option', this ) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute( 'data-value' );\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( select ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectOptions ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectWrapper ) : '';\r\n      let selectionTrigger = select.querySelectorAll( '.cc-select-trigger' )[ 0 ];\r\n\r\n      self.util.addClass( this, \"selection\" );\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute( 'data-selection-value' ) || '';\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n      if ( self.type !== 'multiple' ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        ( window as any ).ccsdkDebug ? console.log( 'selected option', selectedOptionText ) : '';\r\n        self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n        selectionTrigger.setAttribute( 'data-selection-value', value );\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );\r\n        self.util.addClass( self, 'selection' );\r\n      } else {\r\n        ( window as any ).ccsdkDebug ? console.log( selectedOptionText ) : '';\r\n        if ( selectedOptionText != 'Select' ) {\r\n            selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n            selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          ( window as any ).ccsdkDebug ? console.log( selfOption.textContent ) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = selectedValueText;\r\n        selectionTrigger.setAttribute( 'data-selection-value', selectedValueText );\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );        \r\n        self.selectOptions(selectedValueText);\r\n        \r\n        selectedValueText\r\n        if ( selectedOptionText.length < 1 ) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    } );\r\n    this.listeners.push( ref2 );\r\n    ref2.internalHandler = this.util.listener( this.$body, ref2.type, ref2.id, ref2.cb );\r\n    let ref = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-trigger\", function ( e ) {\r\n      self.$html.addEventListener( 'click', function ( e ) {\r\n        if ( !self.util.hasClass( e.target, 'cc-select-option' ) ) {\r\n          self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n          self.$html.removeEventListener( 'click', function () {\r\n          } );\r\n        }\r\n      } )\r\n      var ccSelect = this.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-trigger', ccSelect ) : '';\r\n      self.util.toggleClass( ccSelect, \"opened\" );\r\n      e.stopPropagation();\r\n    } );\r\n    this.listeners.push( ref );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for ( let listener of this.listeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue( value: string, question, surveyHandler ) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll( \"#\" + qId + \" select\" )[ 0 ];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll( \"#\" + qId + \" .cc-select-trigger\" )[ 0 ];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x) );\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption( el: any ) {\r\n    this.util.addClass( el, 'selection' );\r\n  }\r\n\r\n  removeOption(el){\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions( csv: string ) {\r\n    let self = this;\r\n    if ( csv ) {\r\n      let allOptions = csv.split( ',' );\r\n      for ( let option of allOptions ) {\r\n        let domOptions = document.querySelectorAll( \"#\" + self.qId + \" .cc-select-option\" );\r\n        Array.prototype.forEach.call( domOptions, function ( el, i ) {\r\n          if ( el.getAttribute( 'data-value' ) == option ) {\r\n            self.selectOption( el );\r\n          } else {\r\n            \r\n          }\r\n        } );\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string){\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if(itemIndex !== -1){\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif ( !( <any>Array ).from ) {\r\n  ( <any>Array ).from = ( function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function ( fn ) {\r\n      return typeof fn === 'function' || toStr.call( fn ) === '[object Function]';\r\n    };\r\n    var toInteger = function ( value ) {\r\n      var number = Number( value );\r\n      if ( isNaN( number ) ) {\r\n        return 0;\r\n      }\r\n      if ( number === 0 || !isFinite( number ) ) {\r\n        return number;\r\n      }\r\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\r\n    };\r\n    var maxSafeInteger = Math.pow( 2, 53 ) - 1;\r\n    var toLength = function ( value ) {\r\n      var len = toInteger( value );\r\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from( arrayLike /*, mapFn, thisArg */ ) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object( arrayLike );\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if ( arrayLike == null ) {\r\n        throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\r\n      var T;\r\n      if ( typeof mapFn !== 'undefined' ) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if ( !isCallable( mapFn ) ) {\r\n          throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if ( arguments.length > 2 ) {\r\n          T = arguments[ 2 ];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength( items.length );\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while ( k < len ) {\r\n        kValue = items[ k ];\r\n        if ( mapFn ) {\r\n          A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\r\n        } else {\r\n          A[ k ] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }() );\r\n}\r\n\r\n// custom event polyfill\r\n( function () {\r\n\r\n  if ( typeof ( <any>window ).CustomEvent === \"function\" ) return false;\r\n\r\n  function CustomEvent( event, params ) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent( 'CustomEvent' );\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = ( <any>window ).Event.prototype;\r\n\r\n  ( <any>window ).CustomEvent = CustomEvent;\r\n} )();\r\n\r\n// includes polyfill\r\nif ( !( <any>Array.prototype ).includes ) {\r\n  Object.defineProperty( Array.prototype, 'includes', {\r\n    value: function ( searchElement, fromIndex ) {\r\n\r\n      if ( this == null ) {\r\n        throw new TypeError( '\"this\" is null or not defined' );\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object( this );\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if ( len === 0 ) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max( n >= 0 ? n : len - Math.abs( n ), 0 );\r\n\r\n      function sameValueZero( x, y ) {\r\n        return x === y || ( typeof x === 'number' && typeof y === 'number' && isNaN( x ) && isNaN( y ) );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while ( k < len ) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if ( sameValueZero( o[ k ], searchElement ) ) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  } );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills/ccsdk.polyfill.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { Survey } from \"./Survey\";\r\nimport { RequestHelper } from \"./helpers/Request\";\r\nimport { Config } from \"./Config\";\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\ndeclare var Sentry: any;\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n( window as any ).globalSurveyRunning = false;\r\n( window as any ).ccsdkDebug = false;\r\n( window as any ).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif ( typeof ( window as any ).CCSDK !== 'undefined' ) {\r\n  var queue = ( window as any ).CCSDK.q;\r\n  ( window as any ).CCSDK = function () {\r\n    if ( arguments && arguments.length == 0 ) {\r\n      var time = new Date();\r\n    } else {\r\n      ( window as any ).ccsdkDebug ? console.log( arguments ) : '';\r\n      var args = ( Array as any ).from( arguments );\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( functionName ) : '';\r\n      return localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  };\r\n  if ( queue ) {\r\n    for ( var q of queue ) {\r\n      var args = ( Array as any ).from( q );\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent( 'Event' );\r\n  eventCCReady.initEvent( 'ccready', true, true );\r\n  document.dispatchEvent( eventCCReady );\r\n  let sentry = document.createElement( 'script' );\r\n  sentry.src = \"https://browser.sentry-cdn.com/4.5.3/bundle.min.js\";\r\n  sentry.crossOrigin = \"anonymous\";\r\n  sentry.onload = () => {\r\n    Sentry.init( { dsn: 'https://49d72b03f26d4936a104ceb51cd1f669@sentry.io/1391030' } );\r\n  }\r\n  document.head.appendChild( sentry );\r\n}\r\n\r\nexport function init( surveyToken: any ) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent( surveyToken ).trim();\r\n  let config = ( typeof arguments[ 1 ] === 'object' ) ? arguments[ 1 ] : {};\r\n  //create survey instance\r\n  if ( typeof Cookie.get( surveyToken + '-finish' ) !== 'undefined' && Cookie.get( surveyToken + '-finish' ) ) {\r\n    return;\r\n  }\r\n  if ( typeof Cookie.get( surveyToken + '-coolDown' ) !== 'undefined' && Cookie.get( surveyToken + '-coolDown' ) ) {\r\n    return;\r\n  }\r\n\r\n  if ( typeof config.isActive !== 'undefined' && config.isActive ) {\r\n    SurveyManager.surveyInstances[ surveyToken ] = ( SurveyManager.surveyInstances[ surveyToken ] ) ? SurveyManager.surveyInstances[ surveyToken ] : new Survey( surveyToken, config );\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Init MicroSurvey', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: ( <any>window ).isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    return SurveyManager.surveyInstances[ surveyToken ];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy( surveyToken: string ) {\r\n  //remove from trigger manager, delete instance.\r\n  if ( !SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[ surveyToken ] ||\r\n    !SurveyManager.surveyInstances[ surveyToken ].dom ) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n  delete SurveyManager.surveyInstances[ surveyToken ];\r\n}\r\n//\r\nexport function trigger( surveyToken: string, type: string, target: string ) {\r\n  ( window as any ).ccsdkDebug ? console.log( SurveyManager.surveyInstances ) : '';\r\n\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Trigger Type', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].trigger( type, target );\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on( surveyToken: string, type: string, callback: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Event Listeners', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].on( type, callback );\r\n  }\r\n}\r\n\r\nexport function prefill( surveyToken: string, questionId: string, answerObject: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionId,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( questionId, answerObject );\r\n  }\r\n}\r\n\r\nexport function prefillByTag( surveyToken: string, questionTag: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by tag', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionTag,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefill( questionTag, answer );\r\n  }\r\n}\r\n\r\nexport function prefillByNote( surveyToken: string, questionNote: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by Note', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionNote,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefillByNote( questionNote, answer );\r\n  }\r\n}\r\n\r\nexport function show( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].show();\r\n  }\r\n}\r\n\r\nexport function hide( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n    SurveyManager.surveyInstances[ surveyToken ].hide();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\nimport { MatomoTracker } from './helpers/tracking';\r\nimport { templates } from \"./helpers/templates\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: number;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor( surveyToken: string, config: CCSDKConfig ) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if ( typeof this.config.textDirection === 'undefined' ) {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers( this );\r\n    TriggerManager.addSurvey( this.surveyToken, this.triggers );\r\n    this.survey = new SurveyHandler( this );\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor ) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger( document, this.surveyToken + '-ready', { 'survey': this } );\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger( \"click\", this.config.cssSelector );\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers( this.config );\r\n    // this.login(function() {\r\n    //on login\r\n    // });\r\n  }\r\n\r\n  getSurveyThrottlingLogic( cb ) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace( '{location}', this.config.location );\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function ( data ) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling( cb );\r\n    };\r\n\r\n    RequestHelper.getWithHeaders( getThrottleUrl, headers, successcb, null );\r\n  }\r\n\r\n  checkThrottling( cb ) {\r\n    if ( this.thorttlingLogic != null ) {\r\n      if ( this.thorttlingLogic.inputIds == null ) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push( this.thorttlingLogic[ this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] );\r\n      if ( this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null ) {\r\n        this.thorttlingLogic.logics[ 0 ].filter.location = [];\r\n        this.thorttlingLogic.logics[ 0 ].filter.location.push( this.config.location );\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function ( throttleResponse ) {\r\n\r\n      if ( typeof throttleResponse[ 0 ][ self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] && throttleResponse[ 0 ].value ) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders( postThrottleUrl, this.thorttlingLogic, headers, successcb, null );\r\n  }\r\n\r\n  addThrottlingEntries( isOpen: boolean ) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = ( throttleResponse ) => {\r\n      this.debug ? console.log( throttleResponse ) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders( addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null );\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector( '.cc-sdk' );\r\n    if ( !ccSDKElement ) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute( 'dir' );\r\n    let direction: string = ( this.config && this.config.textDirection ) ?\r\n      this.config.textDirection : ( ccSDKDir ? ccSDKDir : \"ltr\" );\r\n    ccSDKElement.setAttribute( 'dir', direction );\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch ( this.survey.surveyDisplay.position ) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent( 'Welcome Pop up Position', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: this.survey.surveyDisplay.position,\r\n        action: null\r\n      }\r\n    }, null, null );\r\n\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search( /bottom/gi ) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function ( surveyData ) {\r\n      self.debug ? console.log( surveyData ) : '';\r\n      // console.log(surveyData);\r\n\r\n      self.surveyData = surveyData;\r\n      if ( surveyData && surveyData.questions && surveyData.questions[ 0 ] ) {\r\n        self.tracking.username = surveyData.questions[ 0 ].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n\r\n      self.tracking.trackEvent( 'Login Success', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: 'Token',\r\n          action: self.surveyToken\r\n        }\r\n      }, console.log, console.error )\r\n      self.tracking.trackEvent( 'Survey Length', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: `${ surveyData.questions.length } Questions`,\r\n          action: `${ surveyData.preFill ? surveyData.preFill.length : 0 } Prefills`\r\n        }\r\n      }, null, null );\r\n      let event = new CustomEvent( Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse( JSON.stringify( surveyData ) ) } );\r\n      document.dispatchEvent( event );\r\n      if ( !self.config.skipWelcomePage ) {\r\n        self.dom.hideLoader();\r\n      }\r\n      if ( self.surveyData ) {\r\n        self.initSurveyQuestions();\r\n      } else {\r\n        this.tracking.trackEvent( 'Expired Survey', {\r\n          token: this.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n        self.survey.displayWelcomeQuestion( \"The Survey has been expired\" );\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions( successcb, errorcb );\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey( this );\r\n    self.dom.setTheme( self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0 );\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    if ( self.surveyToken && decodeURIComponent( self.surveyToken ).trim() !== '' && !self.config.skipWelcomePage ) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if ( self.config.skipWelcomePage ) {\r\n      let onImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n      document.dispatchEvent( onImpressionEvent );\r\n      self.dom.startSurvey();\r\n      self.survey.setCoolDownPeriod( self.config, self.surveyToken );\r\n    }\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey( this.surveyData );\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent( Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyStartEvent );\r\n  }\r\n\r\n  public on( type: string, callback: any ) {\r\n    document.addEventListener( type + \"-\" + this.surveyToken, function ( e: any ) {\r\n      callback( e.detail );\r\n    } );\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent( 'Survey Destroyed', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: ( <any>new Date() - ( <any>window ).globalSurveyStartTime ) + 's',\r\n        action: null\r\n      }\r\n    }, null, null );\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill( questionId: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect( questionId, answer );\r\n  }\r\n\r\n  public fillPrefill( questionTag: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill( questionTag, answer );\r\n  }\r\n\r\n  public fillPrefillByNote( questionNote: string, answer: any ) {\r\n    this.survey.fillPrefillByNote( questionNote, answer );\r\n  }\r\n\r\n  public trigger( type: string, target: any ) {\r\n    let self: Survey = this;\r\n    switch ( type ) {\r\n      case 'click':\r\n        console.log( 'enable click trigger ##' )\r\n        this.triggers.enableClickTrigger( target, function () {\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey( self.surveyToken );\r\n\r\n        } );\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt( target );\r\n        this.triggers.enablePageCountTrigger( count );\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt( target );\r\n        this.triggers.enableSiteCountTrigger( count2 );\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger( target );\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger( target );\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger( target );\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger( parseInt( target ) );\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey( self.surveyToken );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\r\n// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from './helpers/dom/Select';\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\r\n\r\n\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor( ccsdk ) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      'position': '',\r\n      'surveyPosition': '',\r\n      'welcomePopupAnimation': '',\r\n      'surveyPopupAnimation': '',\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = ( e: any ) => {\r\n      //perform final post\r\n      this.finalPost( null, null );\r\n      if ( this.ccsdk && this.ccsdk.tracking ) {\r\n        this.ccsdk.tracking.trackEvent( 'Completed Survey', {\r\n          token: this.ccsdk.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : ( this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You' );\r\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n      thankyouHtml = thankyouHtml.replace( \"{{question}}\", thankyouText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{button}}\", startText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{branding}}\", this.surveyData.branding && this.surveyData.branding.toUpperCase() === 'NONE' ? 'no-branding' : 'full-branding' )\r\n      this.ccsdk.dom.replaceInQuestionsContainer( thankyouHtml );\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get( \"#cc-thankyou-container\" );\r\n      ( window as any ).ccsdkDebug ? console.log( thankyouContainer ) : '';\r\n      this.util.addClass( thankyouContainer[ 0 ], 'show-thankyou-slide' );\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      //set done cookie for 30 days.\r\n      Cookie.set( this.surveyToken + '-finish', 'true', 30, '/' );\r\n      setTimeout( () => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000 );\r\n    }\r\n\r\n    this.destroySurveyCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      self.destroy();\r\n    }\r\n\r\n    this.acceptAnswersCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n      switch ( data.type ) {\r\n        case 'scale':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'nps':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radio':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radioImage':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'smile':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'star':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'multiline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'singleline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'number':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'checkbox':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'select':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'slider':\r\n          response.text = data.data.text;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchQuestions( successcb, errorcb ) {\r\n    this.randomNumber = parseInt( ( String )( Math.random() * 1000 ) );\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace( \"{token}\", \"\" + this.surveyToken );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get( surveyUrl, successcb, errorcb );\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer( questionId ) {\r\n    delete this.answers[ questionId ];\r\n    delete this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  attachSurvey( surveyData: any ) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if ( this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0 ) {\r\n      this.surveyData.preFill.map( response => {\r\n        this.fillPrefillQuestionObject( response.questionId, response );\r\n      } )\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    surveyHtml = surveyHtml.replace( \"{{animation}}\", this.surveyDisplay.surveyPopupAnimation );\r\n    surveyHtml = surveyHtml.replace( /{{location}}/g, this.surveyDisplay.surveyPosition );\r\n    this.ccsdk.dom.appendInBody( surveyHtml );\r\n  }\r\n\r\n  displayQuestionSelector() {\r\n\r\n  }\r\n\r\n  displayWelcomeQuestion( warningWelcomeText?: string ) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyImpressionEvent );\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n    if ( warningWelcomeText ) {\r\n      document.getElementById( this.surveyToken + \"-welcome\" ).remove();\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", warningWelcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", \"Close\" );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"button-close\" );\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", welcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", startText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"survey-start\" );\r\n    }\r\n    welcomeHtml = welcomeHtml.replace( \"{{location}}\", this.surveyDisplay.position );\r\n    welcomeHtml = welcomeHtml.replace( \"{{animation}}\", this.surveyDisplay.welcomePopupAnimation );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody( welcomeHtml );\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod( this.ccsdk.config, this.surveyToken )\r\n    if ( ( typeof this.ccsdk.config.keepAlive != undefined ) && ( this.ccsdk.config.keepAlive > 0 ) ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval( () => { self.checkWelcomeQuestionDisplay( self.ccsdk.config.keepAlive ) }\r\n        , 1000 );\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n\r\n  }\r\n\r\n  setCoolDownPeriod( campaign, surveyToken ) {\r\n    if ( campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0 ) {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', campaign.coolDownPeriod / 86400, '/' );\r\n    } else {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', 1, '/' );\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay( keepAlive ) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if ( keepAlive ) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if ( keepAlive <= ( now.getTime() - this.welcomeQuestionDisplayTime.getTime() ) / 1000 ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = 'languageSelector';\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions( [ \"default\" ] );\r\n    if ( this.surveyData.translated ) {\r\n      options1 = this.util.generateLanguageSelectOptions( [ \"default\" ].concat( Object.keys( this.surveyData.translated ) ) );\r\n    }\r\n    cTemplate1 = cTemplate1.replace( /{{questionId}}/g, qId );\r\n    cTemplate1 = cTemplate1.replace( \"{{options}}\", options1 );\r\n    cTemplate1 = cTemplate1.replace( \"{{requiredLabel}}\", true ? \"*\" : \"\" );\r\n    this.ccsdk.dom.replaceInQuestionsContainer( cTemplate1 );\r\n    let $questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    let $body = document.getElementsByTagName( \"body\" )[ 0 ];\r\n\r\n    this.util.addClass( $questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.languageSelect = new Select( qId );\r\n    let submitBtn = document.querySelectorAll( '.submit-icon' );\r\n    this.util.removeClassAll( submitBtn, 'act-cc-button-next' );\r\n    this.util.addClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n    if ( this.languageSelect ) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init( qId );\r\n    let selectRes = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"display language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageSelectOption' ) : '';\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n    } );\r\n    this.domListeners.push( ref );\r\n    ref.internalHandler = this.util.listener( $body, ref.type, ref.id, ref.cb );\r\n\r\n\r\n    let languageSelect2 = this.util.initListener( \"click\", \".act-cc-button-lang-next\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageNext' ) : '';\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n      //set config rtl or ltr\r\n      let isRTL = /[\\u0600-\\u06FF]/.test( selectRes );\r\n      self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n      self.ccsdk.setHtmlTextDirection();\r\n      self.util.removeClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n      self.util.addClassAll( submitBtn, 'act-cc-button-next' );\r\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\r\n      // self.postPrefillPartialAnswer( false, null, null );\r\n    } );\r\n    this.domListeners.push( languageSelect2 );\r\n\r\n    languageSelect2.internalHandler = this.util.listener( $body, languageSelect2.type, languageSelect2.id, languageSelect2.cb );\r\n\r\n\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    ( window as any ).ccsdkDebug ? console.log( cTemplate1 ) : '';\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccdone', this.displayThankYouCb );\r\n  }\r\n\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort( this.questionCompare );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName( \"cc-questions-container\" );\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[ 0 ];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for ( let question of this.questionsToDisplay ) {\r\n      if ( this.checkConditionals( question ) ) {\r\n        let compiledTemplate = this.compileTemplate( question );\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if ( this.isPrefillQuestion( question ) ) {\r\n          this.prefillQuestions.push( question );\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId( questionId: string ) {\r\n    let answer = this.surveyAnswers[ questionId ];\r\n    if ( typeof answer === 'undefined' ) {\r\n      for ( let response of this.prefillResponses ) {\r\n        if ( response.questionId == questionId ) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener( 'q-answered', this.acceptAnswersCb );\r\n  }\r\n\r\n  fillPrefillQuestionObject( id: any, response: any ) {\r\n    let question: any = this.getQuestionById( id );\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n  }\r\n\r\n  fillPrefill( tag: any, value: object ) {\r\n    this.prefillWithTags[ tag.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByTag', this.prefillWithTags ) : '';\r\n  }\r\n\r\n  fillPrefillByNote( note: any, value: object ) {\r\n    this.prefillWithNote[ note.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByNote', this.prefillWithNote ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillDirect( questionId: string, value: object ) {\r\n    this.prefillDirect[ questionId ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillDirect', this.prefillDirect ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillQuestion( id: any, value: any, valueType: string ) {\r\n    let question: any = this.getQuestionById( id );\r\n    // console.log(this.questions);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType( question.displayType );\r\n\r\n    if ( valueType.toLowerCase() == \"number\" ) {\r\n      response.numberInput = value;\r\n    }\r\n    if ( valueType.toLowerCase() == \"text\" ) {\r\n      response.textInput = value;\r\n    }\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n\r\n  }\r\n\r\n  postPrefillPartialAnswer( fullSubmission = false, successcb, errorcb ) {\r\n    if ( !fullSubmission && this._prefillsPartiallyPosted ) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", \"false\" );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{tabletId}\", \"\" + this.randomNumber );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    ( window as any ).ccsdkDebug ? console.log( \"Posting Prefill Responses to Server\" ) : '';\r\n    ( window as any ).ccsdkDebug ? console.log( this.prefillResponses ) : '';\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run successCB if there is one.\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    if ( typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById( id: any, resp: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        response = resp;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById( id: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        return response;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getQuestionById( id: any ) {\r\n    for ( let question of this.questions ) {\r\n      if ( question.id == id ) {\r\n        return question;\r\n      }\r\n    }\r\n  }\r\n\r\n  postPartialAnswer( index: any, response: any, complete = false, successcb, errorcb ) {\r\n    this.postPrefillPartialAnswer( complete, null, null );\r\n    // let data = new FormData();\r\n    //in case of file.\r\n    // let input = document.querySelector('input[type=\"file\"]') ;\r\n    // data.append('file', input.files[0]);\r\n\r\n    let question: any = this.questionsToDisplay[ index ];\r\n    if ( typeof question === 'undefined' ) {\r\n      //now?\r\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n    }\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n    // if(this.isPartialAvailable == false) {\r\n    //   this.answers.push(data);\r\n    //   return;\r\n    // }\r\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    //if this is the last of displayed question\r\n    ( window as any ).ccsdkDebug ? console.log( \"partial response\", question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) : '';\r\n    // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n    //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    // } else {\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", `${ complete }` );\r\n    // }\r\n    // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[ question.id ] = data;\r\n\r\n    data = [ data ];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent( Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyAnswerEvent );\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run success callback and return\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if ( question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    } else {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    }\r\n\r\n  }\r\n\r\n  finalPost( successcb, errorcb ) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace( \"{tokenId}\", this.ccsdk.surveyToken );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if ( Object.keys( this.surveyAnswers ).length == 0 ) {\r\n      return;\r\n    }\r\n    for ( let answer in this.surveyAnswers ) {\r\n      let response = this.surveyAnswers[ answer ];\r\n      if ( response && ( response.textInput !== null || response.numberInput !== null ) ) {\r\n        answersAll.push( response );\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for ( let answer in this.prefillResponses ) {\r\n      answersAll.push( this.prefillResponses[ answer ] );\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor( ( timeAtPost - this.ccsdk.surveyStartTime.getTime() ) / 1000 )\r\n    };\r\n    if ( lastAnswer ) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      }\r\n      this.postPartialAnswer( this.questionsToDisplay.length - 1, _lastAnswer, true, null, null )\r\n    }\r\n\r\n    if ( finalData.responses && finalData.responses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( postSurveyFinalUrl, finalData, {}, successcb, errorcb );\r\n    } else {\r\n      successcb();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals( question: any ) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate( question: any ) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if ( question != 'undefined' ) {\r\n      switch ( question.displayType ) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[ 0 ].split( \"-\" );\r\n          let optMin: any = opt[ 0 ].split( \";\" );\r\n          let optMax: any = opt[ 1 ].split( \";\" );\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{min}}/g, optMin[ 0 ] );\r\n          if ( displayLegend[ 0 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, displayLegend[ 0 ] + '-' );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{max}}/g, optMax[ 0 ] );\r\n          if ( displayLegend[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, displayLegend[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          ( window as any ).ccsdkDebug ? console.log( question.questionTags ) : '';\r\n          if ( question.questionTags.includes( \"NPS\" ) ) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else if ( question.questionTags.includes( \"CSAT\" ) ) {\r\n            if ( question.questionTags.includes( \"csat_satisfaction_5\" ) ) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if ( question.questionTags.includes( \"csat_agreement_5\" ) ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else {\r\n            let tileColor = '';\r\n            let style = '';\r\n            if ( question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0 ) {\r\n              if ( question.attributes.scaleColor !== 'Gradient' ) {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\"\r\n              }\r\n            } else if ( question.presentationMode != null && question.presentationMode.indexOf( \"Color\" ) !== -1 ) {\r\n              tileColor = question.presentationMode.split( ':' )[ 1 ];\r\n            }\r\n            if ( tileColor.length > 0 ) {\r\n              let tileColorDark = this.util.shadeBlendConvert( -0.3, tileColor, undefined );\r\n              style = '\\\r\n                <style>\\\r\n                #id'+ question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : '+ tileColor + ';\\\r\n                }\\\r\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : '+ tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace( /{{style}}/g, style );\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n\r\n            if ( question.questionTags.includes( \"ces_agree_5\" ) || question.questionTags.includes( \"ces_agree_7\" ) ) {\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n            }\r\n            else if ( question.questionTags.includes( \"ces_effort_5\" ) || question.questionTags.includes( \"ces_effort_7\" ) ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n            }\r\n\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend( this, question );\r\n            if ( displayLegend ) {\r\n              if ( displayLegend.length > 0 ) {\r\n                startRangeLabel = displayLegend[ 0 ] ? displayLegend[ 0 ] : null;\r\n                endRangeLabel = displayLegend[ 1 ] ? displayLegend[ 1 ] : null;\r\n              }\r\n            }\r\n            if ( question.multiSelect.length > 0 ) {\r\n              startRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 0 ] );\r\n              if ( startRangeLabel == null ) {\r\n                startRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 0 ].split( \";\" )[ 1 ];\r\n              }\r\n              endRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 1 ] );\r\n              if ( endRangeLabel == null ) {\r\n                endRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 1 ].split( \";\" )[ 1 ];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = '';\r\n            let imageVisibility010 = 'hide';\r\n            let imageVisibility110 = 'hide';\r\n            let scaleVisibility = 'show-inline';\r\n            let scaleImageContainer = '';\r\n            if ( startRange == 0 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = 'show';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            } else if ( startRange == 1 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'show';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if ( endRange < 11 ) {\r\n            } else {\r\n              divider = ( endRange - startRange ) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = '';\r\n            let legendDimension;\r\n            if ( ( window as any ).isMobile ) {\r\n              if ( endRange < 11 ) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                let dimension = ( ( 100 / ( endRange - startRange + 1 ) ) - .5 ) * parentContainer / 100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = ( endRange - startRange + 1 ) * ( dimension + 1 );\r\n                optionStyle = `width:${ dimension }px;height:${ dimension }px;padding:${ ( dimension - 15 ) / 2 }px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'show-inline';\r\n              scaleImageContainer = '';\r\n              mobileImageUrl = \"\";\r\n            }\r\n\r\n            if ( question.questionTags.includes( \"CES\" ) ) {\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-' + endRange + '-scale-' + initial + ' ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n            else {\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n\r\n            if ( ( endRange - startRange + 1 ) <= 11 ) {\r\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n              var optionMaxWidth = ( ( ( endRange - startRange + 1 ) * 38 / 2 ) - 5 ) + 'px';\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{legendStyle}}\", `style=\"position:relative;width:${ mobileImageUrl ? '100%' : legendDimension + 'px' };min-height: 20px;\"` )\r\n            questionTemplate = questionTemplate.replace( /\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class' );\r\n            questionTemplate = questionTemplate.replace( \"{{optionsRange}}\", options );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace( /maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth );\r\n            questionTemplate = questionTemplate.replace( /{{optionLeftExtraClass}}/g, optionLeftExtraClass );\r\n            questionTemplate = questionTemplate.replace( /{{optionRightExtraClass}}/g, optionRightExtraClass );\r\n            questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n            questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n            questionTemplate = questionTemplate.replace( /{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"' );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility010}}\", imageVisibility010 );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility110}}\", imageVisibility110 );\r\n            questionTemplate = questionTemplate.replace( \"{{scaleImageContainer}}\", scaleImageContainer );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{characterLimit}}\", question.attributes && question.attributes.characterLimit ? question.attributes.characterLimit : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if ( ( ( question.displayStyle == 'radiobutton/checkbox' ) || ( question.displayStyle == 'icon' ) ) && ( multiSelect1.length < 6 ) ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect1 );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 1 ) && multiSelect1[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if (\r\n                typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log( options3 ) : '';\r\n            questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n            acTemplate = questionTemplate;\r\n\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          let invertedMultiSelect;\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if ( ( question.displayStyle == 'radiobutton/checkbox' ) && ( multiSelect.length < 6 ) ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect );\r\n            ( window as any ).ccsdkDebug ? console.log( 'select radio image', checkOptionContainsImage ) : '';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect.length > 1 ) && multiSelect[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              ( window as any ).ccsdkDebug ? console.log( { options2 } ) : '';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n              questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n            }\r\n          } else if ( ( question.displayStyle == 'icon' ) && ( multiSelect.length < 6 ) ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if ( question.presentationMode == 'Invert' ) {\r\n              invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n          } else {\r\n\r\n            ( window as any ).ccsdkDebug ? console.log( 'select type 3' ) : '';\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if ( typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if ( question.presentationMode == \"Invert\" ) {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n\r\n          } else {\r\n\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend2 ) {\r\n            if ( displayLegend2.length > 0 ) {\r\n              startRangeLabel = displayLegend2[ 0 ] ? displayLegend2[ 0 ] : null;\r\n              endRangeLabel = displayLegend2[ 1 ] ? displayLegend2[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend3 ) {\r\n            if ( displayLegend3.length > 0 ) {\r\n              startRangeLabel1 = displayLegend3[ 0 ] ? displayLegend3[ 0 ] : null;\r\n              endRangeLabel1 = displayLegend3[ 1 ] ? displayLegend3[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel1 );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel1 );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType( displayType: string ) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch ( displayType ) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for ( let question of this.questions ) {\r\n      if ( !question.isRetired ) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if ( this.isPrefillTags( question ) ) {\r\n          self.ccsdk.debug ? console.log( 'prefillTags', this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillNote( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillDirect( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( !( this.isPrefillQuestion( question ) ) ) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            ( question.conditionalFilter != null &&\r\n              ( question.conditionalFilter.filterquestions == null\r\n                || question.conditionalFilter.filterquestions.length == 0 ) )\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n            if ( supportedDisplayTypes.indexOf( question.displayType ) > -1 ) {\r\n              this.questionsToDisplay.push( question );\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if ( ConditionalFlowFilter.filterQuestion( this, question ) ) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push( question );\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags( question );\r\n          this.fillPrefillWithNote( question );\r\n          ConditionalFlowFilter.filterQuestion( this, question );\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for ( let question of this.questions ) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion( this, question );\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags( question: any ) {\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        switch ( tag.toLowerCase() ) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion( question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\" );\r\n            return true;\r\n          default:\r\n            if ( typeof this.prefillWithTags[ tag.toLowerCase() ] != 'undefined' ) {\r\n              let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n              this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined'\r\n      && question.note != null\r\n      && question.note.length > 0\r\n      && this.prefillWithNote[ question.note.toLowerCase() ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect( question: any ) {\r\n    if ( typeof question !== 'undefined'\r\n      && this.prefillDirect[ question.id ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillDirect[ question.id ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags( question: any ) {\r\n    ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', this.prefillWithTags ) : '';\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', tag ) : '';\r\n        if ( typeof this.prefillWithTags[ tag.toLowerCase() ] !== 'undefined' ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'prefil ', tag.toLowerCase(), this.prefillWithTags[ tag.toLowerCase() ], this.prefillWithTags ) : '';\r\n\r\n          let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n          this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined' && question.note != null && question.note.length > 0 ) {\r\n      if ( typeof this.prefillWithNote[ question.note.toLowerCase() ] !== 'undefined' ) {\r\n        let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n        this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion( question: any ) {\r\n    if ( question.apiFill == true ) {\r\n      return true;\r\n    }\r\n    if ( question.staffFill == true ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled( question: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == question.questionId ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccclose', this.destroySurveyCb );\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer( this.surveyToken );\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer( this.surveyToken );\r\n    if ( typeof surveyContainer != 'undefined' ) {\r\n      this.util.remove( surveyContainer );\r\n    }\r\n    if ( typeof welcomeContainer != 'undefined' ) {\r\n      this.util.remove( welcomeContainer );\r\n    }\r\n    document.removeEventListener( 'ccclose', this.destroySurveyCb );\r\n    document.removeEventListener( 'ccdone', this.displayThankYouCb );\r\n    document.removeEventListener( 'q-answered', this.acceptAnswersCb );\r\n    ( window as any ).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 16\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 18\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 19\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 20\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.indexOf( \":\" ) !== -1 ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( isAnd( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( checkLanguage( surveyHandler, fOption )\r\n              || ( surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().includes( 'default' )\r\n                && fOption.language === null )\r\n              || ( surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null ) ) {\r\n              let groupTitle;\r\n              if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n                groupTitle = conditionalText.split( ':' )[ 0 ];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from './Select';\r\nimport { Theme } from './Theme';\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\nimport { setInterval } from 'timers';\r\n\r\nclass DomSurvey {\r\n\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n\r\n  constructor( ccsdk: any ) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities()\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready( function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    } );\r\n  }\r\n\r\n  setTheme( brandColor, time ) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready( function () {\r\n      self.theme = new Theme( brandColor, time );\r\n    } );\r\n  }\r\n\r\n  setQIndex( index: number ) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    this.$popupContainer = document.querySelectorAll( \".cc-popup-container\" );\r\n    this.$popupContainer2 = document.querySelectorAll( \".cc-popup-container-2\" );\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    // this.select = new Select();\r\n\r\n  }\r\n\r\n\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener( \"click\", \".act-cc-survey-start\", function () {\r\n      if ( ( !self.util.hasClass( self.$startBtn, 'disabled' ) ) && ( self.ccsdk.surveyStatus != 'minimized' ) ) {\r\n        let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n        document.dispatchEvent( onSurveyClickEvent );\r\n        self.util.addClass( self.$startBtn, 'disabled' );\r\n        self.showLoader();\r\n        self.startSurvey();\r\n      } else {\r\n        self.initSurveyDom();\r\n      }\r\n    } );\r\n    this.domListeners.push( startSurvey );\r\n\r\n    startSurvey.internalHandler = this.util.listener( this.$body, startSurvey.type, startSurvey.id, startSurvey.cb );\r\n\r\n    let nextQue = this.util.initListener( \"click\", \".act-cc-button-next\", function () {\r\n      // alert(\"working\");\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( nextQue );\r\n\r\n    nextQue.internalHandler = this.util.listener( this.$body, nextQue.type, nextQue.id, nextQue.cb );\r\n\r\n    let prevQue = this.util.initListener( \"click\", \".act-cc-button-prev\", function () {\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.prevQuestion();\r\n    } );\r\n    this.domListeners.push( prevQue );\r\n\r\n    prevQue.internalHandler = this.util.listener( this.$body, prevQue.type, prevQue.id, prevQue.cb );\r\n\r\n    let closeSurvey = this.util.initListener( \"click\", \".act-cc-button-close\", function () {\r\n      let onSurveyCloseEvent = new CustomEvent( Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyCloseEvent );\r\n      self.ccsdk.survey.answers = {};\r\n      self.trackSelects = [];\r\n      self.destroyListeners();\r\n      self.util.trigger( document, 'ccclose', undefined );\r\n      self.bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      self.util.removeClass( self.bodyElement, \"blurr\" )\r\n      self.ccsdk.survey.destroy();\r\n\r\n    } );\r\n    this.domListeners.push( closeSurvey );\r\n\r\n\r\n    closeSurvey.internalHandler = this.util.listener( this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb );\r\n\r\n    let minSurvey = this.util.initListener( \"click\", \".act-cc-button-minimize\", function () {\r\n      self.minimizeSurvey();\r\n    } );\r\n    this.domListeners.push( minSurvey );\r\n\r\n\r\n    minSurvey.internalHandler = this.util.listener( self.$body, minSurvey.type, minSurvey.id, minSurvey.cb );\r\n  }\r\n\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.removeClass( this.$popupContainer2[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.addClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.ccsdk.surveyStatus = 'minimized';\r\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass( this.$startBtn, 'disabled' );\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for ( let listener of this.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    for ( let listener of this.ccsdk.survey.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    if ( this.ccsdk.survey.languageSelect ) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if ( this.select ) {\r\n      this.select.destroyListeners();\r\n    }\r\n\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll( this.$popupContainer2, 'show-slide' );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    if ( this.ccsdk.surveyStatus == 'minimized' ) {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      ( window as any ).ccsdkDebug ? console.log( this.ccsdk.surveyData ) : '';\r\n      if ( this.ccsdk.surveyData.translated === null || ( this.ccsdk.surveyData.translated && Object.keys( this.ccsdk.surveyData.translated ).length < 1 ) ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll( \"#progress-line\" )[ 0 ];\r\n    if ( this.ccsdk && this.ccsdk.tracking ) {\r\n      this.ccsdk.tracking.trackEvent( 'Questions Answered', {\r\n        token: this.ccsdk.surveyToken,\r\n        data: {\r\n          name: `${ this.qIndex }/${ this.ccsdk.survey.questionsToDisplay.length }`,\r\n          action: this.currentQuestionId\r\n        }\r\n      }, null, null );\r\n    }\r\n    el.style.width = ( this.qIndex / this.ccsdk.survey.questionsToDisplay.length ) * 100 + '%';\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics( this.$questionContainer, 0 );\r\n    this.util.removeClassAll( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n    this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n  }\r\n\r\n  nextQuestion() {\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response init', this.qResponse ) : '';\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[ 0 ].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__required\" )[ 0 ]\r\n    let validationSpan: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__validation\" )[ 0 ]\r\n    if ( span )\r\n      this.util.removeClass( span, \"show\" );\r\n    if ( validationSpan )\r\n      this.util.removeClass( validationSpan, \"show\" );\r\n\r\n\r\n    //check if question is required \r\n    isRequired = q.getAttribute( 'data-required' ).toLowerCase() == 'true' ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if ( isRequired && ( Object.keys( this.qResponse ).length === 0 ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else if ( isRequired && ( !this.qResponse.text ) && ( !this.qResponse.number ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else {\r\n      if ( span ) {\r\n        this.util.removeClass( span, \"show\" );\r\n        this.util.addClass( span, \"hide\" );\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[ this.qIndex ].validationRegex\r\n      if ( validationRegex ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'validationRegex', validationRegex ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( 'response', this.qResponse ) : '';\r\n        let pattern = validationRegex.match( new RegExp( '^/(.*?)/([gimy]*)$' ) );\r\n        let regex = new RegExp( validationRegex );\r\n        if ( this.qResponse.text ) {\r\n          if ( regex.test( this.qResponse.text ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        else if ( this.qResponse.number ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'test regex text', regex.test( this.qResponse.number ) ) : '';\r\n\r\n          if ( regex.test( this.qResponse.number ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      if ( this.qResponse !== 'undefined' ) {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && this.qResponse.type == this.ccsdk.survey.answers[ this.currentQuestionId ].type\r\n          && this.qResponse.text == this.ccsdk.survey.answers[ this.currentQuestionId ].text\r\n          && this.qResponse.number == this.ccsdk.survey.answers[ this.currentQuestionId ].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && !this.qResponse.text\r\n          && !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n          this.submitQuestion( this.qIndex, this.qResponse, this.qResponse.type, qId );\r\n          //save response\r\n          this.ccsdk.survey.answers[ this.currentQuestionId ] = JSON.parse( JSON.stringify( this.qResponse ) );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion( this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[ this.qIndex ] );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = 'initial';\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if ( this.qIndex == this.ccsdk.survey.questionsToDisplay.length ) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      let rightIcon: any = this.util.get( '.cc-icon-right' );\r\n      let nextIcon: any = this.util.get( '.act-cc-button-next' );\r\n      this.util.addClassAll( leftIcon, 'hide' );\r\n      this.util.addClassAll( rightIcon, 'hide' );\r\n      this.util.addClassAll( nextIcon, 'hide' );\r\n      this.util.trigger( document, 'ccdone', undefined );\r\n      this.util.removeClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      this.updateProgress();\r\n    } else {\r\n      if ( ( this.qIndex > this.ccsdk.survey.questionsToDisplay.length ) ) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics( nextQ, this.qIndex );\r\n      this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    } else {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClass( leftIcon[ 0 ], 'show-slide' );\r\n      this.util.removeClass( leftIcon[ 0 ], 'hide-slide' );\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.qIndex--;\r\n    if ( !this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0 ) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics( null, this.qIndex );\r\n    this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n    ( window as any ).ccsdkDebug ? console.log( \"prevQuestion qResponse\", this.qResponse ) : '';\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.updateProgress();\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n      this.util.removeClassAll( leftIcon, 'show-slide' );\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.addClass( $loader, 'show' );\r\n    this.util.removeClass( $loader, 'hide' );\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.removeClass( $loader, 'show' );\r\n    this.util.addClass( $loader, 'hide' );\r\n  }\r\n\r\n  appendInBody( html ) {\r\n    document.querySelectorAll( \"body\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer( html ) {\r\n    this.$questionContainer[ 0 ].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer( html ) {\r\n    document.querySelectorAll( \".cc-questions-container\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".act-cc-welcome-question-box\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll( \".act-cc-survey-start\" )[ 0 ];\r\n\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".cc-language-selector\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    let self = this;\r\n    if ( this.util.checkIfListenerExists( '.cc-language-select', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '.cc-language-select' );\r\n    }\r\n    let languageSelect = this.util.initListener( \"click\", \".cc-language-select\", function () {\r\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyClickEvent);\r\n      //select language show next question.\r\n      // self.startSurvey();\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n    } );\r\n\r\n    languageSelect.internalHandler = this.util.listener( this.$body, languageSelect.type, languageSelect.id, languageSelect.cb );\r\n  }\r\n\r\n  getSurveyContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-survey\" )[ 0 ];\r\n  }\r\n\r\n  getWelcomeContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-welcome\" )[ 0 ];\r\n  }\r\n\r\n  loadQuestionSpecifics( q: HTMLElement, index: number ) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[ 0 ].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate( this.ccsdk.survey.questionsToDisplay[ index ] );\r\n    // console.log( compiledTemplate );\r\n    this.$questionContainer[ 0 ].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-type' );\r\n    let qId: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-id' );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring( 2, qId.length );\r\n    // console.log( 'qtype', qType )\r\n    switch ( qType ) {\r\n      case 'scale':\r\n        let allOptions1: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n        let optionWidth1 = ( 100 / allOptions1.length ) - .6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale( index, qId );\r\n        break;\r\n      case 'nps':\r\n        this.setupListenersQuestionNPS( index, qId );\r\n        break;\r\n      case 'multiline':\r\n        this.setupListenersQuestionMultiline( index, qId );\r\n        break;\r\n      case 'select':\r\n        if ( typeof this.select !== 'undefined' ) {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect( index, qId );\r\n        break;\r\n      case 'radio':\r\n        this.setupListenersQuestionRadio( index, qId );\r\n        break;\r\n      case 'radioImage':\r\n        this.setupListenersQuestionRadioImage( index, qId );\r\n        break;\r\n      case 'checkbox':\r\n        this.setupListenersQuestionCheckbox( index, qId );\r\n        break;\r\n      case 'star':\r\n        this.setupListenersQuestionStar( index, qId );\r\n        break;\r\n      case 'smile':\r\n        this.setupListenersQuestionSmile( index, qId );\r\n        break;\r\n      case 'csat':\r\n        this.setupListenersQuestionCsat( index, qId );\r\n        break;\r\n      case 'slider':\r\n        this.setupListenersQuestionSlider( index, qId );\r\n        break;\r\n      case 'singleline':\r\n        this.setupListenersQuestionSingleline( index, qId );\r\n        break;\r\n      case 'number':\r\n        this.setupListenersQuestionNumber( index, qId );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let selectedRating1 = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 1 ];\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'scale';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'scale';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      selectedRating1.innerHTML = '' + rating;\r\n\r\n      //move to next question automagically\r\n      // alert('calling next questions inside scale');\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionNPS( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'nps question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'nps previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        let $mobileRating = document.querySelectorAll( \".act-cc-nps-selected-rating\" )[ 0 ];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = 'nps';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'nps';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // alert('calling next questions inside scale');\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"checkbox question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValues = this.ccsdk.survey.answers[ questionId ].text;\r\n      if ( previousValues ) {\r\n        previousValues = previousValues.split( ',' );\r\n        for ( let previousValue of previousValues ) {\r\n          let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n          ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n          if ( typeof previousSelection !== 'undefined' ) {\r\n            this.util.addClass( previousSelection, \"selected\" );\r\n            previousSelection.setAttribute( 'checked', 'checked' );\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n      // let rating : number = this.querySelectorAll('input')[0].value;\r\n      let rating: string = [].filter.call( document.querySelectorAll( '#' + qId + ' .cc-checkbox input' ), function ( c ) {\r\n        return c.checked;\r\n      } ).map( function ( c ) {\r\n        return c.value;\r\n      } ).join( ',' );\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'Checkbox selected', rating ) : '';\r\n\r\n      self.qResponse.type = 'checkbox';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n    let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyClickEvent );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadio( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      // return;\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radio';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radio';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio image question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio image question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio image previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radioImage';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radioImage';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionStar( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-star-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-star-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'star question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'star previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'star';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-star-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-star-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous sibling\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n\r\n\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'star';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSmile( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'smile question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'smile previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous siblings\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n\r\n  setupListenersQuestionCsat( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"csat question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'csat question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'csat previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      this.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n      let child: any = this.previousSibling;\r\n      while ( ( child = child.previousSibling ) != null ) {\r\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n        self.util.addClass( child, \"selected\" );\r\n      }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      console.log( 'dispatching event in csat', this )\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionMultiline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"multiine question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'multiine question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'multiline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = 'multiline';\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSingleline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"singleline question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'singleline question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'singleline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = 'singleline';\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersQuestionNumber( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"number question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'number question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'number input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'number';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = 'number';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSlider( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = '';\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" input\" )[ 0 ];\r\n\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" input\", this.domListeners ) ) {\r\n      // return;\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'slider question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" .act-slider-tip\" )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = 'slider';\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( \"change\", '#' + qId + \" input\", function () {\r\n      sliderRes = this.value;\r\n      self.qResponse.type = 'slider';\r\n      self.qResponse.number = sliderRes;\r\n      self.qResponse.text = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSelect( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que', this.domListeners ) : '';\r\n    questionId = qId.substring( 2, qId.length );\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'select que listner exists' ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n\r\n      // return;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que' ) : '';\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que initialize select' ) : '';\r\n\r\n    self.select = new Select( qId );\r\n    self.select.destroyListeners();\r\n    self.select.init( qId );\r\n\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      if ( this.ccsdk.survey.answers[ questionId ].text ) {\r\n        let question = this.ccsdk.survey.getQuestionById( questionId );\r\n        self.select.setValue( this.ccsdk.survey.answers[ questionId ].text, question, this.ccsdk.survey );\r\n        self.select.selectOptions( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.qResponse.type = 'select';\r\n        self.qResponse.text = this.ccsdk.survey.answers[ questionId ].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push( qId );\r\n    // }\r\n    let selectRes: string = '';\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      // selectRes = this.getAttribute('data-value');\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].getAttribute( 'data-selection-value' );\r\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n      self.qResponse.type = 'select';\r\n      self.qResponse.text = selectRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // self.nextQuestion();\r\n    } );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion( index: number, data: any, type: string, qId: string ) {\r\n    // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n    this.util.trigger( document, 'q-answered', {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.substring( 2, qId.length )\r\n    } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { DomSurvey }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif ( Cookie.get( Constants.CCTriggerSiteStartTime ) == null ) {\r\n  Cookie.set( Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined );\r\n}\r\n//always add on page Time\r\nCookie.set( Constants.CCTriggerPageStartTime, new Date(), undefined, undefined );\r\n\r\nlet sitePageViewCount = Cookie.get( Constants.CCTriggerSitePageViewCount );\r\nif ( sitePageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, 1, undefined, undefined );\r\n} else {\r\n  sitePageViewCount = ( parseInt( sitePageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined );\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get( Constants.CCTriggerIndividualPageViewCount );\r\nif ( individualPageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href );\r\n} else {\r\n  individualPageViewCount = ( parseInt( individualPageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href );\r\n}\r\n\r\n( window as any ).click = 0;\r\n\r\nwindow.onscroll = function ( e ) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = ( window.pageXOffset || doc.scrollLeft ) - ( doc.clientLeft || 0 );\r\n  let top = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\r\n  ( window as any ).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers( top );\r\n}\r\n\r\ndocument.onclick = function ( e ) {\r\n  ( window as any ).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey( surveyId: any, trigger: Triggers ) {\r\n    TriggerManager.triggerInstances[ surveyId ] = trigger;\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length >= 1 ) {\r\n      ( window as any ).ccsdkDebug ? console.log( TriggerManager.triggerInterval ) : '';\r\n      if ( TriggerManager.triggerInterval == null ) {\r\n        ( window as any ).ccsdkDebug ? console.log( \"TriggerHandler : Setting up Interval Trigger Handlers.\" ) : '';\r\n        TriggerManager.triggerInterval = setInterval( TriggerManager.processIntervalTriggers, 1000 );\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId: string ) {\r\n    delete TriggerManager.triggerInstances[ surveyId ];\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length == 0 ) {\r\n      clearInterval( TriggerManager.triggerInterval );\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set( Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href );\r\n    Cookie.set( Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined );\r\n    //set cookies and call every process Interval Triggers.\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      TriggerManager.triggerInstances[ trigger ].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[ trigger ].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers( scrollNow ) {\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[ trigger ].processScrollTriggers( scrollNow );\r\n    }\r\n  }\r\n\r\n  static disableTriggers( surveyId: string ) {\r\n    TriggerManager.triggerInstances[ surveyId ].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor( ccsdk ) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger( target: string, cb: any ) {\r\n    let item = document.querySelectorAll( target )[ 0 ];\r\n    if ( typeof item !== 'undefined' ) {\r\n      item.addEventListener( 'click', cb );\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger( minPageCount: number ) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger( minSiteCount: number ) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger( minPageTime: number ) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger( minSiteTime: number ) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger( urlPattern: string ) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger( minScrollPixels: number ) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers( config: CCSDKConfig ) {\r\n    ( window as any ).ccsdkDebug ? console.log( config.grepURL ) : '';\r\n    //\r\n    if ( ( typeof config.click !== 'undefined' ) && ( config.click != 0 ) ) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ( ( typeof config.onExitDetect !== 'undefined' ) ) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ( ( typeof config.waitSeconds !== 'undefined' ) && ( config.waitSeconds !== 0 ) ) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ( ( typeof config.scrollPercent !== 'undefined' ) && ( config.scrollPercent !== 0 ) ) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ( ( typeof config.grepInvertURL !== 'undefined' ) && ( config.grepInvertURL ) ) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ( ( typeof config.grepURL !== 'undefined' ) && ( config.grepURL ) ) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'returning' ) : '';\r\n      return;\r\n    }\r\n    if ( typeof this.conditionalTriggers !== 'undefined' ) {\r\n      if ( Object.keys( this.conditionalTriggers ).length == 0 ) {\r\n        return false;\r\n      }\r\n      for ( let conditionalTrigger in this.conditionalTriggers ) {\r\n        if ( this.conditionalTriggers[ conditionalTrigger ] != null ) {\r\n          switch ( conditionalTrigger ) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener( \"mouseout\", \"document\", function () {\r\n                ( window as any ).ccsdkDebug ? console.log( \"Mouse out\" ) : '';\r\n\r\n              } );\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener( document, onExitDetect.type, onExitDetect.id, onExitDetect.cb );\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ( ( window as any ).click >= this.conditionalTriggers.click );\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n              let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'waitSeconds enabled', isEnabled ) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( ( window as any ).ccsdkTopOffset, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'scrollPercent enabled', isEnabled ) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepURL enabled', isEnabled ) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepInvertURL enabled', isEnabled ) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if ( isEnabled ) {\r\n        if ( this.ccsdk && this.ccsdk.tracking ) {\r\n          this.ccsdk.tracking.trackEvent( 'Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null )\r\n        }\r\n        SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers( scrollNow: number ) {\r\n    this.TriggerPopUpByScrollPixels( scrollNow );\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt( Cookie.get( Constants.CCTriggerSitePageViewCount ) );\r\n    if ( pageCount == NaN ) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount( pageCount, this.minPageCount ) ) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n    let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.minPageTime ) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date( Cookie.get( Constants.CCTriggerSiteStartTime ) ).getTime();\r\n    let siteTime = new Date( Cookie.get( Constants.CCTriggerSiteElapsedTime ) ).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition( siteTime, siteStartTime, this.minSiteTime ) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels( scrollNow: number ) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll( scrollNow, this.minScrollPixels ) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split( \"=\" );\r\n    let utmVal = Cookie.getParameterByName( utmP[ 0 ], undefined );\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[ 1 ] ) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts","import { RequestHelper } from './Request';\r\n\r\nexport class MatomoTracker {\r\n\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent( event, payload, successCb, errorCb ) {\r\n    let url = new URL( 'https://matomo.getcloudcherry.com/piwik.php' );\r\n    // constants for project\r\n    const idsite = 4;\r\n    const rec = 1;\r\n\r\n    let searchParams = {\r\n      idsite,\r\n      rec,\r\n      action_name: event,\r\n      url: window.location.href,\r\n      action_url: window.location.href,\r\n      uid: this.username,\r\n      _cvar: { '1': [ 'Token', payload.token ] },\r\n      new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n      e_c: event,\r\n      e_a: payload.data.action,\r\n      e_n: payload.data.name,\r\n      rand: Math.ceil( Math.random() * 100 )\r\n    };\r\n    Object.keys( searchParams ).forEach( x => {\r\n      let param;\r\n      if ( typeof searchParams[ x ] === 'string' ) {\r\n        param = searchParams[ x ];\r\n      } else {\r\n        param = JSON.stringify( searchParams[ x ] );\r\n      }\r\n      url.searchParams.set( x, param );\r\n    } )\r\n    return RequestHelper.post( url.toString(), null, successCb, errorCb );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/tracking.ts"],"sourceRoot":""}
>>>>>>> c97b27f4fd61b6d26d6e6d0fe0ce4ad8e85ba70a
