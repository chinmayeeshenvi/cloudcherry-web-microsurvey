{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap d9b8044f5714bb60269f","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","selectorMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","internalHandler","event","t","target","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","isArray","res","generateLanguageSelectOptions","checkOptionContainsImage","opt","includes","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","console","log","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","addSurvey","ccsdkDebug","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","unsetSurveyRunning","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","text","qText","translated","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","Content-Type","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioMore","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio_more","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","DomUtilities_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selfOption","selectOptions","selectWrapper","selectedOptionText","textContent","ref","ccSelect","stopPropagation","destroyListeners","_a","setValue","selectOption","csv","allOptions","allOptions_1","domOptions","LanguageTextFilter_1","ConditionalFlowFilter","filterQuestion","aAddedCount","aRemovedCount","getAnswerForQuestionId","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","isAnd","doesSatisfy","isOr","getSurveyQuestions","removeAnswer","sort","questionCompare","a","sequence","groupBy","toUpperCase","isNumberCheck","answerCheck","iFoundAll","getQuestionById","questionId","questionAnswer","questionAnswerText","textInput","aAnswer","displayType","toLowerCase","numberInput","number","surveyToken","arguments","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","destroy","dom","callback","prefill","answerObject","prefillByTag","questionTag","answer","fillPrefill","prefillByNote","questionNote","fillPrefillByNote","show","hide","localCCSDK","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","login","loginURL","logindata","debug","loginData","getSurveyThrottlingLogic","grant_type","getThrottleUrl","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","htmlDir","direction","setAttribute","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","hideLoader","initSurveyQuestions","fetchQuestions","DomSurvey","setTheme","keepAlive","displayWelcomeQuestion","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questions","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","replaceInQuestionsContainer","thankyouContainer","setTimeout","destroySurveyCb","onSurveyEndEvent","acceptAnswersCb","Number","postPartialAnswer","domSelectElements","setQIndex","randomNumber","random","surveyUrl","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","surveyHtml","appendInBody","displayQuestionSelector","onSurveyImpressionEvent","surveyStartTime","welcomeHtml","welcomeText","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","acceptAnswers","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","postPrefillPartialAnswer","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","fillPrefillQuestionObject","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","fullSubmission","surveyPartialUrl","partialResponseId","resp","complete","comparator","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","floor","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","initial_1","optionLeftExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","bodyElement","content","transform","locals","list","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","newUrl","conditionalText","conditionalText_1","setName","leadingDisplayTexts","fOption","filterByQuestion","groupTitle","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","startSurvey","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","match","currentQuestionId","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","token","qType","allOptions1","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","inputRange","rangeTip","speed","min","max","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var selectorMatches = function (el, selector) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n            return f.call(el, selector);\r\n        };\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (selectorMatches(t, sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && opt.includes(';') && opt.includes('.');\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, arr[i]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, arr[i].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, arr[i]);\r\n                res += optHtml;\r\n            }\r\n            console.log(res);\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n            else {\r\n                if (question.text != null) {\r\n                    var qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.text == null ? '' : question.text;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (question.text != null) {\r\n                var qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            }\r\n            else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        // console.log(effectiveMultiselect);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}/MICROSURVEY\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers, successcb, errorcb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        if (this.status >= 200 && this.status < 300) {\r\n            var res = xhr.response ? JSON.parse(xhr.response) : '';\r\n            successcb(res);\r\n        }\r\n        else {\r\n            errorcb({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        errorcb({\r\n            status: this.status,\r\n            statusText: xhr.statusText\r\n        });\r\n    };\r\n    if (headers) {\r\n        Object.keys(headers).forEach(function (key) {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers, successcb, errorcb) {\r\n        headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.get = function (url, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, null, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data, successcb, errorcb) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\": \"application/json; charset=utf-8\" }, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(13);\r\nvar QuestionSurvey = __webpack_require__(18);\r\nvar QuestionStart = __webpack_require__(19);\r\nvar QuestionSingleline = __webpack_require__(20);\r\nvar QuestionNumber = __webpack_require__(21);\r\nvar QuestionMultiline = __webpack_require__(22);\r\nvar QuestionCheckbox = __webpack_require__(23);\r\nvar QuestionRadio = __webpack_require__(24);\r\nvar QuestionRadioMore = __webpack_require__(25);\r\nvar QuestionRadioImage = __webpack_require__(26);\r\nvar QuestionScale = __webpack_require__(27);\r\nvar QuestionCSATAgreement5 = __webpack_require__(28);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(29);\r\nvar QuestionNPS = __webpack_require__(30);\r\nvar QuestionSelect = __webpack_require__(31);\r\nvar QuestionMultiSelect = __webpack_require__(32);\r\nvar QuestionSmile = __webpack_require__(33);\r\nvar QuestionSmileInverted = __webpack_require__(34);\r\nvar QuestionStar = __webpack_require__(35);\r\nvar QuestionSlider = __webpack_require__(36);\r\nvar OptionRadioImage = __webpack_require__(37);\r\nvar OptionRadio = __webpack_require__(38);\r\nvar OptionCheckbox = __webpack_require__(39);\r\nvar OptionCheckboxImage = __webpack_require__(40);\r\nvar ThankYou = __webpack_require__(41);\r\nvar LanguageSelector = __webpack_require__(42);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio_more: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_more = QuestionRadioMore;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            //select all cc-select-option and remove class selection\r\n            // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\r\n            // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    if (selectedOptionText.indexOf(selfOption.textContent) == 0) {\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '');\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else if (selectedOptionText.indexOf(selfOption.textContent) > 0) {\r\n                        selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else {\r\n                        selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\r\n                    }\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\r\n                if (selectedOptionText.length < 1) {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\r\n                }\r\n                else {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0].textContent = value;\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (ConditionalFlowFilter.isAnd(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalFlowFilter.isOr(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (!surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            surveyHandler.getSurveyQuestions().push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            aRemovedCount++;\r\n                            surveyHandler.getSurveyQuestions().splice(surveyHandler.getSurveyQuestions().indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(ConditionalFlowFilter.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        window.ccsdkDebug ? console.log(surveyHandler.getSurveyQuestions()) : '';\r\n    };\r\n    ConditionalFlowFilter.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    ConditionalFlowFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isNumberCheck = function (filterQuestion) {\r\n        if (!filterQuestion) {\r\n            return false;\r\n        }\r\n        if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] == \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n     *\r\n     * @param filterQuestion\r\n     * @return\r\n     */\r\n    ConditionalFlowFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalFlowFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n            var questionAnswer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n            var questionAnswerText = questionAnswer != null && questionAnswer.textInput != null ? questionAnswer.textInput : '';\r\n            if (!questionAnswer) {\r\n                return false;\r\n            }\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                if (question.multiSelect instanceof Array) {\r\n                    aAnswer = LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, aAnswer);\r\n                }\r\n                //   console.log('hello', question.multiSelect instanceof Array,surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n                console.log(questionAnswerText, aAnswer);\r\n                if (question.displayType === 'MultiSelect') {\r\n                    var selectedOptions = questionAnswer.textInput.split(',');\r\n                    if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                        iFoundAll = true;\r\n                    }\r\n                }\r\n                else if (questionAnswerText === aAnswer) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            return iFoundAll;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(11);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n            // console.log(this.time);\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            // console.log(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    // console.log(arguments[arguments.length - 1]);\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken, questionId, answerObject) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken, questionTag, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken, questionNote, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n//on exit detect\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(12);\r\nvar DomSurvey_1 = __webpack_require__(44);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(47);\r\nvar Triggers_1 = __webpack_require__(48);\r\nvar Request_1 = __webpack_require__(6);\r\nvar Config_1 = __webpack_require__(5);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.requester = new Request_1.RequestHelper();\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        // this.setupSurvey();\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.login = function (cb) {\r\n        var loginURL = Config_1.Config.API_URL + Config_1.Config.POST_LOGIN_TOKEN;\r\n        var self = this;\r\n        var successcb = function (logindata) {\r\n            self.debug ? console.log(logindata) : '';\r\n            self.loginData = logindata;\r\n            if (self.isThrottled) {\r\n                self.getSurveyThrottlingLogic(cb);\r\n            }\r\n            else {\r\n                cb();\r\n                return;\r\n            }\r\n        };\r\n        Request_1.RequestHelper.post(loginURL, {\r\n            grant_type: Constants_1.Constants.GRANT_TYPE,\r\n            username: this.config.username,\r\n            password: this.config.password\r\n        }, successcb, null);\r\n        this.debug ? console.log(\"login\") : '';\r\n    };\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var self = this;\r\n        var successcb = function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        };\r\n        Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var successcb = function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var _this = this;\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var successcb = function (throttleResponse) {\r\n            _this.debug ? console.log(throttleResponse) : '';\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers, successcb, null);\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var htmlDir = document.getElementsByTagName('html')[0].getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (htmlDir ? htmlDir : \"ltr\");\r\n        document.getElementsByTagName('html')[0].setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var self = this;\r\n        var successcb = function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            //copy data.\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            self.dom.hideLoader();\r\n            self.initSurveyQuestions();\r\n        };\r\n        var errorcb = null;\r\n        this.survey.fetchQuestions(successcb, errorcb);\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        self.survey.displayWelcomeQuestion();\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (questionId, answer) {\r\n        //save this in this.surveyHandler\r\n        // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n        this.survey.fillPrefillDirect(questionId, answer);\r\n    };\r\n    Survey.prototype.fillPrefill = function (questionTag, answer) {\r\n        //save this in this.surveyHandler\r\n        this.survey.fillPrefill(questionTag, answer);\r\n    };\r\n    Survey.prototype.fillPrefillByNote = function (questionNote, answer) {\r\n        this.survey.fillPrefillByNote(questionNote, answer);\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(5);\r\nvar Request_1 = __webpack_require__(6);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(43);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar Select_1 = __webpack_require__(8);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this._prefillsPartiallyPosted = false;\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost(null, null);\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            // let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function (successcb, errorcb) {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        Request_1.RequestHelper.get(surveyUrl, successcb, errorcb);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function () {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            self.postPrefillPartialAnswer(false, null, null);\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (tag, value) {\r\n        this.prefillWithTags[tag.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (note, value) {\r\n        this.prefillWithNote[note.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (questionId, value) {\r\n        this.prefillDirect[questionId] = value;\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        // console.log(this.questions);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function (fullSubmission, successcb, errorcb) {\r\n        if (fullSubmission === void 0) { fullSubmission = false; }\r\n        if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n            return;\r\n        }\r\n        this._prefillsPartiallyPosted = true;\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            Request_1.RequestHelper.post(surveyPartialUrl, this.prefillResponses, successcb, errorcb);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                return response;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (question.id == id) {\r\n                return question;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete, successcb, errorcb) {\r\n        if (complete === void 0) { complete = false; }\r\n        this.postPrefillPartialAnswer(complete, null, null);\r\n        // let data = new FormData();\r\n        //in case of file.\r\n        // let input = document.querySelector('input[type=\"file\"]') ;\r\n        // data.append('file', input.files[0]);\r\n        var question = this.questionsToDisplay[index];\r\n        if (typeof question === 'undefined') {\r\n            //now?\r\n            // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n        }\r\n        var data = {\r\n            comparator: 0,\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        // if(this.isPartialAvailable == false) {\r\n        //   this.answers.push(data);\r\n        //   return;\r\n        // }\r\n        // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        //if this is the last of displayed question\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n        //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n        // } else {\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        // }\r\n        // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            Request_1.RequestHelper.post(surveyPartialUrl, data, successcb, errorcb);\r\n        }\r\n        else {\r\n            Request_1.RequestHelper.post(surveyPartialUrl, data, successcb, errorcb);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function (successcb, errorcb) {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        if (Object.keys(this.surveyAnswers).length == 0) {\r\n            return;\r\n        }\r\n        for (var answer in this.surveyAnswers) {\r\n            answersAll.push(this.surveyAnswers[answer]);\r\n            lastAnswer = this.surveyAnswers[answer];\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        if (lastAnswer) {\r\n            var _lastAnswer = {\r\n                text: lastAnswer.textInput,\r\n                number: lastAnswer.numberInput\r\n            };\r\n            this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true, null, null);\r\n        }\r\n        Request_1.RequestHelper.post(postSurveyFinalUrl, finalData, successcb, errorcb);\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (optMin[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, optMin[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (optMax[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, optMax[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.attributes != null && question.attributes.scaleColor.length > 0) {\r\n                            tileColor = question.attributes.scaleColor;\r\n                        }\r\n                        else if (question.presentationMode != null && question.presentationMode.includes(\"Color\")) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\r\n                <style>\\\r\n                #id' + question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : ' + tileColor + ';\\\r\n                }\\\r\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : ' + tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var displayLegend = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend) {\r\n                            if (displayLegend.length > 0) {\r\n                                startRangeLabel_1 = displayLegend[0] ? displayLegend[0] : null;\r\n                                endRangeLabel_1 = displayLegend[1] ? displayLegend[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        // console.log((window as any).isMobile);\r\n                        if (window.isMobile) {\r\n                            if (endRange > 6 && endRange < 11) {\r\n                                optionStyle = 'width:' + ((100 / (endRange - startRange + 1)) - .5) + '%';\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                            options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                        }\r\n                        if ((endRange - startRange + 1) <= 11) {\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                            var optionMaxWidth = (((endRange - startRange + 1) * 38 / 2) - 5) + 'px';\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].includes(\"Male\"))\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Yes\"))\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(multiSelect1);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].includes(\"Male\"))\r\n                                || ((multiSelect.length > 0) && multiSelect[0].includes(\"Yes\"))\r\n                                || ((multiSelect.length > 1) && multiSelect[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(multiSelect);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log('prefillTags', this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    if (question.conditionalFilter != null &&\r\n                        (question.conditionalFilter.filterquestions == null\r\n                            || question.conditionalFilter.filterquestions.length == 0)) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        console.log(\"isPrefillTags\", typeof this.prefillWithTags[tag.toLowerCase()]);\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined') {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug ? console.log('fillprefillwithtags', this.prefillWithTags) : '';\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug ? console.log('fillprefillwithtags', tag) : '';\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    window.ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags) : '';\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        var bodyElement = document.\r\n            getElementsByTagName(\"body\")[0];\r\n        this.util.removeClass(bodyElement, \"blurr\");\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(14);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(16)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul {\\n  padding-right: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111;\\n  padding: 10px; }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  margin-left: 147px;\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: calc( 100% - 147px);\\n  z-index: 11;\\n  top: 0;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  right: 0;\\n  left: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  right: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-right: 15px;\\n  text-align: right;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-left: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-left: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 50px 0 0px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-left: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .form-control,\\n.cc-sdk .single-line .cc-question-container__content .form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-right: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: right;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px; }\\n\\n.cc-sdk .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: rtl;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-left: 75px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; }\\n  .cc-sdk .cc-question-container__content {\\n    max-height: 100px; } }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-left: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: left;\\n    bottom: 9px;\\n    left: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-left: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-left: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: initial;\\n    left: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: initial;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-right: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    right: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: right;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: right;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-right: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .detail-box .cc-question-container__content .form-control,\\n  .cc-sdk .single-line .cc-question-container__content .form-control {\\n    margin-right: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: right;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: initial;\\n    right: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    left: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-question-container__required-label {\\n    display: block;\\n    right: 0;\\n    top: 2px; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk ul {\\n  padding-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-popup-container__close {\\n  left: initial;\\n  right: 0;\\n  top: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: initial;\\n  right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-question-container {\\n  /* margin: auto; */\\n  margin-right: 147px;\\n  margin-left: 0;\\n  left: 0;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__validation {\\n  left: 0%;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  left: -2px;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 15px !important;\\n  padding-right: 15px !important;\\n  vertical-align: middle; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-left: 0 !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n  padding-left: 15px;\\n  padding-right: 0;\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container:before {\\n  margin-right: -4px;\\n  margin-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n  margin: 0 0px 0 50px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .hl.dropdown {\\n  background-position: 3% center;\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px;\\n  margin-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0;\\n  padding-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-nps-image {\\n  right: 31px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content {\\n  text-align: left; }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    padding-right: 20px;\\n    padding-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px;\\n    margin-left: 0px; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: auto;\\n    left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li span {\\n    padding-left: 25px !important;\\n    padding-right: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px;\\n    padding-left: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container {\\n    right: initial;\\n    left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    text-align: left;\\n    width: 100%;\\n    margin-left: 5px;\\n    max-width: 100%; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n    padding-left: 15px;\\n    padding-right: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    padding-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: 0;\\n    left: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: 0;\\n    right: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: right;\\n  font-size: 13px;\\n  height: 38px;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin: 0 .25%;\\n  cursor: pointer; }\\n\\n.cc-sdk .option-number-item.option-zero {\\n  background: #853838; }\\n\\n.cc-sdk .option-number-item.option-zero.selected,\\n.cc-sdk .option-number-item.option-zero:hover {\\n  background: #572526; }\\n\\n.cc-sdk .option-number-item.option-one {\\n  background: #9e4343; }\\n\\n.cc-sdk .option-number-item.option-one.selected,\\n.cc-sdk .option-number-item.option-one:hover {\\n  background: #642728; }\\n\\n.cc-sdk .option-number-item.option-two {\\n  background: #c14d4d; }\\n\\n.cc-sdk .option-number-item.option-two.selected,\\n.cc-sdk .option-number-item.option-two:hover {\\n  background: #712827; }\\n\\n.cc-sdk .option-number-item.option-three {\\n  background: #d94d4d; }\\n\\n.cc-sdk .option-number-item.option-three.selected,\\n.cc-sdk .option-number-item.option-three:hover {\\n  background: #7c2828; }\\n\\n.cc-sdk .option-number-item.option-four {\\n  background: #ee4d4d; }\\n\\n.cc-sdk .option-number-item.option-four.selected,\\n.cc-sdk .option-number-item.option-four:hover {\\n  background: #852828; }\\n\\n.cc-sdk .option-number-item.option-five {\\n  background: #ff4d4d; }\\n\\n.cc-sdk .option-number-item.option-five.selected,\\n.cc-sdk .option-number-item.option-five:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-six {\\n  background: #ff8c4d; }\\n\\n.cc-sdk .option-number-item.option-six.selected,\\n.cc-sdk .option-number-item.option-six:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-seven {\\n  background: #ffc74d; }\\n\\n.cc-sdk .option-number-item.option-seven.selected,\\n.cc-sdk .option-number-item.option-seven:hover {\\n  background: #856728; }\\n\\n.cc-sdk .option-number-item.option-eight {\\n  background: #f5eb4d; }\\n\\n.cc-sdk .option-number-item.option-eight.selected,\\n.cc-sdk .option-number-item.option-eight:hover {\\n  background: #7f7a28; }\\n\\n.cc-sdk .option-number-item.option-nine {\\n  background: #73ca81; }\\n\\n.cc-sdk .option-number-item.option-nine.selected,\\n.cc-sdk .option-number-item.option-nine:hover {\\n  background: #3b6942; }\\n\\n.cc-sdk .option-number-item.option-ten {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-ten.selected,\\n.cc-sdk .option-number-item.option-ten:hover {\\n  background: #285e40; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-seven {\\n  margin-right: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-nine {\\n  margin-right: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  bottom: -25px;\\n  color: #424242;\\n  font-size: 13px;\\n  right: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 7px;\\n  bottom: -12px; }\\n\\n.cc-sdk .option-right-rating-text {\\n  right: auto;\\n  left: 5px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 36px;\\n  bottom: -12px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box, .cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-left: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one.selected,\\n.cc-sdk .option-smile-box.one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two.selected,\\n.cc-sdk .option-smile-box.two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three.selected,\\n.cc-sdk .option-smile-box.three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four.selected,\\n.cc-sdk .option-smile-box.four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five.selected,\\n.cc-sdk .option-smile-box.five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-right: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center;\\n  background: none; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-left: 68px;\\n  width: 30px;\\n  padding-right: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-left: 0px;\\n  width: auto;\\n  padding-right: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-left: 13px; }\\n\\n.cc-sdk .option-csat span {\\n  display: inline-block;\\n  vertical-align: top;\\n  font-size: 12px;\\n  padding-right: 25px;\\n  position: relative;\\n  top: -10px;\\n  text-align: right;\\n  /* min-height: 32px; */\\n  width: 100%; }\\n\\n.cc-sdk .option-csat .cc-checkbox {\\n  top: 8px; }\\n\\n.cc-sdk .option-csat .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-csat .cc-checkbox.cc-radio label:before {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-left: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 16px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 29px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-right: 74px;\\n    top: 0; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: 19px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: right;\\n    font-size: 15px;\\n    height: 35px;\\n    margin-left: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    bottom: -44px;\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: left; }\\n  .cc-sdk .option-smile-box img, .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; } }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  right: 0px; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  right: 0px;\\n  line-height: 100px;\\n  left: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n/*cc-question-container color scale css*/\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-left: 45px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-number-item {\\n  margin-left: 1px;\\n  margin-right: 0px;\\n  float: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n  right: calc(100% - 418px);\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n  left: 0px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  right: 8px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  right: 13px;\\n  width: auto !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  left: 2px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .rating-color {\\n  position: relative; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img {\\n  margin-left: 29px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n  margin-right: 19px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n  padding-left: 25px;\\n  text-align: left;\\n  padding-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 7px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 35px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat {\\n  width: auto;\\n  padding-right: 0px;\\n  margin-left: 13px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n  background-position: calc(100% - ( 100% - 19px)) center;\\n  text-align: left; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    margin-right: 0px;\\n    margin-left: 10px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 10px;\\n    margin-right: 86px !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    right: 17px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 7px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 20px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    padding-left: 0px;\\n    padding-right: 5px;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-left: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    background-position: calc(100% - ( 100% - 30px)) center; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n    padding-left: 39px;\\n    text-align: left;\\n    padding-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 10px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n    left: 10px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    right: calc(100% - 322px);\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    right: 13px;\\n    width: auto !important; } }\\n\\n@media (max-width: 381px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    right: calc(100% - 258px);\\n    left: initial !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 22px 0 84px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: right;\\n  padding: 5px 5px 5px 20px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  left: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-left: 1px solid #222;\\n  transform: rotate(-45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  right: 0;\\n  left: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(calc( -100% - 65px)); }\\n\\n.cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( -100% + 75px)); }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: right;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-right: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger {\\n  padding: 0 84px 0 22px;\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  right: 2px;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option {\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 0px 4px 4px 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 4px 0 0px 4px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  position: relative;\\n  text-align: right;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before, .cc-sdk .cc-checkbox label:after {\\n  bottom: 0;\\n  content: \\\"\\\";\\n  right: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  margin-left: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-left-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  right: 4px;\\n  top: -3px;\\n  transform: rotate(45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-right: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-right: 15px; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li span {\\n  padding: 10px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span {\\n    padding: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: inline-block;\\n    padding-left: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  right: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: right;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.range-slider {\\n  height: 50px;\\n  padding-top: 9px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  top: 51px;\\n  right: 0px;\\n  left: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .range {\\n    width: 100%; } }\\n\\n.cc-sdk input.range.blue::-moz-range-track,\\n.cc-sdk input.range.blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .chart canvas {\\n  right: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .loader {\\n  height: 21px;\\n  right: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 767px) {\\n  .cc-sdk .chart canvas {\\n    margin-right: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n  left: 0;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .loader {\\n  left: 28px;\\n  right: initial; }\\n\\n@media (min-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n    margin-left: 10px;\\n    margin-right: 0; } }\\n\\n/** Utilities **/\\n.show {\\n  display: block !important; }\\n\\n.show-inline {\\n  display: inline-block !important; }\\n\\n.hide {\\n  display: none !important; }\\n\\n.bottom {\\n  bottom: 0; }\\n\\n.right {\\n  left: 0; }\\n\\n.left {\\n  right: 0; }\\n\\n.top {\\n  top: 0; }\\n\\n/* Begin required CSS. */\\n/* End required CSS. */\\n.overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  right: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.overlay.glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk .form-control::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 767px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 767px) {\\n  .mobile-hide {\\n    display: none; }\\n  .loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; }\\n  .overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); }\\n  iframe, body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\\n    -webkit-filter: blur(15px);\\n    -moz-filter: blur(15px);\\n    -ms-filter: blur(15px);\\n    -o-filter: blur(15px);\\n    filter: blur(15px); } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n  right: 0;\\n  left: initial;\\n  margin-right: 75px; }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 30px;\\n    right: initial;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0;\\n    left: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(-5px);\\n  -moz-transform: translateX(-5px);\\n  -ms-transform: translateX(-5px);\\n  -o-transform: translateX(-5px);\\n  transform: translateX(-5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.timer {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(90deg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk svg.timer {\\n  left: 0;\\n  right: initial; }\\n\\n.cc-sdk svg.timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  right: 0;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\" : \".cc-sdk ul {\\n  padding-left: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111;\\n  padding: 10px; }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  margin-right: 147px;\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: calc( 100% - 147px);\\n  z-index: 11;\\n  top: 0;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  left: 0;\\n  right: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  left: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-left: 15px;\\n  text-align: left;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-right: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-right: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 0px 0 50px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-right: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .form-control,\\n.cc-sdk .single-line .cc-question-container__content .form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-left: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: left;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px; }\\n\\n.cc-sdk .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: ltr;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-right: 75px;\\n  font-size: 16px /*rtl:14px*/;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; }\\n  .cc-sdk .cc-question-container__content {\\n    max-height: 100px; } }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-right: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: right;\\n    bottom: 9px;\\n    right: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-right: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-right: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: initial;\\n    right: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: initial;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-left: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    left: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: left;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: left;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-left: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .detail-box .cc-question-container__content .form-control,\\n  .cc-sdk .single-line .cc-question-container__content .form-control {\\n    margin-left: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: left;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: initial;\\n    left: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    right: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-question-container__required-label {\\n    display: block;\\n    left: 0;\\n    top: 2px; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk ul {\\n  padding-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-popup-container__close {\\n  right: initial;\\n  left: 0;\\n  top: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: initial;\\n  left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-question-container {\\n  /* margin: auto; */\\n  margin-left: 147px;\\n  margin-right: 0;\\n  right: 0;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__validation {\\n  right: 0%;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  right: -2px;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 15px !important;\\n  padding-left: 15px !important;\\n  vertical-align: middle; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-right: 0 !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n  padding-right: 15px;\\n  padding-left: 0;\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container:before {\\n  margin-left: -4px;\\n  margin-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n  margin: 0 50px 0 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .hl.dropdown {\\n  background-position: 97% center;\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px;\\n  margin-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-nps-image {\\n  left: 31px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content {\\n  text-align: right; }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    padding-left: 20px;\\n    padding-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px;\\n    margin-right: 0px; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: auto;\\n    right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li span {\\n    padding-right: 25px !important;\\n    padding-left: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px;\\n    padding-right: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container {\\n    left: initial;\\n    right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    text-align: right;\\n    width: 100%;\\n    margin-right: 5px;\\n    max-width: 100%; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n    padding-right: 15px;\\n    padding-left: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    padding-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: 0;\\n    right: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: 0;\\n    left: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important;\\n    margin-right: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: left;\\n  font-size: 13px;\\n  height: 38px;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin: 0 .25%;\\n  cursor: pointer; }\\n\\n.cc-sdk .option-number-item.option-zero {\\n  background: #853838; }\\n\\n.cc-sdk .option-number-item.option-zero.selected,\\n.cc-sdk .option-number-item.option-zero:hover {\\n  background: #572526; }\\n\\n.cc-sdk .option-number-item.option-one {\\n  background: #9e4343; }\\n\\n.cc-sdk .option-number-item.option-one.selected,\\n.cc-sdk .option-number-item.option-one:hover {\\n  background: #642728; }\\n\\n.cc-sdk .option-number-item.option-two {\\n  background: #c14d4d; }\\n\\n.cc-sdk .option-number-item.option-two.selected,\\n.cc-sdk .option-number-item.option-two:hover {\\n  background: #712827; }\\n\\n.cc-sdk .option-number-item.option-three {\\n  background: #d94d4d; }\\n\\n.cc-sdk .option-number-item.option-three.selected,\\n.cc-sdk .option-number-item.option-three:hover {\\n  background: #7c2828; }\\n\\n.cc-sdk .option-number-item.option-four {\\n  background: #ee4d4d; }\\n\\n.cc-sdk .option-number-item.option-four.selected,\\n.cc-sdk .option-number-item.option-four:hover {\\n  background: #852828; }\\n\\n.cc-sdk .option-number-item.option-five {\\n  background: #ff4d4d; }\\n\\n.cc-sdk .option-number-item.option-five.selected,\\n.cc-sdk .option-number-item.option-five:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-six {\\n  background: #ff8c4d; }\\n\\n.cc-sdk .option-number-item.option-six.selected,\\n.cc-sdk .option-number-item.option-six:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-seven {\\n  background: #ffc74d; }\\n\\n.cc-sdk .option-number-item.option-seven.selected,\\n.cc-sdk .option-number-item.option-seven:hover {\\n  background: #856728; }\\n\\n.cc-sdk .option-number-item.option-eight {\\n  background: #f5eb4d; }\\n\\n.cc-sdk .option-number-item.option-eight.selected,\\n.cc-sdk .option-number-item.option-eight:hover {\\n  background: #7f7a28; }\\n\\n.cc-sdk .option-number-item.option-nine {\\n  background: #73ca81; }\\n\\n.cc-sdk .option-number-item.option-nine.selected,\\n.cc-sdk .option-number-item.option-nine:hover {\\n  background: #3b6942; }\\n\\n.cc-sdk .option-number-item.option-ten {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-ten.selected,\\n.cc-sdk .option-number-item.option-ten:hover {\\n  background: #285e40; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-seven {\\n  margin-left: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-nine {\\n  margin-left: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  bottom: -25px;\\n  color: #424242;\\n  font-size: 13px;\\n  left: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 7px;\\n  bottom: -12px; }\\n\\n.cc-sdk .option-right-rating-text {\\n  left: auto;\\n  right: 5px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 36px;\\n  bottom: -12px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box, .cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-right: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one.selected,\\n.cc-sdk .option-smile-box.one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two.selected,\\n.cc-sdk .option-smile-box.two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three.selected,\\n.cc-sdk .option-smile-box.three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four.selected,\\n.cc-sdk .option-smile-box.four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five.selected,\\n.cc-sdk .option-smile-box.five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-left: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center;\\n  background: none; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-right: 68px;\\n  width: 30px;\\n  padding-left: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-right: 0px;\\n  width: auto;\\n  padding-left: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-right: 13px; }\\n\\n.cc-sdk .option-csat span {\\n  display: inline-block;\\n  vertical-align: top;\\n  font-size: 12px;\\n  padding-left: 25px;\\n  position: relative;\\n  top: -10px;\\n  text-align: left;\\n  /* min-height: 32px; */\\n  width: 100%; }\\n\\n.cc-sdk .option-csat .cc-checkbox {\\n  top: 8px; }\\n\\n.cc-sdk .option-csat .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-csat .cc-checkbox.cc-radio label:before {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-right: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 16px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 29px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-left: 74px;\\n    top: 0; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: 19px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: left;\\n    font-size: 15px;\\n    height: 35px;\\n    margin-right: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    bottom: -44px;\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: right; }\\n  .cc-sdk .option-smile-box img, .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; } }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0px; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  left: 0px;\\n  line-height: 100px;\\n  right: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n/*cc-question-container color scale css*/\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-right: 45px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-number-item {\\n  margin-right: 1px;\\n  margin-left: 0px;\\n  float: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n  left: calc(100% - 418px);\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n  right: 0px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  left: 8px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  left: 13px;\\n  width: auto !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  right: 2px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .rating-color {\\n  position: relative; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img {\\n  margin-right: 29px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n  margin-left: 19px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n  padding-right: 25px;\\n  text-align: right;\\n  padding-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 7px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 35px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat {\\n  width: auto;\\n  padding-left: 0px;\\n  margin-right: 13px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n  background-position: calc( 100% - 19px) center;\\n  text-align: right; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    margin-left: 0px;\\n    margin-right: 10px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 10px;\\n    margin-left: 86px !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    left: 17px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 7px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 20px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    padding-right: 0px;\\n    padding-left: 5px;\\n    margin-right: 0;\\n    margin-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-right: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    background-position: calc( 100% - 30px) center; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n    padding-right: 39px;\\n    text-align: right;\\n    padding-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 10px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n    right: 10px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    left: calc(100% - 322px);\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    left: 13px;\\n    width: auto !important; } }\\n\\n@media (max-width: 381px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    left: calc(100% - 258px);\\n    right: initial !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 84px 0 22px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: left;\\n  padding: 5px 20px 5px 5px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  right: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-right: 1px solid #222;\\n  transform: rotate(45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(-135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(calc( -100% - 65px)); }\\n\\n.cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( -100% + 75px)); }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: left;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-left: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger {\\n  padding: 0 22px 0 84px;\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  left: 2px;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option {\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 0px 0 4px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 0 4px 4px 0px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  position: relative;\\n  text-align: left;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before, .cc-sdk .cc-checkbox label:after {\\n  bottom: 0;\\n  content: \\\"\\\";\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  margin-right: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-right-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  left: 4px;\\n  top: -3px;\\n  transform: rotate(-45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-left: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-left: 15px; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li span {\\n  padding: 10px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span {\\n    padding: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: inline-block;\\n    padding-right: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  left: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: left;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.range-slider {\\n  height: 50px;\\n  padding-top: 9px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  top: 51px;\\n  left: 0px;\\n  right: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .range {\\n    width: 100%; } }\\n\\n.cc-sdk input.range.blue::-moz-range-track,\\n.cc-sdk input.range.blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .chart canvas {\\n  left: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .loader {\\n  height: 21px;\\n  left: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 767px) {\\n  .cc-sdk .chart canvas {\\n    margin-left: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n  right: 0;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .loader {\\n  right: 28px;\\n  left: initial; }\\n\\n@media (min-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n    margin-right: 10px;\\n    margin-left: 0; } }\\n\\n/** Utilities **/\\n.show {\\n  display: block !important; }\\n\\n.show-inline {\\n  display: inline-block !important; }\\n\\n.hide {\\n  display: none !important; }\\n\\n.bottom {\\n  bottom: 0; }\\n\\n.right {\\n  right: 0; }\\n\\n.left {\\n  left: 0; }\\n\\n.top {\\n  top: 0; }\\n\\n/* Begin required CSS. */\\n/* End required CSS. */\\n.overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.overlay.glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk .form-control::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 767px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 767px) {\\n  .mobile-hide {\\n    display: none; }\\n  .loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; }\\n  .overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); }\\n  iframe, body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\\n    -webkit-filter: blur(15px);\\n    -moz-filter: blur(15px);\\n    -ms-filter: blur(15px);\\n    -o-filter: blur(15px);\\n    filter: blur(15px); } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n  left: 0;\\n  right: initial;\\n  margin-left: 75px; }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 30px;\\n    left: initial;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0;\\n    right: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(5px);\\n  -moz-transform: translateX(5px);\\n  -ms-transform: translateX(5px);\\n  -o-transform: translateX(5px);\\n  transform: translateX(5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.timer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(-90deg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk svg.timer {\\n  right: 0;\\n  left: initial; }\\n\\n.cc-sdk svg.timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(17);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id=\\\"{{surveyToken}}-survey\\\">\\r\\n\\t<div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\" >\\r\\n\\t\\t<div class=\\\"overlay glass\\\"></div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-left-icon\\\">\\r\\n\\t\\t\\t<span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span>\\r\\n\\t\\t\\t<ul class=\\\"loader\\\">\\r\\n\\t\\t\\t  <li class=\\\"chart\\\" data-percent=\\\"75\\\"></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-right-icon\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg\\\" class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-survey-container\\\">\\r\\n\\t\\t\\t<div class=\\\"cc-survey-content\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"cc-questions-container\\\">\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"submit-icon act-cc-button-next\\\"></div>\\r\\n\\t\\t\\t<div class=\\\"{{location}} progress-bar\\\" id=\\\"progressBar\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"progress-line\\\" id=\\\"progress-line\\\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id=\\\"{{surveyToken}}-welcome\\\">\\r\\n  <div class=\\\"overlay glass\\\"></div>\\r\\n  <div class=\\\"cc-loaderimg hide\\\">\\r\\n    <svg version=\\\"1.1\\\" id=\\\"L9\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\r\\n      viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=\\\"preserve\\\">\\r\\n      <path fill=\\\"red\\\" d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\">\\r\\n        <animateTransform attributeName=\\\"transform\\\" attributeType=\\\"XML\\\" type=\\\"rotate\\\" dur=\\\"1s\\\" from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=\\\"indefinite\\\"\\r\\n        />\\r\\n      </path>\\r\\n    </svg>\\r\\n  </div>\\r\\n  <svg class=\\\"timer\\\">\\r\\n    <circle r=\\\"8\\\" cx=\\\"20\\\" cy=\\\"20\\\" stroke=\\\"black\\\" stroke-width=\\\"0\\\" fill=\\\"red\\\"></circle>\\r\\n  </svg>\\r\\n  <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\">\\r\\n  <div class=\\\"cc-message-box\\\">\\r\\n    <h2 class=\\\"cc-message-box__text\\\">{{question}}</h2>\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"cc-message-box__btn act-cc-survey-start mobile-hide\\\" id=\\\"\\\">{{button}}</a>\\r\\n    <div class=\\\"submit-icon act-cc-survey-start desktop-hide\\\"></div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"singleline\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"number\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n      <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n  \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"multiline\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n        <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <textarea class=\\\"multiline-box form-control\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Share your thoughts...\\\" ></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"checkbox\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-big-list-container\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\" >\\r\\n      {{options}}\\r\\n     \\r\\n      <!-- <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Troubleshoot\\\" name=\\\"\\\" id=\\\"check-two\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-two\\\" >\\r\\n          </label>\\r\\n        </div>\\r\\n            <span><label for=\\\"check-two\\\">Troubleshoot an error</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Understand\\\" name=\\\"\\\" id=\\\"check-three\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-three\\\">\\r\\n          </label>\\r\\n        </div>\\r\\n            <span><label  for=\\\"check-three\\\">Understand a product</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Buy a\\\" name=\\\"\\\" id=\\\"check-four\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-four\\\"></label>\\r\\n        </div>\\r\\n            <span><label for=\\\"check-four\\\">Buy a product</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Contact\\\" name=\\\"\\\" id=\\\"check-five\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-five\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"check-five\\\">Contact customer care</label></span>\\r\\n      </li> -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=\\\"radio\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n           {{options}}\\r\\n\\r\\n      <!-- <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\" value=\\\"yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-yes\\\">Yes</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-no\\\" value=\\\"yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-no\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-no\\\">No</label></span>\\r\\n      </li> -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--more-option\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"radioMore\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-one\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-one\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-one\\\">Learn more about a product</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-two\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-two\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-two\\\">Troubleshoot an error</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-three\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-three\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-three\\\">Understand a product</label></span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"radioImage\\\" data-id=\\\"{{questionId}}\\\" >\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n    {{options}}\\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=\\\"scale\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      {{optionsRange}}\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\">\\r\\n        <img src=\\\"{{mobileImageUrl}}\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n        <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"0\\\" title=\\\"0\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"83,193,62,228,38,212,23,193,57,167\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"54,165,21,189,11,173,4,154,2,140,43,134\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"43,131,2,135,1,118,5,93,8,83,45,97\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"48,92,10,78,17,61,28,44,39,32,66,66\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"70,61,42,30,55,20,70,14,91,5,101,45\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"105,44,92,5,113,2,134,3,147,5,139,46\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"141,46,150,6,169,11,184,19,200,30,172,63\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"175,63,202,34,218,48,227,66,232,78,194,93\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"196,97,233,81,239,103,240,118,240,135,199,130\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"199,135,240,140,236,159,229,175,221,189,187,167\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"183,169,217,191,204,212,178,229,158,192\\\" shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\">\\r\\n        <img src=\\\"{{mobileImageUrl}}\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map2\\\" />\\r\\n        <map name=\\\"Map2\\\" id=\\\"Map2\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"67,180,40,210,26,195,15,176,11,169,47,152\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"48,149,9,163,2,140,1,124,3,110,45,115\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"44,110,4,105,8,79,17,67,22,57,58,79\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"58,76,24,54,33,39,48,29,65,18,85,54\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"87,51,68,15,85,7,106,3,120,3,122,45\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"123,42,123,0,141,2,163,8,176,14,157,52\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"159,53,180,16,201,30,212,44,220,54,186,77\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"188,80,222,55,229,69,236,83,241,108,199,111\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"200,116,239,112,241,128,240,146,234,165,196,150\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,153,233,168,225,187,212,202,202,212,175,181\\\" shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <span class=\\\"clearfix\\\"></span>\\r\\n      <span class=\\\"option-left-rating-text {{optionLeftExtraClass}}\\\" style=\\\"max-width:maxWidth;\\\" >{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text {{optionRightExtraClass}}\\\" style=\\\"max-width:maxWidth;\\\" >{{rightLabel}}</span>\\r\\n      <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n   {{style}}\\r\\n  \";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n      <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n      <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n      <div class=\\\"cc-question-container__list\\\">\\r\\n        <span class=\\\"option-csat option-smile-box one\\\" data-rating=\\\"1\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Completely Agree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box two\\\" data-rating=\\\"2\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Somewhat Agree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box three\\\" data-rating=\\\"3\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Agree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box four\\\" data-rating=\\\"4\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Somewhat Disagree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box five\\\" data-rating=\\\"5\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Completely Disagree</span>\\r\\n      </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n      <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n      <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n      <div class=\\\"cc-question-container__list\\\">\\r\\n        <span class=\\\"option-csat option-smile-box one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Extremely Satisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Very Satisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Satisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Somewhat Dissatisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Very Dissatisfied</span>\\r\\n      </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"nps\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div class=\\\"cc-options-container\\\">\\r\\n          <span data-rating=\\\"0\\\" class=\\\"option-number-item mobile-hide option-zero\\\">0</span>\\r\\n          <span data-rating=\\\"1\\\" class=\\\"option-number-item mobile-hide option-one\\\">1</span>\\r\\n          <span data-rating=\\\"2\\\" class=\\\"option-number-item mobile-hide option-two\\\">2</span>\\r\\n          <span data-rating=\\\"3\\\" class=\\\"option-number-item mobile-hide option-three\\\">3</span>\\r\\n          <span data-rating=\\\"4\\\" class=\\\"option-number-item mobile-hide option-four\\\">4</span>\\r\\n          <span data-rating=\\\"5\\\" class=\\\"option-number-item mobile-hide option-five\\\">5</span>\\r\\n          <span data-rating=\\\"6\\\" class=\\\"option-number-item mobile-hide option-six\\\">6</span>\\r\\n          <span data-rating=\\\"7\\\" class=\\\"option-number-item mobile-hide option-seven\\\">7</span>\\r\\n          <span data-rating=\\\"8\\\" class=\\\"option-number-item mobile-hide option-eight\\\">8</span>\\r\\n          <span data-rating=\\\"9\\\" class=\\\"option-number-item mobile-hide option-nine\\\">9</span>\\r\\n          <span data-rating=\\\"10\\\" class=\\\"option-number-item mobile-hide option-ten\\\">10</span>\\r\\n          <div class=\\\"circle-image desktop-hide\\\">\\r\\n            <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/circle.svg\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n            <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"86,199,61,177,25,201,38,219,52,230,66,238\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"59,173,22,198,12,180,5,160,4,146,44,138\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"44,134,49,101,8,84,3,98,0,116,2,141\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"49,97,71,68,42,33,25,54,14,71,10,81\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"74,65,106,47,94,5,70,14,46,31\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"144,47,154,4,135,1,114,1,98,4,108,48\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"149,48,157,5,183,15,209,30,180,65\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"183,67,211,34,231,56,243,79,204,97\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"203,100,245,85,251,106,252,124,251,141,207,135\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"208,140,251,146,245,169,231,197,194,172\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,179,229,201,218,218,202,230,185,238,166,200\\\" shape=\\\"poly\\\">\\r\\n            </map>\\r\\n            <!-- <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"49,192,91,229,111,191,83,169\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"29,139,47,189,83,166,70,135\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"35,83,29,136,71,131,75,96\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"36,79,67,35,95,66,75,94\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"69,32,117,7,127,49,97,64\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"120,7,175,7,165,48,131,48\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"178,7,168,49,197,64,225,32\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"200,67,220,95,260,80,229,35\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"221,98,224,131,266,136,259,83\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"224,135,266,139,248,191,212,167\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"184,191,203,230,246,194,211,169\\\" />\\r\\n            </map> -->\\r\\n            <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n        </div>    \\r\\n        <span class=\\\"clearfix\\\"></span>\\r\\n        <span class=\\\"option-left-rating-text mobile-hide\\\">Not at all likely</span>\\r\\n        <span class=\\\"option-right-rating-text mobile-hide\\\">Very likely</span>\\r\\n        <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n      </div>\\r\\n    \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select sources\\\" placeholder=\\\"Select\\\">\\r\\n          {{options}}\\r\\n        </select>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select sources\\\" placeholder=\\\"Select\\\" data-type=\\\"multiple\\\">\\r\\n          {{options}}\\r\\n        </select>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <span class=\\\"option-smile-box one\\\" data-rating=\\\"1\\\"></span>\\r\\n      <span class=\\\"option-smile-box two\\\" data-rating=\\\"2\\\"></span>\\r\\n      <span class=\\\"option-smile-box three\\\" data-rating=\\\"3\\\"></span>\\r\\n      <span class=\\\"option-smile-box four\\\" data-rating=\\\"4\\\"></span>\\r\\n      <span class=\\\"option-smile-box five\\\" data-rating=\\\"5\\\"></span>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=\\\"max-width:200px\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=\\\"max-width:200px\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n        <span class=\\\"option-smile-box five\\\" data-rating=\\\"5\\\"></span>\\r\\n        <span class=\\\"option-smile-box four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box two\\\" data-rating=\\\"2\\\"></span>\\r\\n      <span class=\\\"option-smile-box one\\\" data-rating=\\\"1\\\"></span>\\r\\n      <span class=\\\"option-right-rating-text\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-left-rating-text\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"star\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"1\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"2\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"3\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"4\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"5\\\"></span>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=\\\"max-width:200px;\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=\\\"max-width:200px;\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"slider\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n        <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n        <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n        \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content rating-color range-slider\\\" id=\\\"{{questionId}}\\\">\\r\\n        <div class=\\\"cc-question-container__slider\\\">\\r\\n            <input type=\\\"range\\\" name=\\\"\\\" value=\\\"{{min}}\\\" min=\\\"{{min}}\\\" max=\\\"{{max}}\\\" class=\\\"range blue\\\">\\r\\n            <span class=\\\"option-left-rating-text\\\">{{minLabel}}{{min}}</span>\\r\\n            <span class=\\\"option-right-rating-text\\\">{{maxLabel}}{{max}}</span>\\r\\n            <span class=\\\"slider-tip act-slider-tip\\\"></span>\\r\\n            <!-- <span class=\\\"slider-tip act-slider-tip\\\">{{min}}</span> -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-img-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label class=\\\"ui checkbox\\\" for=\\\"{{qId}}-img-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span><label for=\\\"{{qId}}-img-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\"><img src=\\\"{{image}}\\\" /> {{label}}</label></span>\\r\\n</li>\\r\\n\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label class=\\\"ui checkbox\\\" for=\\\"{{qId}}-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span><label for=\\\"{{qId}}-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label></span>\\r\\n</li>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n    <div class=\\\"cc-checkbox\\\">\\r\\n      <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n      <label class=\\\"ui checkbox\\\" for=\\\"check-{{labelFor}}\\\">\\r\\n      </label>\\r\\n    </div>\\r\\n    <span><label for=\\\"check-{{labelFor}}\\\">{{label}}</label></span>\\r\\n  </li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n    <div class=\\\"cc-checkbox\\\">\\r\\n      <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n      <label class=\\\"ui checkbox\\\" for=\\\"check-{{labelFor}}\\\">\\r\\n      </label>\\r\\n    </div>\\r\\n    <span><label for=\\\"check-{{labelFor}}\\\"><img src=\\\"{{image}}\\\" /> {{label}}</label></span>\\r\\n  </li>  \\r\\n\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=\\\"cc-thankyou-container\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>{{question}}</p>\\r\\n    <p class=\\\"cc-thankyou-powered\\\"><span class=\\\"cc-thankyou-logo\\\"></span>Delight powered by Cloudcherry</p>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <!-- <button>{{button}}</button> -->\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n      <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\"></span>Select language</p>\\r\\n      <span class=\\\"cc-question-container__required\\\">* Mandatory</span>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n      <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n      <div class=\\\"cc-select-wrapper\\\">\\r\\n        <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select sources\\\" placeholder=\\\"Select\\\">\\r\\n            {{options}}\\r\\n          </select>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionalText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionalText_1 = question.text.split(':');\r\n            if (question.setName && question.text.includes(\":\")) {\r\n                conditionalText_1 = conditionalText_1[0] + ': <br><span class=\"text-normal\">' + conditionalText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionalText_1 = conditionalText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (ConditionalTextFilter.isAnd(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalTextFilter.isOr(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        var groupTitle = void 0;\r\n                        if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                            groupTitle = conditionalText.split(':')[0];\r\n                            conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n                        }\r\n                        else {\r\n                            conditionalText = fOption.text;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionalText;\r\n    };\r\n    ConditionalTextFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isNumberCheck = function (filterQuestion) {\r\n        if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"gt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"eq\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                        iFoundAll = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        iFoundAll = false;\r\n                        break;\r\n                    }\r\n            }\r\n            if (iFoundAll)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(8);\r\nvar Theme_1 = __webpack_require__(45);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar Slider_1 = __webpack_require__(46);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        console.log(self, 'before event');\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            console.log('start handler', self);\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                console.log(onSurveyClickEvent, 'custom click event');\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        console.log('start survey event', startSurvey);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (typeof this.ccsdk.surveyData.translated == undefined || Object.keys(this.ccsdk.surveyData.translated).length < 1) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    console.log('test regex text', regex.test(this.qResponse.text));\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            window.ccsdkDebug ? console.log('previous answer', this.ccsdk.survey.answers[this.currentQuestionId]) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        window.ccsdkDebug ? console.log('next question q response end', this.qResponse) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        window.ccsdkDebug ? console.log(this.qIndex) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        console.debug();\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"language select - previous listeners exists\") : '';\r\n            this.removePrevListener('.cc-language-select');\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        console.log(this.ccsdk);\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"scale question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('scale question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('scale previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"nps question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            console.log(qId);\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n                console.log(c, 'control');\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            window.ccsdkDebug ? console.log('Checkbox selected', rating) : '';\r\n            console.log('Checkbox selected', rating);\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        console.log('singleline qResponse', self.qResponse);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = '\\\r\n\t\t.cc-sdk #progressBar{ \\\r\n\t\t\tbackground : ' + this.brandColorDark + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk #progress-line{ \\\r\n\t\t\tbackground: ' + brandColor + ' \\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\r\n\t\t\tbackground:' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.overlay.glass{\\\r\n\t\t\tbackground-color:' + this.util.hexToRGB(brandColor, .5) + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\r\n\t\t\tborder-color: #fff;\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\\\r\n\t\t\tbackground: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .form-control:focus {\\\r\n\t\t\tborder-color: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-message-box__btn{\\\r\n\t\t\tbackground: ' + brandColor + ';\\\r\n\t\t\tcolor:#fff;\\\r\n\t\t}\\\r\n\t\thtml[dir=\"rtl\"] .cc-sdk .submit-icon{\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-question-container__required-label{\\\r\n\t\t\tcolor: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\\\r\n\t\t\tbackground: ' + brandColor + ' !important;\\\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   background: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\r\n\t\t   }\\\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\\\r\n\t\t\tbackground: ' + brandColor + ' !important;\\\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tbackground: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\r\n\t\t}\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\\\r\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\\\r\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk svg.timer circle {\\\r\n\t\t\tanimation: countdown ' + time + 's linear 1 forwards;\\\r\n\t\t\tstroke: ' + brandColor + ';\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\\r\n\t\t\t\tbackground-color: ' + brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\\r\n\t\t\t\tbackground-color: ' + brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\\\r\n\t\t\t\tborder: solid 1px ' + brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t @media (max-width: 767px){\\\r\n\t \t\t\t.overlay.glass{\\\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\r\n\t \t\t\tbackground-image:none;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container{\\\r\n\t\t\t\t\tbackground-color : transparent;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .overlay.glass{\\\r\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB(brandColor, .9) + ';\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\\r\n\t\t\t\t\tcolor:#fff;\\\r\n\t\t\t\t}\\\r\n\t\t';\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\r\n        // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\r\n        // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\r\n        // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\r\n        // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\r\n        // } else {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\r\n        // }\r\n        // if(parseInt(this.rangeTip.style.left) <= 50 ){\r\n        //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\r\n        // }else{\r\n        //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\r\n        // }\r\n        // console.log(this.rangeTip.style.left);\r\n        // if(this.timeout){\r\n        //   clearTimeout(this.timeout);\r\n        // }\r\n        // this.timeout = setTimeout(function(){\r\n        //   self.rangeTip.style.display = 'none' ;\r\n        // },300)\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(49);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d9b8044f5714bb60269f","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || p.msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && opt.includes( ';' ) && opt.includes( '.' );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        optHtml = optHtml.replace( /{{label}}/g, arr[ i ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, arr[ i ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, arr[ i ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText(surveyHandler : any, question : any) {\r\n        if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if( question.translated != null && \r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    let qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                } else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            } else {\r\n                if(question.text != null){\r\n                    let qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText ;\r\n                }else{\r\n                    return question.text == null ? '':question.text;\r\n                }\r\n            }\r\n        } else {\r\n            if (question.text != null) {\r\n                let qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            } else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateMessages(surveyHandler : any, type : string) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    } else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption(surveyHandler: any, question: any, option: any){\r\n        let effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        // console.log(effectiveMultiselect);\r\n        if ( (effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0 ){\r\n            for(let i=0; i < question.multiSelect.length; i++){\r\n                let opt: any = question.multiSelect[i].split(';')\r\n                if(opt[0] == option ){\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }else{\r\n    \r\n                }\r\n            }\r\n        }\r\n        return option;\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/MICROSURVEY\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n}\r\n\r\nexport { Config };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      let res: any = xhr.response ? JSON.parse( xhr.response ) : '';\r\n      successcb( res );\r\n    } else {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    errorcb( {\r\n      status: ( this as any ).status,\r\n      statusText: xhr.statusText\r\n    } );\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json; charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), { \"Content-Type\": \"application/json; charset=utf-8\" }, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","import '../css/main.scss';\r\nimport  * as QuestionSurvey from '../templates/Survey.html';\r\nimport  * as QuestionStart from '../templates/QuestionStart.html';\r\nimport  * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport  * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport  * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport  * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport  * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport  * as QuestionRadioMore from '../templates/QuestionRadioMore.html';\r\nimport  * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport  * as QuestionScale from '../templates/QuestionScale.html';\r\nimport  * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport  * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport  * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport  * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport  * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport  * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport  * as QuestionStar from '../templates/QuestionStar.html';\r\nimport  * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport  * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport  * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport  * as ThankYou from '../templates/ThankYou.html';\r\n\r\nimport  * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey : \"\",\r\n  question_start : \"\",\r\n  question_text : \"\",\r\n  question_number: \"\",\r\n  question_scale : \"\",\r\n  question_csat_agreement_5 : \"\",\r\n  question_csat_satisfaction_5 : \"\",\r\n  question_nps : \"\",\r\n  question_multi_line_text : \"\",\r\n  question_multi_select : \"\",\r\n  question_radio_more : \"\",\r\n  question_radio : \"\",\r\n  question_radio_image : \"\",\r\n  question_checkbox : \"\",\r\n  question_select : \"\",\r\n  question_smile_5: \"\",\r\n  question_smile_5_inverted : \"\",\r\n  question_star_5 : \"\",\r\n  question_slider : \"\",\r\n  option_radio_image: \"\",\r\n  option_radio : \"\",\r\n  option_checkbox: \"\",\r\n  option_checkbox_image : \"\",\r\n  thankyou : \"\",\r\n  language_selector : \"\"\r\n\r\n};\r\n\r\n\r\ntemplates.question_survey = QuestionSurvey;\r\n\r\ntemplates.question_start = QuestionStart;\r\n\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number= QuestionNumber;\r\n\r\n\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\n\r\ntemplates.question_slider = QuestionSlider;\r\n\r\n\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\n\r\n\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\n\r\n\r\ntemplates.question_select = QuestionSelect;\r\n\r\n\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\n\r\ntemplates.question_star_5 = QuestionStar;\r\n\r\ntemplates.question_checkbox = QuestionCheckbox;\r\n\r\ntemplates.question_radio = QuestionRadio;\r\n\r\ntemplates.question_radio_more = QuestionRadioMore;\r\n\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\n\r\ntemplates.thankyou = ThankYou;\r\n\r\ntemplates.language_selector = LanguageSelector;\r\n\r\n\r\nexport {templates};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","import { DomUtilities } from \"./DomUtilities\";\r\nclass Select{\r\n  util : DomUtilities;\r\n  $body : any ;\r\n  $html : any ;\r\n  qId : any ;\r\n  select : any;\r\n  type : string;\r\n  listeners : any = [];\r\n  constructor(qId : string){\r\n    this.qId = qId;\r\n\t}\r\n  init(qId : string){\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    this.$html = document.querySelectorAll(\"html\")[0];\r\n    var select = document.querySelectorAll(\"#\"+qId+\" .cc-select\");\r\n\r\n  \t\t// var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n      // this.util.removeAll(divSelect);\r\n      let parent = this;\r\n\r\n      //Assumption: iterating over array but there will always be one select at a time\r\n      this.type = select[0].getAttribute('data-type');\r\n  \t\tArray.prototype.forEach.call(select, function(el, i){\r\n  \t\t  var self = el;\r\n  \t\t\tvar $selectOptions = document.querySelectorAll(\"#\"+qId+\" .cc-select-options\");\r\n  \t\t  var classes = self.getAttribute(\"class\"),\r\n  \t\t      id      = self.getAttribute(\"id\"),\r\n  \t\t      name    = self.getAttribute(\"name\");\r\n  \t\t  var template =  '<div class=\"' + classes + '\">';\r\n  \t\t      template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n  \t\t      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n  \t\t\tvar options = self.querySelectorAll(\"option\");\r\n  \t\t\t\tArray.prototype.forEach.call(options, function(el, i){\r\n  \t\t        template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML+ '</span>';\r\n  \t\t      });\r\n  \t\t  template += '</div></div></div>';\r\n  \t\t  parent.util.addClass(self, 'hide');\r\n  \t\t  self.insertAdjacentHTML('afterend',template);\r\n  \t\t});\r\n      this.setupListeners();\r\n  }\r\n\r\n  \r\n  setupListeners(){\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener('click',  \"#\"+qId+\" .cc-select-option\", function(e){      \r\n    // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      (window as any).ccsdkDebug?console.log('click cc-select-option',this):'';\r\n      let selfOption = this;\r\n      let value = this.getAttribute('data-value');\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      (window as any).ccsdkDebug?console.log(select):'';\r\n      (window as any).ccsdkDebug?console.log(selectOptions):'';\r\n      (window as any).ccsdkDebug?console.log(selectWrapper):'';\r\n      //select all cc-select-option and remove class selection\r\n      // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\r\n      // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\r\n\r\n      self.util.addClass(this,\"selection\");\r\n      let selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\r\n      (window as any).ccsdkDebug?console.log('select type', self.type):'';\r\n      if(self.type !== 'multiple'){\r\n        (window as any).ccsdkDebug?console.log('select type', self.type):'';\r\n        selectedOptionText = selfOption.textContent;\r\n        (window as any).ccsdkDebug?console.log('selected option', selectedOptionText):'';\r\n        self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n        select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n        self.util.addClass(self, 'selection');\r\n      \r\n      }else{\r\n        (window as any).ccsdkDebug?console.log(selectedOptionText):'' ;\r\n        if(selectedOptionText != 'Select'){\r\n          if(selectedOptionText.indexOf(selfOption.textContent) == 0){\r\n            selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '') ;   \r\n            selectedOptionText = selectedOptionText.replace(selfOption.textContent, '') ;   \r\n            self.util.removeClass(this,\"selection\");\r\n          }else if(selectedOptionText.indexOf(selfOption.textContent) > 0){\r\n            selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '') ;    \r\n            self.util.removeClass(this,\"selection\");\r\n          }else{\r\n            selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\r\n          }\r\n        \r\n        }else{\r\n          (window as any).ccsdkDebug?console.log(selfOption.textContent):'';\r\n          selectedOptionText = selfOption.textContent;\r\n        }\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\r\n        \r\n        if(selectedOptionText.length < 1){\r\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\r\n        }else{\r\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n        \r\n      }\r\n\r\n    });\r\n    this.listeners.push(ref2);    \r\n    ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n    let ref = this.util.initListener('click',  \"#\"+qId+\" .cc-select-trigger\", function(e){\r\n      self.$html.addEventListener('click',function(e){\r\n        if(!self.util.hasClass(e.target, 'cc-select-option')){\r\n          self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n          self.$html.removeEventListener('click', function(){\r\n          });\r\n        }\r\n      })\r\n      var ccSelect = this.parentNode;\r\n      (window as any).ccsdkDebug?console.log('click cc-select-trigger',ccSelect):'';\r\n      self.util.toggleClass(ccSelect, \"opened\");\r\n      e.stopPropagation();\r\n    });\r\n    this.listeners.push(ref);    \r\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n  \r\n  }\r\n\r\n  destroyListeners(){\r\n    for(let listener of this.listeners) {\r\n        this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue(value : string){\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select :any;\r\n\r\n    select =  document.querySelectorAll(\"#\"+qId+\" select\")[0];\r\n    select.value = value;\r\n    document.querySelectorAll(\"#\"+qId+\" .cc-select-trigger\")[0].textContent = value;\r\n  }\r\n\r\n  selectOption(el:any){\r\n    this.util.addClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions(csv : string){\r\n    let self = this;\r\n    if(csv){\r\n      let allOptions = csv.split(',');\r\n      for(let option of allOptions){\r\n        let domOptions = document.querySelectorAll(\"#\"+self.qId+\" .cc-select-option\");\r\n        Array.prototype.forEach.call(domOptions, function(el, i){\r\n          if(el.getAttribute('data-value') == option){\r\n            self.selectOption(el);\r\n          }\r\n        });\r\n          \r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nexport { Select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\n\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( ConditionalFlowFilter.isAnd( aFilterByQuestion ) ) {\r\n              if ( ConditionalFlowFilter.doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( ConditionalFlowFilter.isOr( aFilterByQuestion ) ) {\r\n              if ( ConditionalFlowFilter.doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( !surveyHandler.getSurveyQuestions().includes( aQuestion ) ) {\r\n              surveyHandler.getSurveyQuestions().push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyHandler.getSurveyQuestions().includes( aQuestion ) ) {\r\n              aRemovedCount++;\r\n              surveyHandler.getSurveyQuestions().splice( surveyHandler.getSurveyQuestions().indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( ConditionalFlowFilter.questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n\r\n  private static questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  private static isAnd( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\" ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isOr( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\" ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isNumberCheck( filterQuestion: any ): boolean {\r\n    if ( !filterQuestion ) {\r\n      return false;\r\n    }\r\n    if ( filterQuestion.answerCheck[ 0 ] === \"lt\" || filterQuestion.answerCheck[ 0 ] == \"gt\" || filterQuestion.answerCheck[ 0 ] === \"eq\" ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n   *\r\n   * @param filterQuestion\r\n   * @return\r\n   */\r\n  private static doesSatisfy( surveyHandler: any, filterQuestion: any ): boolean {\r\n    if ( ConditionalFlowFilter.isNumberCheck( filterQuestion ) ) {\r\n      if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"lt\" ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput < filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"gt\" ) ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput > filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"eq\" ) ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput == filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      }\r\n    } else {\r\n      let iFoundAll = false;\r\n      let question = surveyHandler.getQuestionById( filterQuestion.questionId );\r\n      let questionAnswer = surveyHandler.getAnswerForQuestionId( filterQuestion.questionId );\r\n      let questionAnswerText = questionAnswer != null && questionAnswer.textInput != null ? questionAnswer.textInput : '';\r\n      if ( !questionAnswer ) {\r\n        return false;\r\n      }\r\n      for ( let aAnswer of filterQuestion.answerCheck ) {\r\n        if ( question.multiSelect instanceof Array ) {\r\n          aAnswer = LanguageTextFilter.translateMultiSelectOption( surveyHandler, question, aAnswer );\r\n        }\r\n        //   console.log('hello', question.multiSelect instanceof Array,surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n        console.log( questionAnswerText, aAnswer );\r\n\r\n        if ( question.displayType === 'MultiSelect' ) {\r\n          let selectedOptions = questionAnswer.textInput.split( ',' );\r\n          if ( selectedOptions.indexOf( aAnswer ) !== -1 ) {\r\n            iFoundAll = true;\r\n          }\r\n        } else if ( questionAnswerText === aAnswer ) {\r\n          iFoundAll = true;\r\n        }\r\n      }\r\n\r\n      return iFoundAll;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { Survey } from \"./Survey\";\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n\r\n\r\nlet localCCSDK = {\r\n  init : init,\r\n  destroy : destroy,\r\n  trigger : trigger,\r\n  hide : hide,\r\n  show : show,\r\n  on : on,\r\n  prefill : prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote : prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n(window as any).globalSurveyRunning = false;\r\n(window as any).ccsdkDebug = false;\r\n(window as any).isMobile = window.innerWidth <= 768 ? true:false;\r\n\r\nif(typeof (window as any).CCSDK !== 'undefined') {\r\n  var queue = (window as any).CCSDK.q;\r\n  (window as any).CCSDK = function()   {\r\n      if(arguments && arguments.length == 0)   {\r\n          var time = new Date();\r\n          // console.log(this.time);\r\n      } else {\r\n          (window as any).ccsdkDebug?console.log(arguments):'';\r\n          var args = (Array as any).from(arguments);\r\n          // console.log(arguments);\r\n          //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n          var functionName = args.splice(0,1)[0];\r\n        (window as any).ccsdkDebug ?console.log(functionName):'';\r\n          return localCCSDK[functionName].apply(this, args);\r\n      }\r\n  };\r\n  if(queue){\r\n    for(var q of queue) {\r\n        var args = (Array as any).from(q);\r\n        var functionName = args.splice(0, 1)[0];\r\n        localCCSDK[functionName].apply(this, args);\r\n    }\r\n  }\r\n  let eventCCReady : Event = document.createEvent('Event');\r\n  eventCCReady.initEvent('ccready', true, true);\r\n  document.dispatchEvent(eventCCReady);\r\n\r\n}\r\n\r\nexport function init(surveyToken : any) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  // console.log(arguments[arguments.length - 1]);\r\n  let config = (typeof arguments[1] === 'object')? arguments[1] : {};\r\n  //create survey instance\r\n  if(typeof Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie.get(surveyToken + '-finish')) {\r\n    return;\r\n  }\r\n  if(typeof config.isActive !== 'undefined' && config.isActive) {\r\n    SurveyManager.surveyInstances[surveyToken] = (SurveyManager.surveyInstances[surveyToken]) ? SurveyManager.surveyInstances[surveyToken] : new Survey(surveyToken, config);\r\n    return SurveyManager.surveyInstances[surveyToken];\r\n  } else {\r\n    //do nothing\r\n  }\r\n  \r\n}\r\n\r\nexport function destroy(surveyToken : string){\r\n  //remove from trigger manager, delete instance.\r\n  SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[surveyToken].destroy();\r\n  delete SurveyManager.surveyInstances[surveyToken];\r\n}\r\n//\r\nexport function trigger(surveyToken : string, type : string, target : string) {\r\n  (window as any).ccsdkDebug ?console.log(SurveyManager.surveyInstances):'';\r\n  if(typeof SurveyManager.surveyInstances[surveyToken] != 'undefined'){\r\n    SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on(surveyToken : string, type : string, callback : any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n  }\r\n}\r\n\r\nexport function prefill(surveyToken : string, questionId : string, answerObject : any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n  }\r\n}\r\n\r\nexport function prefillByTag(surveyToken : string, questionTag : string, answer : any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') { \r\n    SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n  }\r\n}\r\n\r\nexport function prefillByNote(surveyToken : string, questionNote : string, answer : any){\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n  }\r\n}\r\n\r\nexport function show(surveyToken : string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].show();\r\n  }\r\n}\r\n\r\nexport function hide(surveyToken : string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[surveyToken].destroy();\r\n    SurveyManager.surveyInstances[surveyToken].hide();\r\n  }\r\n}\r\n\r\n//on exit detect\r\n\r\n\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\n\r\nimport { templates } from \"./helpers/templates\"\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: number;\r\n  requester = new RequestHelper();\r\n\r\n  constructor( surveyToken: string, config: CCSDKConfig ) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    if ( typeof this.config.textDirection === 'undefined' ) {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n    // this.setupSurvey();\r\n    this.triggers = new Triggers( this );\r\n    TriggerManager.addSurvey( this.surveyToken, this.triggers );\r\n    this.survey = new SurveyHandler( this );\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor ) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger( document, this.surveyToken + '-ready', { 'survey': this } );\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger( \"click\", this.config.cssSelector );\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers( this.config );\r\n    // this.login(function() {\r\n    //on login\r\n    // });\r\n  }\r\n\r\n  login( cb ) {\r\n    let loginURL = Config.API_URL + Config.POST_LOGIN_TOKEN;\r\n    let self = this;\r\n    let successcb = function ( logindata ) {\r\n      self.debug ? console.log( logindata ) : '';\r\n      self.loginData = logindata;\r\n      if ( self.isThrottled ) {\r\n        self.getSurveyThrottlingLogic( cb );\r\n      } else {\r\n        cb();\r\n        return;\r\n      }\r\n    }\r\n\r\n    RequestHelper.post( loginURL,\r\n      {\r\n        grant_type: Constants.GRANT_TYPE,\r\n        username: this.config.username,\r\n        password: this.config.password\r\n      }\r\n      , successcb, null );\r\n\r\n    this.debug ? console.log( \"login\" ) : '';\r\n  }\r\n\r\n  getSurveyThrottlingLogic( cb ) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace( '{location}', this.config.location );\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function ( data ) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling( cb );\r\n    };\r\n\r\n    RequestHelper.getWithHeaders( getThrottleUrl, headers, successcb, null );\r\n  }\r\n\r\n  checkThrottling( cb ) {\r\n    if ( this.thorttlingLogic != null ) {\r\n      if ( this.thorttlingLogic.inputIds == null ) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push( this.thorttlingLogic[ this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] );\r\n      if ( this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null ) {\r\n        this.thorttlingLogic.logics[ 0 ].filter.location = [];\r\n        this.thorttlingLogic.logics[ 0 ].filter.location.push( this.config.location );\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function ( throttleResponse ) {\r\n\r\n      if ( typeof throttleResponse[ 0 ][ self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] && throttleResponse[ 0 ].value ) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders( postThrottleUrl, this.thorttlingLogic, headers, successcb, null );\r\n  }\r\n\r\n  addThrottlingEntries( isOpen: boolean ) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = ( throttleResponse ) => {\r\n      this.debug ? console.log( throttleResponse ) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders( addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null );\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let htmlDir: string = document.getElementsByTagName( 'html' )[ 0 ].getAttribute( 'dir' );\r\n    let direction: string = ( this.config && this.config.textDirection ) ?\r\n      this.config.textDirection : ( htmlDir ? htmlDir : \"ltr\" );\r\n    document.getElementsByTagName( 'html' )[ 0 ].setAttribute( 'dir', direction );\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch ( this.survey.surveyDisplay.position ) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search( /bottom/gi ) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function ( surveyData ) {\r\n      self.debug ? console.log( surveyData ) : '';\r\n      // console.log(surveyData);\r\n\r\n      self.surveyData = surveyData;\r\n      //copy data.\r\n      let event = new CustomEvent( Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse( JSON.stringify( surveyData ) ) } );\r\n      document.dispatchEvent( event );\r\n      self.dom.hideLoader();\r\n      self.initSurveyQuestions();\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions( successcb, errorcb );\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey( this );\r\n    self.dom.setTheme( self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0 );\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n\r\n    self.survey.displayWelcomeQuestion();\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey( this.surveyData );\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent( Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyStartEvent );\r\n  }\r\n\r\n  public on( type: string, callback: any ) {\r\n    document.addEventListener( type + \"-\" + this.surveyToken, function ( e: any ) {\r\n      callback( e.detail );\r\n    } );\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill( questionId: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect( questionId, answer );\r\n  }\r\n\r\n  public fillPrefill( questionTag: string, answer: any ) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill( questionTag, answer );\r\n  }\r\n\r\n  public fillPrefillByNote( questionNote: string, answer: any ) {\r\n    this.survey.fillPrefillByNote( questionNote, answer );\r\n  }\r\n\r\n  public trigger( type: string, target: any ) {\r\n    let self: Survey = this;\r\n    switch ( type ) {\r\n      case 'click':\r\n        this.triggers.enableClickTrigger( target, function () {\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey( self.surveyToken );\r\n\r\n        } );\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt( target );\r\n        this.triggers.enablePageCountTrigger( count );\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt( target );\r\n        this.triggers.enableSiteCountTrigger( count2 );\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger( target );\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger( target );\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger( target );\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger( parseInt( target ) );\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey( self.surveyToken );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\r\n// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from './helpers/dom/Select';\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\r\n\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor( ccsdk ) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      'position': '',\r\n      'surveyPosition': '',\r\n      'welcomePopupAnimation': '',\r\n      'surveyPopupAnimation': '',\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = ( e: any ) => {\r\n      //perform final post\r\n      this.finalPost( null, null );\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : ( this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You' );\r\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n      thankyouHtml = thankyouHtml.replace( \"{{question}}\", thankyouText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{button}}\", startText );\r\n      this.ccsdk.dom.replaceInQuestionsContainer( thankyouHtml );\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get( \"#cc-thankyou-container\" );\r\n      ( window as any ).ccsdkDebug ? console.log( thankyouContainer ) : '';\r\n      this.util.addClass( thankyouContainer[ 0 ], 'show-thankyou-slide' );\r\n      // let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyEndEvent);\r\n      //set done cookie for 30 days.\r\n      Cookie.set( this.surveyToken + '-finish', 'true', 30, '/' );\r\n      setTimeout( () => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000 );\r\n    }\r\n\r\n    this.destroySurveyCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      self.destroy();\r\n    }\r\n\r\n    this.acceptAnswersCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n      switch ( data.type ) {\r\n        case 'scale':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'nps':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radio':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radioImage':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'smile':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'star':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'multiline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'singleline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'number':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'checkbox':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'select':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'slider':\r\n          response.text = data.data.text;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchQuestions( successcb, errorcb ) {\r\n    this.randomNumber = parseInt( ( String )( Math.random() * 1000 ) );\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace( \"{token}\", \"\" + this.surveyToken );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get( surveyUrl, successcb, errorcb );\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer( questionId ) {\r\n    delete this.answers[ questionId ];\r\n    delete this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  attachSurvey( surveyData: any ) {\r\n    this.surveyData = surveyData;\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    surveyHtml = surveyHtml.replace( \"{{animation}}\", this.surveyDisplay.surveyPopupAnimation );\r\n    surveyHtml = surveyHtml.replace( /{{location}}/g, this.surveyDisplay.surveyPosition );\r\n    this.ccsdk.dom.appendInBody( surveyHtml );\r\n  }\r\n\r\n  displayQuestionSelector() {\r\n\r\n  }\r\n\r\n  displayWelcomeQuestion() {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyImpressionEvent );\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n    welcomeHtml = welcomeHtml.replace( \"{{question}}\", welcomeText );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n    welcomeHtml = welcomeHtml.replace( \"{{button}}\", startText );\r\n    welcomeHtml = welcomeHtml.replace( \"{{location}}\", this.surveyDisplay.position );\r\n    welcomeHtml = welcomeHtml.replace( \"{{animation}}\", this.surveyDisplay.welcomePopupAnimation );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody( welcomeHtml );\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    if ( ( typeof this.ccsdk.config.keepAlive != undefined ) && ( this.ccsdk.config.keepAlive > 0 ) ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval( () => { self.checkWelcomeQuestionDisplay( self.ccsdk.config.keepAlive ) }\r\n        , 1000 );\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay( keepAlive ) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if ( keepAlive ) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if ( keepAlive <= ( now.getTime() - this.welcomeQuestionDisplayTime.getTime() ) / 1000 ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = 'languageSelector';\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions( [ \"default\" ].concat( Object.keys( this.surveyData.translated ) ) );\r\n    cTemplate1 = cTemplate1.replace( /{{questionId}}/g, qId );\r\n    cTemplate1 = cTemplate1.replace( \"{{options}}\", options1 );\r\n    cTemplate1 = cTemplate1.replace( \"{{requiredLabel}}\", true ? \"*\" : \"\" );\r\n    this.ccsdk.dom.replaceInQuestionsContainer( cTemplate1 );\r\n    let $questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    let $body = document.getElementsByTagName( \"body\" )[ 0 ];\r\n\r\n    this.util.addClass( $questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.languageSelect = new Select( qId );\r\n    let submitBtn = document.querySelectorAll( '.submit-icon' );\r\n    this.util.removeClassAll( submitBtn, 'act-cc-button-next' );\r\n    this.util.addClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n    if ( this.languageSelect ) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init( qId );\r\n    let selectRes = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"display language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageSelectOption' ) : '';\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n    } );\r\n    this.domListeners.push( ref );\r\n    ref.internalHandler = this.util.listener( $body, ref.type, ref.id, ref.cb );\r\n\r\n\r\n    let languageSelect2 = this.util.initListener( \"click\", \".act-cc-button-lang-next\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageNext' ) : '';\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n      //set config rtl or ltr\r\n      let isRTL = /[\\u0600-\\u06FF]/.test( selectRes );\r\n      self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n      self.ccsdk.setHtmlTextDirection();\r\n      self.util.removeClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n      self.util.addClassAll( submitBtn, 'act-cc-button-next' );\r\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\r\n      self.postPrefillPartialAnswer( false, null, null );\r\n    } );\r\n    this.domListeners.push( languageSelect2 );\r\n\r\n    languageSelect2.internalHandler = this.util.listener( $body, languageSelect2.type, languageSelect2.id, languageSelect2.cb );\r\n\r\n\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    ( window as any ).ccsdkDebug ? console.log( cTemplate1 ) : '';\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccdone', this.displayThankYouCb );\r\n  }\r\n\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort( this.questionCompare );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName( \"cc-questions-container\" );\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[ 0 ];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for ( let question of this.questionsToDisplay ) {\r\n      if ( this.checkConditionals( question ) ) {\r\n        let compiledTemplate = this.compileTemplate( question );\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if ( this.isPrefillQuestion( question ) ) {\r\n          this.prefillQuestions.push( question );\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId( questionId: string ) {\r\n    let answer = this.surveyAnswers[ questionId ];\r\n    if ( typeof answer === 'undefined' ) {\r\n      for ( let response of this.prefillResponses ) {\r\n        if ( response.questionId == questionId ) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener( 'q-answered', this.acceptAnswersCb );\r\n  }\r\n\r\n  fillPrefillQuestionObject( id: any, response: any ) {\r\n    let question: any = this.getQuestionById( id );\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n  }\r\n\r\n  fillPrefill( tag: any, value: object ) {\r\n    this.prefillWithTags[ tag.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByTag', this.prefillWithTags ) : '';\r\n  }\r\n\r\n  fillPrefillByNote( note: any, value: object ) {\r\n    this.prefillWithNote[ note.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByNote', this.prefillWithNote ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillDirect( questionId: string, value: object ) {\r\n    this.prefillDirect[ questionId ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillDirect', this.prefillDirect ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillQuestion( id: any, value: any, valueType: string ) {\r\n    let question: any = this.getQuestionById( id );\r\n    // console.log(this.questions);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType( question.displayType );\r\n\r\n    if ( valueType.toLowerCase() == \"number\" ) {\r\n      response.numberInput = value;\r\n    }\r\n    if ( valueType.toLowerCase() == \"text\" ) {\r\n      response.textInput = value;\r\n    }\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n\r\n  }\r\n\r\n  postPrefillPartialAnswer( fullSubmission = false, successcb, errorcb ) {\r\n    if ( !fullSubmission && this._prefillsPartiallyPosted ) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", \"false\" );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{tabletId}\", \"\" + this.randomNumber );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    ( window as any ).ccsdkDebug ? console.log( \"Posting Prefill Responses to Server\" ) : '';\r\n    ( window as any ).ccsdkDebug ? console.log( this.prefillResponses ) : '';\r\n    if ( typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0 ) {\r\n      RequestHelper.post( surveyPartialUrl, this.prefillResponses, successcb, errorcb );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById( id: any, resp: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        response = resp;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById( id: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        return response;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getQuestionById( id: any ) {\r\n    for ( let question of this.questions ) {\r\n      if ( question.id == id ) {\r\n        return question;\r\n      }\r\n    }\r\n  }\r\n\r\n  postPartialAnswer( index: any, response: any, complete = false, successcb, errorcb ) {\r\n    this.postPrefillPartialAnswer( complete, null, null );\r\n    // let data = new FormData();\r\n    //in case of file.\r\n    // let input = document.querySelector('input[type=\"file\"]') ;\r\n    // data.append('file', input.files[0]);\r\n    let question: any = this.questionsToDisplay[ index ];\r\n    if ( typeof question === 'undefined' ) {\r\n      //now?\r\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n    }\r\n    let data: any = {\r\n      comparator: 0,\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n    // if(this.isPartialAvailable == false) {\r\n    //   this.answers.push(data);\r\n    //   return;\r\n    // }\r\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    //if this is the last of displayed question\r\n    ( window as any ).ccsdkDebug ? console.log( \"partial response\", question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) : '';\r\n    // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n    //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    // } else {\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", `${ complete }` );\r\n    // }\r\n    // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[ question.id ] = data;\r\n\r\n    data = [ data ];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent( Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyAnswerEvent );\r\n    if ( question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.post( surveyPartialUrl, data, successcb, errorcb );\r\n\r\n    } else {\r\n      RequestHelper.post( surveyPartialUrl, data, successcb, errorcb );\r\n    }\r\n\r\n  }\r\n\r\n  finalPost( successcb, errorcb ) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace( \"{tokenId}\", this.ccsdk.surveyToken );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if ( Object.keys( this.surveyAnswers ).length == 0 ) {\r\n      return;\r\n    }\r\n    for ( let answer in this.surveyAnswers ) {\r\n      answersAll.push( this.surveyAnswers[ answer ] );\r\n      lastAnswer = this.surveyAnswers[ answer ];\r\n    }\r\n    for ( let answer in this.prefillResponses ) {\r\n      answersAll.push( this.prefillResponses[ answer ] );\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor( ( timeAtPost - this.ccsdk.surveyStartTime.getTime() ) / 1000 )\r\n    };\r\n    if ( lastAnswer ) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      }\r\n      this.postPartialAnswer( this.questionsToDisplay.length - 1, _lastAnswer, true, null, null )\r\n    }\r\n\r\n    RequestHelper.post( postSurveyFinalUrl, finalData, successcb, errorcb );\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals( question: any ) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate( question: any ) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if ( question != 'undefined' ) {\r\n      switch ( question.displayType ) {\r\n        case \"Slider\":\r\n          let opt: any = question.multiSelect[ 0 ].split( \"-\" );\r\n          let optMin: any = opt[ 0 ].split( \";\" );\r\n          let optMax: any = opt[ 1 ].split( \";\" );\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{min}}/g, optMin[ 0 ] );\r\n          if ( optMin[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, optMin[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{max}}/g, optMax[ 0 ] );\r\n          if ( optMax[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, optMax[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          ( window as any ).ccsdkDebug ? console.log( question.questionTags ) : '';\r\n          if ( question.questionTags.includes( \"NPS\" ) ) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else if ( question.questionTags.includes( \"CSAT\" ) ) {\r\n            if ( question.questionTags.includes( \"csat_satisfaction_5\" ) ) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if ( question.questionTags.includes( \"csat_agreement_5\" ) ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else {\r\n            let tileColor = '';\r\n            let style = '';\r\n            if ( question.attributes != null && question.attributes.scaleColor.length > 0 ) {\r\n              tileColor = question.attributes.scaleColor;\r\n            } else if ( question.presentationMode != null && question.presentationMode.includes( \"Color\" ) ) {\r\n              tileColor = question.presentationMode.split( ':' )[ 1 ];\r\n            }\r\n            if ( tileColor.length > 0 ) {\r\n              let tileColorDark = this.util.shadeBlendConvert( -0.3, tileColor, undefined );\r\n              style = '\\\r\n                <style>\\\r\n                #id'+ question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : '+ tileColor + ';\\\r\n                }\\\r\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : '+ tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace( /{{style}}/g, style );\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend( this, question );\r\n            if ( displayLegend ) {\r\n              if ( displayLegend.length > 0 ) {\r\n                startRangeLabel = displayLegend[ 0 ] ? displayLegend[ 0 ] : null;\r\n                endRangeLabel = displayLegend[ 1 ] ? displayLegend[ 1 ] : null;\r\n              }\r\n            }\r\n            if ( question.multiSelect.length > 0 ) {\r\n              startRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 0 ] );\r\n              if ( startRangeLabel == null ) {\r\n                startRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 0 ].split( \";\" )[ 1 ];\r\n              }\r\n              endRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 1 ] );\r\n              if ( endRangeLabel == null ) {\r\n                endRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 1 ].split( \";\" )[ 1 ];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = '';\r\n            let imageVisibility010 = 'hide';\r\n            let imageVisibility110 = 'hide';\r\n            let scaleVisibility = 'show-inline';\r\n            let scaleImageContainer = '';\r\n            if ( startRange == 0 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = 'show';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            } else if ( startRange == 1 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'show';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if ( endRange < 11 ) {\r\n            } else {\r\n              divider = ( endRange - startRange ) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = '';\r\n            // console.log((window as any).isMobile);\r\n            if ( ( window as any ).isMobile ) {\r\n              if ( endRange > 6 && endRange < 11 ) {\r\n                optionStyle = 'width:' + ( ( 100 / ( endRange - startRange + 1 ) ) - .5 ) + '%';\r\n              }\r\n            } else {\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'show-inline';\r\n              scaleImageContainer = '';\r\n              mobileImageUrl = \"\";\r\n\r\n            }\r\n            for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n              options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n            }\r\n            if ( ( endRange - startRange + 1 ) <= 11 ) {\r\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n              var optionMaxWidth = ( ( ( endRange - startRange + 1 ) * 38 / 2 ) - 5 ) + 'px';\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{optionsRange}}\", options );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace( /maxWidth/g, optionMaxWidth );\r\n            questionTemplate = questionTemplate.replace( /{{optionLeftExtraClass}}/g, optionLeftExtraClass );\r\n            questionTemplate = questionTemplate.replace( /{{optionRightExtraClass}}/g, optionRightExtraClass );\r\n            questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n            questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n            questionTemplate = questionTemplate.replace( /{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"' );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility010}}\", imageVisibility010 );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility110}}\", imageVisibility110 );\r\n            questionTemplate = questionTemplate.replace( \"{{scaleImageContainer}}\", scaleImageContainer );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if ( ( ( question.displayStyle == 'radiobutton/checkbox' ) || ( question.displayStyle == 'icon' ) ) && ( multiSelect1.length < 6 ) ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect1 );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].includes( \"Male\" ) )\r\n                || ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].includes( \"Yes\" ) )\r\n                || ( ( multiSelect1.length > 1 ) && multiSelect1[ 1 ].includes( \"Yes\" ) ) )\r\n\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions( multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions( multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions( multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions( multiSelect1 );\r\n\r\n            if ( !self.ccsdk.config.language.includes( 'Default' ) ) {\r\n              if (\r\n                typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions( multiSelect1 );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log( options3 ) : '';\r\n            questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n            acTemplate = questionTemplate;\r\n\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          if ( ( question.displayStyle == 'radiobutton/checkbox' ) && ( multiSelect.length < 6 ) ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].includes( \"Male\" ) )\r\n                || ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].includes( \"Yes\" ) )\r\n                || ( ( multiSelect.length > 1 ) && multiSelect[ 1 ].includes( \"Yes\" ) ) )\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioImageOptions( multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions( multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n              options1 = self.util.generateRadioOptions( multiSelect, question.id );\r\n              questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n            }\r\n          } else if ( ( question.displayStyle == 'icon' ) && ( multiSelect.length < 6 ) ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            options1 = self.util.generateRadioOptions( multiSelect, question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n          } else {\r\n\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions( multiSelect );\r\n            if ( !self.ccsdk.config.language.includes( 'Default' ) ) {\r\n              if ( typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions( multiSelect );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n\r\n          }\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if ( question.presentationMode == \"Invert\" ) {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n\r\n          } else {\r\n\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend2 ) {\r\n            if ( displayLegend2.length > 0 ) {\r\n              startRangeLabel = displayLegend2[ 0 ] ? displayLegend2[ 0 ] : null;\r\n              endRangeLabel = displayLegend2[ 1 ] ? displayLegend2[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend3 ) {\r\n            if ( displayLegend3.length > 0 ) {\r\n              startRangeLabel1 = displayLegend3[ 0 ] ? displayLegend3[ 0 ] : null;\r\n              endRangeLabel1 = displayLegend3[ 1 ] ? displayLegend3[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel1 );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel1 );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType( displayType: string ) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch ( displayType ) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for ( let question of this.questions ) {\r\n      if ( !question.isRetired ) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if ( this.isPrefillTags( question ) ) {\r\n          self.ccsdk.debug ? console.log( 'prefillTags', this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillNote( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillDirect( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( !( this.isPrefillQuestion( question ) ) ) {\r\n          if (\r\n            question.conditionalFilter != null &&\r\n            ( question.conditionalFilter.filterquestions == null\r\n              || question.conditionalFilter.filterquestions.length == 0 )\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n            if ( supportedDisplayTypes.indexOf( question.displayType ) > -1 ) {\r\n              this.questionsToDisplay.push( question );\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if ( ConditionalFlowFilter.filterQuestion( this, question ) ) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push( question );\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags( question );\r\n          this.fillPrefillWithNote( question );\r\n          ConditionalFlowFilter.filterQuestion( this, question );\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for ( let question of this.questions ) {\r\n      ConditionalFlowFilter.filterQuestion( this, question );\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags( question: any ) {\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        switch ( tag.toLowerCase() ) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion( question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\" );\r\n            return true;\r\n          default:\r\n            console.log( \"isPrefillTags\", typeof this.prefillWithTags[ tag.toLowerCase() ] );\r\n            if ( typeof this.prefillWithTags[ tag.toLowerCase() ] != 'undefined' ) {\r\n              let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n              this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined'\r\n      && question.note != null\r\n      && question.note.length > 0\r\n      && this.prefillWithNote[ question.note.toLowerCase() ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect( question: any ) {\r\n    if ( typeof question !== 'undefined'\r\n      && this.prefillDirect[ question.id ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillDirect[ question.id ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags( question: any ) {\r\n    ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', this.prefillWithTags ) : '';\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', tag ) : '';\r\n        if ( typeof this.prefillWithTags[ tag.toLowerCase() ] !== 'undefined' ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'prefil ', tag.toLowerCase(), this.prefillWithTags[ tag.toLowerCase() ], this.prefillWithTags ) : '';\r\n\r\n          let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n          this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined' && question.note != null && question.note.length > 0 ) {\r\n      if ( typeof this.prefillWithNote[ question.note.toLowerCase() ] !== 'undefined' ) {\r\n        let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n        this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion( question: any ) {\r\n    if ( question.apiFill == true ) {\r\n      return true;\r\n    }\r\n    if ( question.staffFill == true ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled( question: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == question.questionId ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccclose', this.destroySurveyCb );\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer( this.surveyToken );\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer( this.surveyToken );\r\n    if ( typeof surveyContainer != 'undefined' ) {\r\n      this.util.remove( surveyContainer );\r\n    }\r\n    if ( typeof welcomeContainer != 'undefined' ) {\r\n      this.util.remove( welcomeContainer );\r\n    }\r\n    document.removeEventListener( 'ccclose', this.destroySurveyCb );\r\n    document.removeEventListener( 'ccdone', this.displayThankYouCb );\r\n    document.removeEventListener( 'q-answered', this.acceptAnswersCb );\r\n    ( window as any ).globalSurveyRunning = false;\r\n    let bodyElement = <HTMLElement>document.\r\n      getElementsByTagName( \"body\" )[ 0 ];\r\n    this.util.removeClass( bodyElement, \"blurr\" );\r\n\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 13\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 15\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 16\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 17\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.includes( \":\" ) ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( ConditionalTextFilter.isAnd( filterByQuestion ) ) {\r\n              if ( ConditionalTextFilter.doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( ConditionalTextFilter.isOr( filterByQuestion ) ) {\r\n              if ( ConditionalTextFilter.doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            let groupTitle;\r\n            if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n              groupTitle = conditionalText.split( ':' )[ 0 ];\r\n              conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n            } else {\r\n              conditionalText = fOption.text;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n\r\n  private static isAnd( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\" ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isOr( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\" ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isNumberCheck( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.answerCheck[ 0 ].includes( \"lt\" ) || filterQuestion.answerCheck[ 0 ].includes( \"gt\" ) || filterQuestion.answerCheck[ 0 ].includes( \"eq\" ) ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static doesSatisfy( surveyHandler: any, filterQuestion: any ): boolean {\r\n    if ( ConditionalTextFilter.isNumberCheck( filterQuestion ) ) {\r\n      if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"lt\" ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput < filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"gt\" ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput > filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"eq\" ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput == filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      }\r\n    } else {\r\n      let iFoundAll: boolean = false;\r\n      for ( let aAnswer of filterQuestion.answerCheck ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).textInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).textInput.includes( aAnswer ) ) {\r\n            iFoundAll = true;\r\n            break;\r\n          } else {\r\n            iFoundAll = false;\r\n            break;\r\n          }\r\n      }\r\n      if ( iFoundAll )\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from './Select';\r\nimport { Theme } from './Theme';\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\nimport { setInterval } from 'timers';\r\n\r\nclass DomSurvey {\r\n\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n\r\n  constructor( ccsdk: any ) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities()\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready( function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    } );\r\n  }\r\n\r\n  setTheme( brandColor, time ) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready( function () {\r\n      self.theme = new Theme( brandColor, time );\r\n    } );\r\n  }\r\n\r\n  setQIndex( index: number ) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    this.$popupContainer = document.querySelectorAll( \".cc-popup-container\" );\r\n    this.$popupContainer2 = document.querySelectorAll( \".cc-popup-container-2\" );\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    // this.select = new Select();\r\n\r\n  }\r\n\r\n\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    console.log( self, 'before event' )\r\n    let startSurvey = this.util.initListener( \"click\", \".act-cc-survey-start\", function () {\r\n      console.log( 'start handler', self )\r\n      if ( ( !self.util.hasClass( self.$startBtn, 'disabled' ) ) && ( self.ccsdk.surveyStatus != 'minimized' ) ) {\r\n        let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n        console.log( onSurveyClickEvent, 'custom click event' );\r\n        document.dispatchEvent( onSurveyClickEvent );\r\n        self.util.addClass( self.$startBtn, 'disabled' );\r\n        self.showLoader();\r\n        self.startSurvey();\r\n      } else {\r\n        self.initSurveyDom();\r\n      }\r\n    } );\r\n    this.domListeners.push( startSurvey );\r\n\r\n    startSurvey.internalHandler = this.util.listener( this.$body, startSurvey.type, startSurvey.id, startSurvey.cb );\r\n\r\n    console.log( 'start survey event', startSurvey );\r\n    let nextQue = this.util.initListener( \"click\", \".act-cc-button-next\", function () {\r\n      // alert(\"working\");\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( nextQue );\r\n\r\n    nextQue.internalHandler = this.util.listener( this.$body, nextQue.type, nextQue.id, nextQue.cb );\r\n\r\n    let prevQue = this.util.initListener( \"click\", \".act-cc-button-prev\", function () {\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.prevQuestion();\r\n    } );\r\n    this.domListeners.push( prevQue );\r\n\r\n    prevQue.internalHandler = this.util.listener( this.$body, prevQue.type, prevQue.id, prevQue.cb );\r\n\r\n    let closeSurvey = this.util.initListener( \"click\", \".act-cc-button-close\", function () {\r\n      let onSurveyCloseEvent = new CustomEvent( Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyCloseEvent );\r\n      self.ccsdk.survey.answers = {};\r\n      self.trackSelects = [];\r\n      self.destroyListeners();\r\n      self.util.trigger( document, 'ccclose', undefined );\r\n      self.bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      self.util.removeClass( self.bodyElement, \"blurr\" )\r\n      self.ccsdk.survey.destroy();\r\n\r\n    } );\r\n    this.domListeners.push( closeSurvey );\r\n\r\n\r\n    closeSurvey.internalHandler = this.util.listener( this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb );\r\n\r\n    let minSurvey = this.util.initListener( \"click\", \".act-cc-button-minimize\", function () {\r\n      self.minimizeSurvey();\r\n    } );\r\n    this.domListeners.push( minSurvey );\r\n\r\n\r\n    minSurvey.internalHandler = this.util.listener( self.$body, minSurvey.type, minSurvey.id, minSurvey.cb );\r\n  }\r\n\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.removeClass( this.$popupContainer2[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.addClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.ccsdk.surveyStatus = 'minimized';\r\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass( this.$startBtn, 'disabled' );\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for ( let listener of this.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    for ( let listener of this.ccsdk.survey.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    if ( this.ccsdk.survey.languageSelect ) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if ( this.select ) {\r\n      this.select.destroyListeners();\r\n    }\r\n\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll( this.$popupContainer2, 'show-slide' );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    if ( this.ccsdk.surveyStatus == 'minimized' ) {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      ( window as any ).ccsdkDebug ? console.log( this.ccsdk.surveyData ) : '';\r\n      if ( typeof this.ccsdk.surveyData.translated == undefined || Object.keys( this.ccsdk.surveyData.translated ).length < 1 ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll( \"#progress-line\" )[ 0 ];\r\n    el.style.width = ( this.qIndex / this.ccsdk.survey.questionsToDisplay.length ) * 100 + '%';\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics( this.$questionContainer, 0 );\r\n    this.util.removeClassAll( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n    this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n  }\r\n\r\n  nextQuestion() {\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response init', this.qResponse ) : '';\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[ 0 ].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__required\" )[ 0 ]\r\n    let validationSpan: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__validation\" )[ 0 ]\r\n    if ( span )\r\n      this.util.removeClass( span, \"show\" );\r\n    if ( validationSpan )\r\n      this.util.removeClass( validationSpan, \"show\" );\r\n\r\n\r\n    //check if question is required \r\n    isRequired = q.getAttribute( 'data-required' ).toLowerCase() == 'true' ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if ( isRequired && ( Object.keys( this.qResponse ).length === 0 ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else if ( isRequired && ( !this.qResponse.text ) && ( !this.qResponse.number ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else {\r\n      if ( span ) {\r\n        this.util.removeClass( span, \"show\" );\r\n        this.util.addClass( span, \"hide\" );\r\n      }\r\n\r\n\r\n\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[ this.qIndex ].validationRegex\r\n      if ( validationRegex ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'validationRegex', validationRegex ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( 'response', this.qResponse ) : '';\r\n        let pattern = validationRegex.match( new RegExp( '^/(.*?)/([gimy]*)$' ) );\r\n        let regex = new RegExp( validationRegex );\r\n        if ( this.qResponse.text ) {\r\n          console.log( 'test regex text', regex.test( this.qResponse.text ) );\r\n          if ( regex.test( this.qResponse.text ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        else if ( this.qResponse.number ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'test regex text', regex.test( this.qResponse.number ) ) : '';\r\n\r\n          if ( regex.test( this.qResponse.number ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n\r\n\r\n      if ( this.qResponse !== 'undefined' ) {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && this.qResponse.type == this.ccsdk.survey.answers[ this.currentQuestionId ].type\r\n          && this.qResponse.text == this.ccsdk.survey.answers[ this.currentQuestionId ].text\r\n          && this.qResponse.number == this.ccsdk.survey.answers[ this.currentQuestionId ].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && !this.qResponse.text\r\n          && !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n          this.submitQuestion( this.qIndex, this.qResponse, this.qResponse.type, qId );\r\n          //save response\r\n          this.ccsdk.survey.answers[ this.currentQuestionId ] = JSON.parse( JSON.stringify( this.qResponse ) );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion( this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[ this.qIndex ] );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = 'initial';\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if ( this.qIndex == this.ccsdk.survey.questionsToDisplay.length ) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      let rightIcon: any = this.util.get( '.cc-icon-right' );\r\n      let nextIcon: any = this.util.get( '.act-cc-button-next' );\r\n      this.util.addClassAll( leftIcon, 'hide' );\r\n      this.util.addClassAll( rightIcon, 'hide' );\r\n      this.util.addClassAll( nextIcon, 'hide' );\r\n      this.util.trigger( document, 'ccdone', undefined );\r\n      this.util.removeClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      this.updateProgress();\r\n    } else {\r\n      if ( ( this.qIndex > this.ccsdk.survey.questionsToDisplay.length ) ) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics( nextQ, this.qIndex );\r\n      this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    } else {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClass( leftIcon[ 0 ], 'show-slide' );\r\n      this.util.removeClass( leftIcon[ 0 ], 'hide-slide' );\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.qIndex--;\r\n    if ( !this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0 ) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics( null, this.qIndex );\r\n    this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n    ( window as any ).ccsdkDebug ? console.log( \"prevQuestion qResponse\", this.qResponse ) : '';\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.updateProgress();\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n      this.util.removeClassAll( leftIcon, 'show-slide' );\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.addClass( $loader, 'show' );\r\n    this.util.removeClass( $loader, 'hide' );\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.removeClass( $loader, 'show' );\r\n    this.util.addClass( $loader, 'hide' );\r\n  }\r\n\r\n  appendInBody( html ) {\r\n    document.querySelectorAll( \"body\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer( html ) {\r\n    this.$questionContainer[ 0 ].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer( html ) {\r\n    document.querySelectorAll( \".cc-questions-container\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".act-cc-welcome-question-box\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    console.debug()\r\n    this.$startBtn = document.querySelectorAll( \".act-cc-survey-start\" )[ 0 ];\r\n\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".cc-language-selector\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    let self = this;\r\n    if ( this.util.checkIfListenerExists( '.cc-language-select', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '.cc-language-select' );\r\n    }\r\n    let languageSelect = this.util.initListener( \"click\", \".cc-language-select\", function () {\r\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyClickEvent);\r\n      //select language show next question.\r\n      // self.startSurvey();\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n    } );\r\n\r\n    languageSelect.internalHandler = this.util.listener( this.$body, languageSelect.type, languageSelect.id, languageSelect.cb );\r\n  }\r\n\r\n  getSurveyContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-survey\" )[ 0 ];\r\n  }\r\n\r\n  getWelcomeContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-welcome\" )[ 0 ];\r\n  }\r\n\r\n  loadQuestionSpecifics( q: HTMLElement, index: number ) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[ 0 ].innerHTML = \"\";\r\n    console.log( this.ccsdk );\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate( this.ccsdk.survey.questionsToDisplay[ index ] );\r\n    this.$questionContainer[ 0 ].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-type' );\r\n    let qId: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-id' );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring( 2, qId.length );\r\n    switch ( qType ) {\r\n      case 'scale':\r\n        let allOptions1: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n        let optionWidth1 = ( 100 / allOptions1.length ) - .6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale( index, qId );\r\n        break;\r\n      case 'nps':\r\n        this.setupListenersQuestionNPS( index, qId );\r\n        break;\r\n      case 'multiline':\r\n        this.setupListenersQuestionMultiline( index, qId );\r\n        break;\r\n      case 'select':\r\n        if ( typeof this.select !== 'undefined' ) {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect( index, qId );\r\n        break;\r\n      case 'radio':\r\n        this.setupListenersQuestionRadio( index, qId );\r\n        break;\r\n      case 'radioImage':\r\n        this.setupListenersQuestionRadioImage( index, qId );\r\n        break;\r\n      case 'checkbox':\r\n        this.setupListenersQuestionCheckbox( index, qId );\r\n        break;\r\n      case 'star':\r\n        this.setupListenersQuestionStar( index, qId );\r\n        break;\r\n      case 'smile':\r\n        this.setupListenersQuestionSmile( index, qId );\r\n        break;\r\n      case 'csat':\r\n        this.setupListenersQuestionCsat( index, qId );\r\n        break;\r\n      case 'slider':\r\n        this.setupListenersQuestionSlider( index, qId );\r\n        break;\r\n      case 'singleline':\r\n        this.setupListenersQuestionSingleline( index, qId );\r\n        break;\r\n      case 'number':\r\n        this.setupListenersQuestionNumber( index, qId );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let selectedRating1 = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 1 ];\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'scale';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'scale';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      selectedRating1.innerHTML = '' + rating;\r\n\r\n      //move to next question automagically\r\n      // alert('calling next questions inside scale');\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionNPS( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'nps question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'nps previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        let $mobileRating = document.querySelectorAll( \".act-cc-nps-selected-rating\" )[ 0 ];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = 'nps';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'nps';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // alert('calling next questions inside scale');\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"checkbox question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValues = this.ccsdk.survey.answers[ questionId ].text;\r\n      if ( previousValues ) {\r\n        previousValues = previousValues.split( ',' );\r\n        for ( let previousValue of previousValues ) {\r\n          let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n          ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n          if ( typeof previousSelection !== 'undefined' ) {\r\n            this.util.addClass( previousSelection, \"selected\" );\r\n            previousSelection.setAttribute( 'checked', 'checked' );\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n      // let rating : number = this.querySelectorAll('input')[0].value;\r\n      console.log( qId )\r\n      let rating: string = [].filter.call( document.querySelectorAll( '#' + qId + ' .cc-checkbox input' ), function ( c ) {\r\n        return c.checked;\r\n        console.log( c, 'control' )\r\n      } ).map( function ( c ) {\r\n        return c.value;\r\n      } ).join( ',' );\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'Checkbox selected', rating ) : '';\r\n      console.log( 'Checkbox selected', rating );\r\n\r\n      self.qResponse.type = 'checkbox';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n    let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyClickEvent );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadio( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      // return;\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radio';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radio';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio image question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio image question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio image previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radioImage';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radioImage';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionStar( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-star-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'star question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'star previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'star';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-star-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-star-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous sibling\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n\r\n\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'star';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSmile( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'smile question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'smile previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous siblings\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n\r\n  setupListenersQuestionCsat( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"csat question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'csat question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'csat previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      this.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n      let child: any = this.previousSibling;\r\n      while ( ( child = child.previousSibling ) != null ) {\r\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n        self.util.addClass( child, \"selected\" );\r\n      }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionMultiline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"multiine question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'multiine question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'multiline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = 'multiline';\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSingleline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"singleline question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'singleline question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'singleline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = 'singleline';\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n    console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersQuestionNumber( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"number question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'number question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'number input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'number';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = 'number';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSlider( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = '';\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" input\" )[ 0 ];\r\n\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" input\", this.domListeners ) ) {\r\n      // return;\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'slider question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" .act-slider-tip\" )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = 'slider';\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( \"change\", '#' + qId + \" input\", function () {\r\n      sliderRes = this.value;\r\n      self.qResponse.type = 'slider';\r\n      self.qResponse.number = sliderRes;\r\n      self.qResponse.text = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSelect( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que', this.domListeners ) : '';\r\n    questionId = qId.substring( 2, qId.length );\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'select que listner exists' ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n\r\n      // return;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que' ) : '';\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que initialize select' ) : '';\r\n\r\n    self.select = new Select( qId );\r\n    self.select.destroyListeners();\r\n    self.select.init( qId );\r\n\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      if ( this.ccsdk.survey.answers[ questionId ].text ) {\r\n        self.select.setValue( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.select.selectOptions( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.qResponse.type = 'select';\r\n        self.qResponse.text = this.ccsdk.survey.answers[ questionId ].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push( qId );\r\n    // }\r\n    let selectRes: string = '';\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      // selectRes = this.getAttribute('data-value');\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n      self.qResponse.type = 'select';\r\n      self.qResponse.text = selectRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // self.nextQuestion();\r\n    } );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion( index: number, data: any, type: string, qId: string ) {\r\n    // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n    this.util.trigger( document, 'q-answered', {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.substring( 2, qId.length )\r\n    } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { DomSurvey }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\r\n\t\tlet css: string = '\\\r\n\t\t.cc-sdk #progressBar{ \\\r\n\t\t\tbackground : '+ this.brandColorDark + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk #progress-line{ \\\r\n\t\t\tbackground: '+ brandColor + ' \\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\r\n\t\t\tbackground:'+ brandColor + ';\\\r\n\t\t}\\\r\n\t\t.overlay.glass{\\\r\n\t\t\tbackground-color:'+ this.util.hexToRGB( brandColor, .5 ) + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\r\n\t\t\tborder-color: #fff;\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: '+ brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: '+ brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\\\r\n\t\t\tbackground: '+ brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .form-control:focus {\\\r\n\t\t\tborder-color: '+ brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-message-box__btn{\\\r\n\t\t\tbackground: '+ brandColor + ';\\\r\n\t\t\tcolor:#fff;\\\r\n\t\t}\\\r\n\t\thtml[dir=\"rtl\"] .cc-sdk .submit-icon{\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-question-container__required-label{\\\r\n\t\t\tcolor: '+ brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\\\r\n\t\t\tbackground: '+ brandColor + ' !important;\\\r\n\t\t\t   background: -moz-linear-gradient(-45deg, '+ brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, '+ brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   background: linear-gradient(135deg, '+ brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+ brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\r\n\t\t   }\\\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\\\r\n\t\t\tbackground: '+ brandColor + ' !important;\\\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, '+ brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, '+ brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tbackground: linear-gradient(135deg, '+ brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+ brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\r\n\t\t}\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\\\r\n\t\t\tborder: 1px solid '+ brandColor + ' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\\\r\n\t\t\tborder: 1px solid '+ brandColor + ' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk svg.timer circle {\\\r\n\t\t\tanimation: countdown '+ time + 's linear 1 forwards;\\\r\n\t\t\tstroke: '+ brandColor + ';\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\\r\n\t\t\t\tbackground-color: '+ brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\\r\n\t\t\t\tbackground-color: '+ brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\\\r\n\t\t\t\tborder: solid 1px '+ brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t @media (max-width: 767px){\\\r\n\t \t\t\t.overlay.glass{\\\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\r\n\t \t\t\tbackground-image:none;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container{\\\r\n\t\t\t\t\tbackground-color : transparent;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .overlay.glass{\\\r\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB( brandColor, .9 ) + ';\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\\r\n\t\t\t\t\tcolor:#fff;\\\r\n\t\t\t\t}\\\r\n\t\t';\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\r\nclass Slider{\r\n  inputRange : any;\r\n  rangeTip : any;\r\n  maxValue : number;\r\n  speed : number;\r\n  currValue : number;\r\n  rafID : any;\r\n  timeout : any;\r\n  util : any\r\n\r\n  constructor(){\r\n   this.inputRange = document.getElementsByClassName('range')[0];\r\n   this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n   this.util = new DomUtilities();\r\n  //  this.maxValue = 100; // the higher the smoother when dragging\r\n   this.speed = 5;\r\n   \r\n\r\n  // set min/max value\r\n  // this.inputRange.min = 0;\r\n  this.inputRange.min = this.inputRange.getAttribute('min');\r\n  // this.inputRange.max = this.maxValue;\r\n  this.inputRange.max = this.inputRange.getAttribute('max');\r\n  this.setupListeners();\r\n  }\r\n\r\n  setupListeners(){\r\n    let self : Slider = this;\r\n   \r\n    // bind events\r\n    this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n    // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\r\n    // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\r\n    // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\r\n    // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\r\n    // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\r\n    // move gradient\r\n    this.inputRange.addEventListener('input', function() {\r\n      self.updateRangeTip();\r\n      self.util.addClass(this, 'selected');\r\n      \r\n    //Change slide thumb color on way up\r\n    if (this.value > 20) {\r\n       self.inputRange.classList.add('ltpurple');\r\n    }\r\n    if (this.value > 40) {\r\n       self.inputRange.classList.add('purple');\r\n    }\r\n    if (this.value > 60) {\r\n       self.inputRange.classList.add('pink');\r\n    }\r\n\r\n    //Change slide thumb color on way down\r\n    if (this.value < 20) {\r\n       self.inputRange.classList.remove('ltpurple');\r\n    }\r\n    if (this.value < 40) {\r\n       self.inputRange.classList.remove('purple');\r\n    }\r\n    if (this.value < 60) {\r\n       self.inputRange.classList.remove('pink');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n  updateRangeTip(){\r\n    let self : Slider = this;\r\n    this.rangeTip.style.display = 'block' ;\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\r\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\r\n    // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\r\n    \r\n    // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\r\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\r\n      \r\n    // } else {\r\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\r\n      \r\n    // }\r\n    // if(parseInt(this.rangeTip.style.left) <= 50 ){\r\n    //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\r\n    // }else{\r\n    //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\r\n    // }\r\n    // console.log(this.rangeTip.style.left);\r\n    // if(this.timeout){\r\n    //   clearTimeout(this.timeout);\r\n    // }\r\n    // this.timeout = setTimeout(function(){\r\n    //   self.rangeTip.style.display = 'none' ;\r\n    // },300)\r\n    \r\n  }\r\n\r\n  clearTo(){\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if (this.currValue < 20) {\r\n       this.inputRange.classList.remove('ltpurple');\r\n    }\r\n    if (this.currValue < 40) {\r\n       this.inputRange.classList.remove('purple');\r\n    }\r\n    if (this.currValue < 60) {\r\n       this.inputRange.classList.remove('pink');\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if(this.currValue > -1) {\r\n     window.requestAnimationFrame(this.animateHandler);\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler(){\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif(Cookie.get(Constants.CCTriggerSiteStartTime) == null) {\r\n  Cookie.set(Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie.set(Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\n\r\nlet sitePageViewCount = Cookie.get(Constants.CCTriggerSitePageViewCount);\r\nif( sitePageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n} else {\r\n  sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get(Constants.CCTriggerIndividualPageViewCount);\r\nif( individualPageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n} else {\r\n  individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\n\r\n(window as any).click = 0;\r\n\r\nwindow.onscroll = function (e) {  \r\n  // called when the window is scrolled.  \r\n    let doc = document.documentElement;\r\n    let left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    let top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\r\n    (window as any).ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n}\r\n\r\n\r\ndocument.onclick = function(e) {\r\n  (window as any).click++;\r\n}\r\n\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval : any = null;\r\n  static triggerInstances : any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey(surveyId : any, trigger : Triggers) {\r\n    TriggerManager.triggerInstances[surveyId] = trigger;\r\n    if(Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n      (window as any).ccsdkDebug ?console.log(TriggerManager.triggerInterval):'';\r\n      if(TriggerManager.triggerInterval == null) {\r\n        (window as any).ccsdkDebug ?console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\"):'';\r\n        TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId : string) {\r\n    delete TriggerManager.triggerInstances[surveyId];\r\n    if(Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n      clearInterval(TriggerManager.triggerInterval);\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n    Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n    //set cookies and call every process Interval Triggers.\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers(scrollNow) {\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n    }\r\n  }\r\n\r\n  static disableTriggers(surveyId : string) {\r\n    TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk : any;\r\n  pageCountTrigger : boolean;\r\n  pageTimeTrigger : boolean;\r\n  siteCountTrigger : boolean;\r\n  siteTimeTrigger : boolean;\r\n  urlParamTrigger : boolean;\r\n  notUrlParamTrigger : boolean;\r\n  utmParamTrigger : boolean;\r\n  scrollPixelsTrigger : boolean;\r\n  minPageCount : number;\r\n  minSiteCount : number;\r\n  minPageTime : number;\r\n  minSiteTime : number;\r\n  minScrollPixels : number;\r\n  utm : string;\r\n  inUrl : RegExp;\r\n  notinUrl : RegExp;\r\n  pageCountTriggerEnabled : boolean;\r\n  siteCountTriggerEnabled : boolean;\r\n  pageTimeTriggerEnabled : boolean;\r\n  siteTimeTriggerEnabled : boolean;\r\n  urlParamTriggerEnabled : boolean;\r\n  notUrlParamTriggerEnabled : boolean;\r\n  utmParamTriggerEnabled : boolean;\r\n  scrollPixelsTriggerEnabled : boolean;\r\n\r\n  conditionalTriggers : any;\r\n\r\n  constructor(ccsdk) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger(target : string, cb : any) {\r\n    let item = document.querySelectorAll(target)[0];\r\n    if(typeof item !== 'undefined') {\r\n      item.addEventListener('click',cb);\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger(minPageCount : number) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger(minSiteCount : number) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger(minPageTime : number) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger(minSiteTime : number) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger(urlPattern : RegExp) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger(urlPattern : RegExp) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger(urlPattern : string) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger(minScrollPixels : number) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers(config : CCSDKConfig) {\r\n    (window as any).ccsdkDebug?console.log(config.grepURL):'';\r\n    //\r\n    if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ((typeof config.onExitDetect !== 'undefined')) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)){\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      (window as any).ccsdkDebug?console.log('returning'):'';\r\n      return;\r\n    }\r\n    if(typeof this.conditionalTriggers !== 'undefined') {\r\n      if(Object.keys(this.conditionalTriggers).length == 0) {\r\n        return false;\r\n      }\r\n      for(let conditionalTrigger in this.conditionalTriggers) {\r\n        if(this.conditionalTriggers[conditionalTrigger] != null) {\r\n          switch(conditionalTrigger) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                (window as any).ccsdkDebug?console.log(\"Mouse out\"):'';\r\n\r\n              });\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n\r\n            break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ((window as any).click >= this.conditionalTriggers.click);\r\n            break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n              let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('waitSeconds enabled', isEnabled):'';\r\n            break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( (window as any).ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('scrollPercent enabled', isEnabled):'';\r\n              \r\n            break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('grepURL enabled', isEnabled):'';\r\n            break;\r\n            case \"grepInvertURL\":\r\n                isEnabled = isEnabled && !TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                (window as any).ccsdkDebug?console.log('grepInvertURL enabled', isEnabled):'';\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(isEnabled) {\r\n        SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers(scrollNow : number) {\r\n    this.TriggerPopUpByScrollPixels(scrollNow);\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt(Cookie.get(Constants.CCTriggerSitePageViewCount));\r\n    if(pageCount == NaN) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  \r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n    let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition(pageTime, pageStartTime,this.minPageTime) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date(Cookie.get(Constants.CCTriggerSiteStartTime)).getTime();\r\n    let siteTime = new Date(Cookie.get(Constants.CCTriggerSiteElapsedTime)).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n    \r\n  }\r\n\r\n  TriggerPopUpByScrollPixels(scrollNow : number) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll(scrollNow, this.minScrollPixels) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split(\"=\");\r\n    let utmVal = Cookie.getParameterByName(utmP[0], undefined); \r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]){\r\n      this.utmParamTrigger = true;\r\n      \r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts"],"sourceRoot":""}