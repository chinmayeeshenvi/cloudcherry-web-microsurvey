{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap a33bc11b1d295cb08fce","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","internalHandler","event","t","target","matches","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","indexOf","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","isArray","res","generateLanguageSelectOptions","checkOptionContainsImage","opt","includes","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","console","log","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","addSurvey","ccsdkDebug","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","unsetSurveyRunning","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","text","qText","translated","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","makeRequest","method","postParams","headers","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","response","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","Content-Type","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioMore","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio_more","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","DomUtilities_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selfOption","selectOptions","selectWrapper","selectedOptionText","textContent","ref","ccSelect","stopPropagation","destroyListeners","_a","setValue","selectOption","csv","allOptions","allOptions_1","domOptions","LanguageTextFilter_1","ConditionalFlowFilter","filterQuestion","aAddedCount","aRemovedCount","getAnswerForQuestionId","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","isAnd","doesSatisfy","isOr","getSurveyQuestions","removeAnswer","sort","questionCompare","a","sequence","groupBy","toUpperCase","isNumberCheck","answerCheck","iFoundAll","getQuestionById","questionId","questionAnswer","questionAnswerText","textInput","aAnswer","displayType","toLowerCase","numberInput","number","surveyToken","arguments","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","destroy","dom","callback","prefill","answerObject","prefillByTag","questionTag","answer","fillPrefill","prefillByNote","questionNote","fillPrefillByNote","show","hide","localCCSDK","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","login","loginURL","loginResponse","grant_type","debug","then","logindata","loginData","getSurveyThrottlingLogic","getThrottleUrl","access_token","getThrottleResponse","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","htmlDir","direction","setAttribute","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","fetchQuestions","hideLoader","initSurveyQuestions","DomSurvey","setTheme","keepAlive","displayWelcomeQuestion","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","surveyPopupAnimation","domListeners","questions","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","replaceInQuestionsContainer","thankyouContainer","setTimeout","destroySurveyCb","onSurveyEndEvent","acceptAnswersCb","Number","postPartialAnswer","domSelectElements","setQIndex","randomNumber","random","surveyUrl","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","surveyHtml","appendInBody","displayQuestionSelector","onSurveyImpressionEvent","surveyStartTime","welcomeHtml","welcomeText","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","acceptAnswers","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","postPrefillPartialAnswer","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","fillPrefillQuestionObject","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","surveyPartialUrl","partialResponseId","resp","complete","comparator","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","floor","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","initial_1","optionLeftExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","bodyElement","content","transform","locals","list","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","newUrl","conditionaText","conditionaText_1","leadingDisplayTexts","fOption","filterByQuestion","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","startSurvey","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","match","currentQuestionId","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","token","qType","allOptions1","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","encodeURI","inputRange","rangeTip","speed","min","max","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (t.matches(sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && opt.includes(';') && opt.includes('.');\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, arr[i]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, arr[i].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, arr[i]);\r\n                res += optHtml;\r\n            }\r\n            console.log(res);\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n            else {\r\n                if (question.text != null) {\r\n                    var qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.text == null ? '' : question.text;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (question.text != null) {\r\n                var qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            }\r\n            else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        // console.log(effectiveMultiselect);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers) {\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(method, url);\r\n        xhr.onload = function () {\r\n            if (this.status >= 200 && this.status < 300) {\r\n                var res = xhr.response ? JSON.parse(xhr.response) : '';\r\n                resolve(res);\r\n            }\r\n            else {\r\n                reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            reject({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        };\r\n        if (headers) {\r\n            Object.keys(headers).forEach(function (key) {\r\n                xhr.setRequestHeader(key, headers[key]);\r\n            });\r\n        }\r\n        // var params : any = postParams;\r\n        // We'll need to stringify if we've been given an object\r\n        // If we have a string, this is skipped.\r\n        // if (params && typeof params === 'object') {\r\n        //   params = Object.keys(params).map(function (key) {\r\n        //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        //   }).join('&');\r\n        // }\r\n        xhr.send(postParams);\r\n    });\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers) {\r\n        return makeRequest(\"GET\", url, null, headers);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers) {\r\n        headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers);\r\n    };\r\n    RequestHelper.get = function (url) {\r\n        return makeRequest(\"GET\", url, null, null);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\": \"application/json; charset=utf-8\" });\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(13);\r\nvar QuestionSurvey = __webpack_require__(18);\r\nvar QuestionStart = __webpack_require__(19);\r\nvar QuestionSingleline = __webpack_require__(20);\r\nvar QuestionNumber = __webpack_require__(21);\r\nvar QuestionMultiline = __webpack_require__(22);\r\nvar QuestionCheckbox = __webpack_require__(23);\r\nvar QuestionRadio = __webpack_require__(24);\r\nvar QuestionRadioMore = __webpack_require__(25);\r\nvar QuestionRadioImage = __webpack_require__(26);\r\nvar QuestionScale = __webpack_require__(27);\r\nvar QuestionCSATAgreement5 = __webpack_require__(28);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(29);\r\nvar QuestionNPS = __webpack_require__(30);\r\nvar QuestionSelect = __webpack_require__(31);\r\nvar QuestionMultiSelect = __webpack_require__(32);\r\nvar QuestionSmile = __webpack_require__(33);\r\nvar QuestionSmileInverted = __webpack_require__(34);\r\nvar QuestionStar = __webpack_require__(35);\r\nvar QuestionSlider = __webpack_require__(36);\r\nvar OptionRadioImage = __webpack_require__(37);\r\nvar OptionRadio = __webpack_require__(38);\r\nvar OptionCheckbox = __webpack_require__(39);\r\nvar OptionCheckboxImage = __webpack_require__(40);\r\nvar ThankYou = __webpack_require__(41);\r\nvar LanguageSelector = __webpack_require__(42);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio_more: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_more = QuestionRadioMore;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            //select all cc-select-option and remove class selection\r\n            // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\r\n            // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    if (selectedOptionText.indexOf(selfOption.textContent) == 0) {\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '');\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else if (selectedOptionText.indexOf(selfOption.textContent) > 0) {\r\n                        selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else {\r\n                        selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\r\n                    }\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\r\n                if (selectedOptionText.length < 1) {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\r\n                }\r\n                else {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0].textContent = value;\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (ConditionalFlowFilter.isAnd(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalFlowFilter.isOr(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (!surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            surveyHandler.getSurveyQuestions().push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            aRemovedCount++;\r\n                            surveyHandler.getSurveyQuestions().splice(surveyHandler.getSurveyQuestions().indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(ConditionalFlowFilter.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        window.ccsdkDebug ? console.log(surveyHandler.getSurveyQuestions()) : '';\r\n    };\r\n    ConditionalFlowFilter.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    ConditionalFlowFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isNumberCheck = function (filterQuestion) {\r\n        if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n     *\r\n     * @param filterQuestion\r\n     * @return\r\n     */\r\n    ConditionalFlowFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalFlowFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n            var questionAnswer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n            var questionAnswerText = questionAnswer != null && questionAnswer.textInput != null ? questionAnswer.textInput : '';\r\n            if (!questionAnswer) {\r\n                return false;\r\n            }\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                if (question.multiSelect instanceof Array) {\r\n                    aAnswer = LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, aAnswer);\r\n                }\r\n                //   console.log('hello', question.multiSelect instanceof Array,surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n                console.log(questionAnswerText, aAnswer);\r\n                if (question.displayType === 'MultiSelect') {\r\n                    var selectedOptions = questionAnswer.textInput.split(',');\r\n                    if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                        iFoundAll = true;\r\n                    }\r\n                }\r\n                else if (questionAnswerText === aAnswer) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            return iFoundAll;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(11);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n            // console.log(this.time);\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            // console.log(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    // console.log(arguments[arguments.length - 1]);\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken, questionId, answerObject) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken, questionTag, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken, questionNote, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n//on exit detect\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(12);\r\nvar DomSurvey_1 = __webpack_require__(44);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(47);\r\nvar Triggers_1 = __webpack_require__(48);\r\nvar Request_1 = __webpack_require__(6);\r\nvar Config_1 = __webpack_require__(5);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        // this.setupSurvey();\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.login = function (cb) {\r\n        var loginURL = Config_1.Config.API_URL + Config_1.Config.POST_LOGIN_TOKEN;\r\n        var loginResponse = Request_1.RequestHelper.post(loginURL, { grant_type: Constants_1.Constants.GRANT_TYPE, username: this.config.username, password: this.config.password });\r\n        var self = this;\r\n        this.debug ? console.log(\"login\") : '';\r\n        loginResponse.then(function (logindata) {\r\n            self.debug ? console.log(logindata) : '';\r\n            self.loginData = logindata;\r\n            if (self.isThrottled) {\r\n                self.getSurveyThrottlingLogic(cb);\r\n            }\r\n            else {\r\n                cb();\r\n                return;\r\n            }\r\n        });\r\n    };\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var getThrottleResponse = Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers);\r\n        var self = this;\r\n        getThrottleResponse.then(function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        });\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var postThrottleResponse = Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers);\r\n        postThrottleResponse.then(function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        });\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var addThrottleUrlResponse = Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers);\r\n        addThrottleUrlResponse.then(function (throttleResponse) {\r\n            this.debug ? console.log(throttleResponse) : '';\r\n        });\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var htmlDir = document.getElementsByTagName('html')[0].getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (htmlDir ? htmlDir : \"ltr\");\r\n        document.getElementsByTagName('html')[0].setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var data = this.survey.fetchQuestions();\r\n        var self = this;\r\n        data.then(function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            //copy data.\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            self.dom.hideLoader();\r\n            self.initSurveyQuestions();\r\n        });\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        self.survey.displayWelcomeQuestion();\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (questionId, answer) {\r\n        //save this in this.surveyHandler\r\n        // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n        this.survey.fillPrefillDirect(questionId, answer);\r\n    };\r\n    Survey.prototype.fillPrefill = function (questionTag, answer) {\r\n        //save this in this.surveyHandler\r\n        this.survey.fillPrefill(questionTag, answer);\r\n    };\r\n    Survey.prototype.fillPrefillByNote = function (questionNote, answer) {\r\n        this.survey.fillPrefillByNote(questionNote, answer);\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(5);\r\nvar Request_1 = __webpack_require__(6);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(43);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar Select_1 = __webpack_require__(8);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost();\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            // let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function () {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        var data = Request_1.RequestHelper.get(surveyUrl);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        return data;\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function () {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            self.postPrefillPartialAnswer();\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (tag, value) {\r\n        this.prefillWithTags[tag.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (note, value) {\r\n        this.prefillWithNote[note.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (questionId, value) {\r\n        this.prefillDirect[questionId] = value;\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        // console.log(this.questions);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function () {\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, this.prefillResponses);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                return response;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (question.id == id) {\r\n                return question;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete) {\r\n        if (complete === void 0) { complete = false; }\r\n        // let data = new FormData();\r\n        //in case of file.\r\n        // let input = document.querySelector('input[type=\"file\"]') ;\r\n        // data.append('file', input.files[0]);\r\n        var question = this.questionsToDisplay[index];\r\n        if (typeof question === 'undefined') {\r\n            //now?\r\n            // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n        }\r\n        var data = {\r\n            comparator: 0,\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        // if(this.isPartialAvailable == false) {\r\n        //   this.answers.push(data);\r\n        //   return;\r\n        // }\r\n        // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        //if this is the last of displayed question\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n        //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n        // } else {\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        // }\r\n        // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        // let result = RequestHelper.post(surveyPartialUrl, \"[\" + JSON.stringify(data) + \"]\");\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, data);\r\n        }\r\n        else {\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, data);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function () {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        for (var answer in this.surveyAnswers) {\r\n            answersAll.push(this.surveyAnswers[answer]);\r\n            lastAnswer = this.surveyAnswers[answer];\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        console.log(lastAnswer);\r\n        var _lastAnswer = {\r\n            text: lastAnswer.textInput,\r\n            number: lastAnswer.numberInput\r\n        };\r\n        this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true);\r\n        return Request_1.RequestHelper.post(postSurveyFinalUrl, finalData);\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (optMin[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, optMin[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (optMax[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, optMax[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.attributes != null && question.attributes.scaleColor.length > 0) {\r\n                            tileColor = question.attributes.scaleColor;\r\n                        }\r\n                        else if (question.presentationMode != null && question.presentationMode.includes(\"Color\")) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\r\n                <style>\\\r\n                #id' + question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : ' + tileColor + ';\\\r\n                }\\\r\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : ' + tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var displayLegend = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend) {\r\n                            if (displayLegend.length > 0) {\r\n                                startRangeLabel_1 = displayLegend[0] ? displayLegend[0] : null;\r\n                                endRangeLabel_1 = displayLegend[1] ? displayLegend[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        // console.log((window as any).isMobile);\r\n                        if (window.isMobile) {\r\n                            if (endRange > 6 && endRange < 11) {\r\n                                optionStyle = 'width:' + ((100 / (endRange - startRange + 1)) - .5) + '%';\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                            options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                        }\r\n                        if ((endRange - startRange + 1) <= 11) {\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                            var optionMaxWidth = (((endRange - startRange + 1) * 38 / 2) - 5) + 'px';\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].includes(\"Male\"))\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Yes\"))\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(multiSelect1);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].includes(\"Male\"))\r\n                                || ((multiSelect.length > 0) && multiSelect[0].includes(\"Yes\"))\r\n                                || ((multiSelect.length > 1) && multiSelect[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(multiSelect);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log('prefillTags', this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    // if (this.isPrefillTags(question)) {\r\n                    //   self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    //   continue;\r\n                    // }\r\n                    if (question.conditionalFilter != null &&\r\n                        (question.conditionalFilter.filterquestions == null\r\n                            || question.conditionalFilter.filterquestions.length == 0)) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        console.log(\"isPrefillTags\", typeof this.prefillWithTags[tag.toLowerCase()]);\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined') {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug ? console.log('fillprefillwithtags', this.prefillWithTags) : '';\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug ? console.log('fillprefillwithtags', tag) : '';\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    window.ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags) : '';\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        var bodyElement = document.\r\n            getElementsByTagName(\"body\")[0];\r\n        this.util.removeClass(bodyElement, \"blurr\");\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(14);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(16)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul {\\n  padding-right: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111;\\n  padding: 10px; }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  margin-left: 147px;\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: calc( 100% - 147px);\\n  z-index: 11;\\n  top: 0;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  right: 0;\\n  left: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  right: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-right: 15px;\\n  text-align: right;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-left: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-left: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 50px 0 0px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-left: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .form-control,\\n.cc-sdk .single-line .cc-question-container__content .form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-right: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: right;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px; }\\n\\n.cc-sdk .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: rtl;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-left: 75px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; }\\n  .cc-sdk .cc-question-container__content {\\n    max-height: 100px; } }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-left: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: left;\\n    bottom: 9px;\\n    left: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-left: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-left: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: initial;\\n    left: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: initial;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-right: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    right: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: right;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: right;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-right: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .detail-box .cc-question-container__content .form-control,\\n  .cc-sdk .single-line .cc-question-container__content .form-control {\\n    margin-right: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: right;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: initial;\\n    right: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    left: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-question-container__required-label {\\n    display: block;\\n    right: 0;\\n    top: 2px; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk ul {\\n  padding-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-popup-container__close {\\n  left: initial;\\n  right: 0;\\n  top: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: initial;\\n  right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-question-container {\\n  /* margin: auto; */\\n  margin-right: 147px;\\n  margin-left: 0;\\n  left: 0;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__validation {\\n  left: 0%;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  left: -2px;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 15px !important;\\n  padding-right: 15px !important;\\n  vertical-align: middle; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-left: 0 !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n  padding-left: 15px;\\n  padding-right: 0;\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container:before {\\n  margin-right: -4px;\\n  margin-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n  margin: 0 0px 0 50px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .hl.dropdown {\\n  background-position: 3% center;\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px;\\n  margin-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0;\\n  padding-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-nps-image {\\n  right: 31px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content {\\n  text-align: left; }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    padding-right: 20px;\\n    padding-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px;\\n    margin-left: 0px; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: auto;\\n    left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li span {\\n    padding-left: 25px !important;\\n    padding-right: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px;\\n    padding-left: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container {\\n    right: initial;\\n    left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    text-align: left;\\n    width: 100%;\\n    margin-left: 5px;\\n    max-width: 100%; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n    padding-left: 15px;\\n    padding-right: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    padding-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: 0;\\n    left: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: 0;\\n    right: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: right;\\n  font-size: 13px;\\n  height: 38px;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin: 0 .25%;\\n  cursor: pointer; }\\n\\n.cc-sdk .option-number-item.option-zero {\\n  background: #853838; }\\n\\n.cc-sdk .option-number-item.option-zero.selected,\\n.cc-sdk .option-number-item.option-zero:hover {\\n  background: #572526; }\\n\\n.cc-sdk .option-number-item.option-one {\\n  background: #9e4343; }\\n\\n.cc-sdk .option-number-item.option-one.selected,\\n.cc-sdk .option-number-item.option-one:hover {\\n  background: #642728; }\\n\\n.cc-sdk .option-number-item.option-two {\\n  background: #c14d4d; }\\n\\n.cc-sdk .option-number-item.option-two.selected,\\n.cc-sdk .option-number-item.option-two:hover {\\n  background: #712827; }\\n\\n.cc-sdk .option-number-item.option-three {\\n  background: #d94d4d; }\\n\\n.cc-sdk .option-number-item.option-three.selected,\\n.cc-sdk .option-number-item.option-three:hover {\\n  background: #7c2828; }\\n\\n.cc-sdk .option-number-item.option-four {\\n  background: #ee4d4d; }\\n\\n.cc-sdk .option-number-item.option-four.selected,\\n.cc-sdk .option-number-item.option-four:hover {\\n  background: #852828; }\\n\\n.cc-sdk .option-number-item.option-five {\\n  background: #ff4d4d; }\\n\\n.cc-sdk .option-number-item.option-five.selected,\\n.cc-sdk .option-number-item.option-five:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-six {\\n  background: #ff8c4d; }\\n\\n.cc-sdk .option-number-item.option-six.selected,\\n.cc-sdk .option-number-item.option-six:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-seven {\\n  background: #ffc74d; }\\n\\n.cc-sdk .option-number-item.option-seven.selected,\\n.cc-sdk .option-number-item.option-seven:hover {\\n  background: #856728; }\\n\\n.cc-sdk .option-number-item.option-eight {\\n  background: #f5eb4d; }\\n\\n.cc-sdk .option-number-item.option-eight.selected,\\n.cc-sdk .option-number-item.option-eight:hover {\\n  background: #7f7a28; }\\n\\n.cc-sdk .option-number-item.option-nine {\\n  background: #73ca81; }\\n\\n.cc-sdk .option-number-item.option-nine.selected,\\n.cc-sdk .option-number-item.option-nine:hover {\\n  background: #3b6942; }\\n\\n.cc-sdk .option-number-item.option-ten {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-ten.selected,\\n.cc-sdk .option-number-item.option-ten:hover {\\n  background: #285e40; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-seven {\\n  margin-right: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-nine {\\n  margin-right: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  bottom: -25px;\\n  color: #424242;\\n  font-size: 13px;\\n  right: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 7px;\\n  bottom: -12px; }\\n\\n.cc-sdk .option-right-rating-text {\\n  right: auto;\\n  left: 5px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 36px;\\n  bottom: -12px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box, .cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-left: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one.selected,\\n.cc-sdk .option-smile-box.one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two.selected,\\n.cc-sdk .option-smile-box.two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three.selected,\\n.cc-sdk .option-smile-box.three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four.selected,\\n.cc-sdk .option-smile-box.four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five.selected,\\n.cc-sdk .option-smile-box.five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-right: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center;\\n  background: none; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-left: 68px;\\n  width: 30px;\\n  padding-right: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-left: 0px;\\n  width: auto;\\n  padding-right: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-left: 13px; }\\n\\n.cc-sdk .option-csat span {\\n  display: inline-block;\\n  vertical-align: top;\\n  font-size: 12px;\\n  padding-right: 25px;\\n  position: relative;\\n  top: -10px;\\n  text-align: right;\\n  /* min-height: 32px; */\\n  width: 100%; }\\n\\n.cc-sdk .option-csat .cc-checkbox {\\n  top: 8px; }\\n\\n.cc-sdk .option-csat .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-csat .cc-checkbox.cc-radio label:before {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-left: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 16px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 29px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-right: 74px;\\n    top: 0; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: 19px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: right;\\n    font-size: 15px;\\n    height: 35px;\\n    margin-left: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    bottom: -44px;\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: left; }\\n  .cc-sdk .option-smile-box img, .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; } }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  right: 0px; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  right: 0px;\\n  line-height: 100px;\\n  left: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n/*cc-question-container color scale css*/\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-left: 45px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-number-item {\\n  margin-left: 1px;\\n  margin-right: 0px;\\n  float: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n  right: calc(100% - 418px);\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n  left: 0px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  right: 8px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  right: 13px;\\n  width: auto !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  left: 2px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .rating-color {\\n  position: relative; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img {\\n  margin-left: 29px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n  margin-right: 19px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n  padding-left: 25px;\\n  text-align: left;\\n  padding-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 7px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 35px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat {\\n  width: auto;\\n  padding-right: 0px;\\n  margin-left: 13px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n  background-position: calc(100% - ( 100% - 19px)) center;\\n  text-align: left; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    margin-right: 0px;\\n    margin-left: 10px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 10px;\\n    margin-right: 86px !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    right: 17px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 7px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 20px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    padding-left: 0px;\\n    padding-right: 5px;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-left: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    background-position: calc(100% - ( 100% - 30px)) center; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n    padding-left: 39px;\\n    text-align: left;\\n    padding-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 10px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n    left: 10px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    right: calc(100% - 322px);\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    right: 13px;\\n    width: auto !important; } }\\n\\n@media (max-width: 381px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    right: calc(100% - 258px);\\n    left: initial !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 22px 0 84px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: right;\\n  padding: 5px 5px 5px 20px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  left: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-left: 1px solid #222;\\n  transform: rotate(-45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  right: 0;\\n  left: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(calc( -100% - 65px)); }\\n\\n.cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( -100% + 75px)); }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: right;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-right: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger {\\n  padding: 0 84px 0 22px;\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  right: 2px;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option {\\n  text-align: left; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 0px 4px 4px 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 4px 0 0px 4px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  position: relative;\\n  text-align: right;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before, .cc-sdk .cc-checkbox label:after {\\n  bottom: 0;\\n  content: \\\"\\\";\\n  right: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  margin-left: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-left-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  right: 4px;\\n  top: -3px;\\n  transform: rotate(45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-right: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-right: 15px; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li span {\\n  padding: 10px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span {\\n    padding: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: inline-block;\\n    padding-left: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  right: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: right;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.range-slider {\\n  height: 50px;\\n  padding-top: 9px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  top: 51px;\\n  right: 0px;\\n  left: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .range {\\n    width: 100%; } }\\n\\n.cc-sdk input.range.blue::-moz-range-track,\\n.cc-sdk input.range.blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .chart canvas {\\n  right: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .loader {\\n  height: 21px;\\n  right: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 767px) {\\n  .cc-sdk .chart canvas {\\n    margin-right: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n  left: 0;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .loader {\\n  left: 28px;\\n  right: initial; }\\n\\n@media (min-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n    margin-left: 10px;\\n    margin-right: 0; } }\\n\\n/** Utilities **/\\n.show {\\n  display: block !important; }\\n\\n.show-inline {\\n  display: inline-block !important; }\\n\\n.hide {\\n  display: none !important; }\\n\\n.bottom {\\n  bottom: 0; }\\n\\n.right {\\n  left: 0; }\\n\\n.left {\\n  right: 0; }\\n\\n.top {\\n  top: 0; }\\n\\n/* Begin required CSS. */\\n/* End required CSS. */\\n.overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  right: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.overlay.glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk .form-control::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 767px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 767px) {\\n  .mobile-hide {\\n    display: none; }\\n  .loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; }\\n  .overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); }\\n  iframe, body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\\n    -webkit-filter: blur(15px);\\n    -moz-filter: blur(15px);\\n    -ms-filter: blur(15px);\\n    -o-filter: blur(15px);\\n    filter: blur(15px); } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n  right: 0;\\n  left: initial;\\n  margin-right: 75px;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='Submit_Icon'%3E%3Cg id='Oval-4'%3E%3Cg id='path-1-link' fill-rule='nonzero' fill='%23white'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3Cg id='path-1-link' fill='%23FCAF18'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy' transform='translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 '%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\\\"); }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 30px;\\n    right: initial;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0;\\n    left: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-sdk .red .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='white' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='rgba(210, 42, 53, 1)' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23FFFFFF'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\"); }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(-5px);\\n  -moz-transform: translateX(-5px);\\n  -ms-transform: translateX(-5px);\\n  -o-transform: translateX(-5px);\\n  transform: translateX(-5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.timer {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(90deg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk svg.timer {\\n  left: 0;\\n  right: initial; }\\n\\n.cc-sdk svg.timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  right: 0;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\" : \".cc-sdk ul {\\n  padding-left: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111;\\n  padding: 10px; }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  margin-right: 147px;\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: calc( 100% - 147px);\\n  z-index: 11;\\n  top: 0;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  left: 0;\\n  right: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  left: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-left: 15px;\\n  text-align: left;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-right: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-right: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 0px 0 50px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-right: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .form-control,\\n.cc-sdk .single-line .cc-question-container__content .form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-left: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: left;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px; }\\n\\n.cc-sdk .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: ltr;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-right: 75px;\\n  font-size: 16px /*rtl:14px*/;\\n  cursor: pointer;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; }\\n  .cc-sdk .cc-question-container__content {\\n    max-height: 100px; } }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-right: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: right;\\n    bottom: 9px;\\n    right: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-right: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-right: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: initial;\\n    right: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: initial;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-left: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    left: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: left;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: left;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-left: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .detail-box .cc-question-container__content .form-control,\\n  .cc-sdk .single-line .cc-question-container__content .form-control {\\n    margin-left: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: left;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: initial;\\n    left: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    right: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-question-container__required-label {\\n    display: block;\\n    left: 0;\\n    top: 2px; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk ul {\\n  padding-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-popup-container__close {\\n  right: initial;\\n  left: 0;\\n  top: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: initial;\\n  left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk.cc-question-container {\\n  /* margin: auto; */\\n  margin-left: 147px;\\n  margin-right: 0;\\n  right: 0;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__validation {\\n  right: 0%;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  right: -2px;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 15px !important;\\n  padding-left: 15px !important;\\n  vertical-align: middle; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-right: 0 !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n  padding-right: 15px;\\n  padding-left: 0;\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container:before {\\n  margin-left: -4px;\\n  margin-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n  margin: 0 50px 0 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .hl.dropdown {\\n  background-position: 97% center;\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px;\\n  margin-right: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-nps-image {\\n  left: 31px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content {\\n  text-align: right; }\\n\\n@media (min-width: 767px) and (max-width: 1024px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    padding-left: 20px;\\n    padding-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px;\\n    margin-right: 0px; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: auto;\\n    right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li span {\\n    padding-right: 25px !important;\\n    padding-left: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px;\\n    padding-right: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container {\\n    left: initial;\\n    right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .multiline-box {\\n    margin: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__text {\\n    text-align: right;\\n    width: 100%;\\n    margin-right: 5px;\\n    max-width: 100%; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li span {\\n    padding-right: 15px;\\n    padding-left: 0px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    padding-right: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: 0;\\n    right: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: 0;\\n    left: auto; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important;\\n    margin-right: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: left;\\n  font-size: 13px;\\n  height: 38px;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin: 0 .25%;\\n  cursor: pointer; }\\n\\n.cc-sdk .option-number-item.option-zero {\\n  background: #853838; }\\n\\n.cc-sdk .option-number-item.option-zero.selected,\\n.cc-sdk .option-number-item.option-zero:hover {\\n  background: #572526; }\\n\\n.cc-sdk .option-number-item.option-one {\\n  background: #9e4343; }\\n\\n.cc-sdk .option-number-item.option-one.selected,\\n.cc-sdk .option-number-item.option-one:hover {\\n  background: #642728; }\\n\\n.cc-sdk .option-number-item.option-two {\\n  background: #c14d4d; }\\n\\n.cc-sdk .option-number-item.option-two.selected,\\n.cc-sdk .option-number-item.option-two:hover {\\n  background: #712827; }\\n\\n.cc-sdk .option-number-item.option-three {\\n  background: #d94d4d; }\\n\\n.cc-sdk .option-number-item.option-three.selected,\\n.cc-sdk .option-number-item.option-three:hover {\\n  background: #7c2828; }\\n\\n.cc-sdk .option-number-item.option-four {\\n  background: #ee4d4d; }\\n\\n.cc-sdk .option-number-item.option-four.selected,\\n.cc-sdk .option-number-item.option-four:hover {\\n  background: #852828; }\\n\\n.cc-sdk .option-number-item.option-five {\\n  background: #ff4d4d; }\\n\\n.cc-sdk .option-number-item.option-five.selected,\\n.cc-sdk .option-number-item.option-five:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-six {\\n  background: #ff8c4d; }\\n\\n.cc-sdk .option-number-item.option-six.selected,\\n.cc-sdk .option-number-item.option-six:hover {\\n  background: #844828; }\\n\\n.cc-sdk .option-number-item.option-seven {\\n  background: #ffc74d; }\\n\\n.cc-sdk .option-number-item.option-seven.selected,\\n.cc-sdk .option-number-item.option-seven:hover {\\n  background: #856728; }\\n\\n.cc-sdk .option-number-item.option-eight {\\n  background: #f5eb4d; }\\n\\n.cc-sdk .option-number-item.option-eight.selected,\\n.cc-sdk .option-number-item.option-eight:hover {\\n  background: #7f7a28; }\\n\\n.cc-sdk .option-number-item.option-nine {\\n  background: #73ca81; }\\n\\n.cc-sdk .option-number-item.option-nine.selected,\\n.cc-sdk .option-number-item.option-nine:hover {\\n  background: #3b6942; }\\n\\n.cc-sdk .option-number-item.option-ten {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-ten.selected,\\n.cc-sdk .option-number-item.option-ten:hover {\\n  background: #285e40; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-seven {\\n  margin-left: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item.option-nine {\\n  margin-left: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text {\\n  bottom: -25px;\\n  color: #424242;\\n  font-size: 13px;\\n  left: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto;\\n  top: 45px; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 7px;\\n  bottom: -12px; }\\n\\n.cc-sdk .option-right-rating-text {\\n  left: auto;\\n  right: 5px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 36px;\\n  bottom: -12px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box, .cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-right: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.one.selected,\\n.cc-sdk .option-smile-box.one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.two.selected,\\n.cc-sdk .option-smile-box.two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.three.selected,\\n.cc-sdk .option-smile-box.three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.four.selected,\\n.cc-sdk .option-smile-box.four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.five.selected,\\n.cc-sdk .option-smile-box.five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-left: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center;\\n  background: none; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-right: 68px;\\n  width: 30px;\\n  padding-left: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-right: 0px;\\n  width: auto;\\n  padding-left: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-right: 13px; }\\n\\n.cc-sdk .option-csat span {\\n  display: inline-block;\\n  vertical-align: top;\\n  font-size: 12px;\\n  padding-left: 25px;\\n  position: relative;\\n  top: -10px;\\n  text-align: left;\\n  /* min-height: 32px; */\\n  width: 100%; }\\n\\n.cc-sdk .option-csat .cc-checkbox {\\n  top: 8px; }\\n\\n.cc-sdk .option-csat .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-csat .cc-checkbox.cc-radio label:before {\\n  height: 15px;\\n  width: 15px; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 4px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-right: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 16px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 29px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-left: 74px;\\n    top: 0; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: 19px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: left;\\n    font-size: 15px;\\n    height: 35px;\\n    margin-right: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    bottom: -44px;\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: right; }\\n  .cc-sdk .option-smile-box img, .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; } }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0px; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  left: 0px;\\n  line-height: 100px;\\n  right: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n/*cc-question-container color scale css*/\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-right: 45px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-number-item {\\n  margin-right: 1px;\\n  margin-left: 0px;\\n  float: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n  left: calc(100% - 418px);\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n  right: 0px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  left: 8px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  left: 13px;\\n  width: auto !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  right: 2px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .rating-color {\\n  position: relative; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img {\\n  margin-right: 29px;\\n  margin-left: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n  margin-left: 19px;\\n  margin-right: 0px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n  padding-right: 25px;\\n  text-align: right;\\n  padding-left: 0; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 7px;\\n  right: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 35px;\\n  left: initial !important; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat {\\n  width: auto;\\n  padding-left: 0px;\\n  margin-right: 13px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n  background-position: calc( 100% - 19px) center;\\n  text-align: right; }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    margin-left: 0px;\\n    margin-right: 10px; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 10px;\\n    margin-left: 86px !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    left: 17px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 7px;\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 20px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-smile-box img, html[dir=\\\"rtl\\\"] .cc-sdk .option-star-box img {\\n    padding-right: 0px;\\n    padding-left: 5px;\\n    margin-right: 0;\\n    margin-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-right: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box.selected,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box:hover,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box {\\n    background-position: calc( 100% - 30px) center; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-csat.option-smile-box span {\\n    padding-right: 39px;\\n    text-align: right;\\n    padding-left: 0; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 10px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-left-rating-text {\\n    right: 10px;\\n    left: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    left: calc(100% - 322px);\\n    right: initial !important; }\\n  html[dir=\\\"rtl\\\"] .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    left: 13px;\\n    width: auto !important; } }\\n\\n@media (max-width: 381px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .option-right-rating-text {\\n    left: calc(100% - 258px);\\n    right: initial !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 84px 0 22px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: left;\\n  padding: 5px 20px 5px 5px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  right: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-right: 1px solid #222;\\n  transform: rotate(45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(-135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(calc( -100% - 65px)); }\\n\\n.cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( -100% + 75px)); }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: left;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-left: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger {\\n  padding: 0 22px 0 84px;\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  left: 2px;\\n  right: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option {\\n  text-align: right; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 0px 0 4px; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 0 4px 4px 0px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  position: relative;\\n  text-align: left;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before, .cc-sdk .cc-checkbox label:after {\\n  bottom: 0;\\n  content: \\\"\\\";\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  margin-right: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-right-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  left: 4px;\\n  top: -3px;\\n  transform: rotate(-45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 10px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-left: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-left: 15px; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li span {\\n  padding: 10px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 767px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span {\\n    padding: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: inline-block;\\n    padding-right: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  left: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: left;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.range-slider {\\n  height: 50px;\\n  padding-top: 9px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  top: 51px;\\n  left: 0px;\\n  right: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .range {\\n    width: 100%; } }\\n\\n.cc-sdk input.range.blue::-moz-range-track,\\n.cc-sdk input.range.blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .chart canvas {\\n  left: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .loader {\\n  height: 21px;\\n  left: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 767px) {\\n  .cc-sdk .chart canvas {\\n    margin-left: 10px; } }\\n\\n@media (max-width: 767px) {\\n  .cc-sdk .loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n  right: 0;\\n  left: initial; }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .loader {\\n  right: 28px;\\n  left: initial; }\\n\\n@media (min-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .chart canvas {\\n    margin-right: 10px;\\n    margin-left: 0; } }\\n\\n/** Utilities **/\\n.show {\\n  display: block !important; }\\n\\n.show-inline {\\n  display: inline-block !important; }\\n\\n.hide {\\n  display: none !important; }\\n\\n.bottom {\\n  bottom: 0; }\\n\\n.right {\\n  right: 0; }\\n\\n.left {\\n  left: 0; }\\n\\n.top {\\n  top: 0; }\\n\\n/* Begin required CSS. */\\n/* End required CSS. */\\n.overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.overlay.glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk .form-control::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 767px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 767px) {\\n  .mobile-hide {\\n    display: none; }\\n  .loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; }\\n  .overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); }\\n  iframe, body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\\n    -webkit-filter: blur(15px);\\n    -moz-filter: blur(15px);\\n    -ms-filter: blur(15px);\\n    -o-filter: blur(15px);\\n    filter: blur(15px); } }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n  left: 0;\\n  right: initial;\\n  margin-left: 75px;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='Submit_Icon'%3E%3Cg id='Oval-4'%3E%3Cg id='path-1-link' fill-rule='nonzero' fill='%23white'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3Cg id='path-1-link' fill='%23FCAF18'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy' transform='translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 '%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\\\"); }\\n\\n@media (max-width: 767px) {\\n  html[dir=\\\"rtl\\\"] .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 30px;\\n    left: initial;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0;\\n    right: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-sdk .red .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='white' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='rgba(210, 42, 53, 1)' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23FFFFFF'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\"); }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(5px);\\n  -moz-transform: translateX(5px);\\n  -ms-transform: translateX(5px);\\n  -o-transform: translateX(5px);\\n  transform: translateX(5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.timer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(-90deg); }\\n\\nhtml[dir=\\\"rtl\\\"] .cc-sdk svg.timer {\\n  right: 0;\\n  left: initial; }\\n\\n.cc-sdk svg.timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(17);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id=\\\"{{surveyToken}}-survey\\\">\\r\\n\\t<div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\" >\\r\\n\\t\\t<div class=\\\"overlay glass\\\"></div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-left-icon\\\">\\r\\n\\t\\t\\t<span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span>\\r\\n\\t\\t\\t<ul class=\\\"loader\\\">\\r\\n\\t\\t\\t  <li class=\\\"chart\\\" data-percent=\\\"75\\\"></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-right-icon\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg\\\" class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-survey-container\\\">\\r\\n\\t\\t\\t<div class=\\\"cc-survey-content\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"cc-questions-container\\\">\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"submit-icon act-cc-button-next\\\"></div>\\r\\n\\t\\t\\t<div class=\\\"{{location}} progress-bar\\\" id=\\\"progressBar\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"progress-line\\\" id=\\\"progress-line\\\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id=\\\"{{surveyToken}}-welcome\\\">\\r\\n  <div class=\\\"overlay glass\\\"></div>\\r\\n  <div class=\\\"cc-loaderimg hide\\\">\\r\\n      <svg version=\\\"1.1\\\" id=\\\"L9\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\r\\n        viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=\\\"preserve\\\">\\r\\n        <path fill=\\\"red\\\" d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\">\\r\\n          <animateTransform attributeName=\\\"transform\\\" attributeType=\\\"XML\\\" type=\\\"rotate\\\" dur=\\\"1s\\\" from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=\\\"indefinite\\\"\\r\\n          />\\r\\n        </path>\\r\\n      </svg>\\r\\n  </div>\\r\\n    <svg class=\\\"timer\\\">\\r\\n      <circle r=\\\"8\\\" cx=\\\"20\\\" cy=\\\"20\\\" stroke=\\\"black\\\" stroke-width=\\\"0\\\" fill=\\\"red\\\"></circle>\\r\\n    </svg>\\r\\n  <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\">\\r\\n  <div class=\\\"cc-message-box\\\">\\r\\n    <h2 class=\\\"cc-message-box__text\\\">{{question}}</h2>\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"cc-message-box__btn act-cc-survey-start mobile-hide\\\" id=\\\"\\\">{{button}}</a>\\r\\n    <div class=\\\"submit-icon act-cc-survey-start desktop-hide\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"singleline\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"number\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n      <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n  \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"multiline\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n        <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <textarea class=\\\"multiline-box form-control\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Share your thoughts...\\\" ></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"checkbox\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-big-list-container\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\" >\\r\\n      {{options}}\\r\\n     \\r\\n      <!-- <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Troubleshoot\\\" name=\\\"\\\" id=\\\"check-two\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-two\\\" >\\r\\n          </label>\\r\\n        </div>\\r\\n            <span><label for=\\\"check-two\\\">Troubleshoot an error</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Understand\\\" name=\\\"\\\" id=\\\"check-three\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-three\\\">\\r\\n          </label>\\r\\n        </div>\\r\\n            <span><label  for=\\\"check-three\\\">Understand a product</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Buy a\\\" name=\\\"\\\" id=\\\"check-four\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-four\\\"></label>\\r\\n        </div>\\r\\n            <span><label for=\\\"check-four\\\">Buy a product</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox\\\">\\r\\n          <input type=\\\"checkbox\\\" value=\\\"Contact\\\" name=\\\"\\\" id=\\\"check-five\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"check-five\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"check-five\\\">Contact customer care</label></span>\\r\\n      </li> -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=\\\"radio\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n           {{options}}\\r\\n\\r\\n      <!-- <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\" value=\\\"yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-yes\\\">Yes</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-no\\\" value=\\\"yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-no\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-no\\\">No</label></span>\\r\\n      </li> -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--more-option\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"radioMore\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-one\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-one\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-one\\\">Learn more about a product</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-two\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-two\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-two\\\">Troubleshoot an error</label></span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-three\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-three\\\"></label>\\r\\n        </div>\\r\\n        <span><label for=\\\"service-three\\\">Understand a product</label></span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"radioImage\\\" data-id=\\\"{{questionId}}\\\" >\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n    {{options}}\\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=\\\"scale\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      {{optionsRange}}\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\">\\r\\n        <img src=\\\"{{mobileImageUrl}}\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n        <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"0\\\" title=\\\"0\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"83,193,62,228,38,212,23,193,57,167\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"54,165,21,189,11,173,4,154,2,140,43,134\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"43,131,2,135,1,118,5,93,8,83,45,97\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"48,92,10,78,17,61,28,44,39,32,66,66\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"70,61,42,30,55,20,70,14,91,5,101,45\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"105,44,92,5,113,2,134,3,147,5,139,46\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"141,46,150,6,169,11,184,19,200,30,172,63\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"175,63,202,34,218,48,227,66,232,78,194,93\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"196,97,233,81,239,103,240,118,240,135,199,130\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"199,135,240,140,236,159,229,175,221,189,187,167\\\" shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"183,169,217,191,204,212,178,229,158,192\\\" shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\">\\r\\n        <img src=\\\"{{mobileImageUrl}}\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map2\\\" />\\r\\n        <map name=\\\"Map2\\\" id=\\\"Map2\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"67,180,40,210,26,195,15,176,11,169,47,152\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"48,149,9,163,2,140,1,124,3,110,45,115\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"44,110,4,105,8,79,17,67,22,57,58,79\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"58,76,24,54,33,39,48,29,65,18,85,54\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"87,51,68,15,85,7,106,3,120,3,122,45\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"123,42,123,0,141,2,163,8,176,14,157,52\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"159,53,180,16,201,30,212,44,220,54,186,77\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"188,80,222,55,229,69,236,83,241,108,199,111\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"200,116,239,112,241,128,240,146,234,165,196,150\\\" shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\"  class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,153,233,168,225,187,212,202,202,212,175,181\\\" shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <span class=\\\"clearfix\\\"></span>\\r\\n      <span class=\\\"option-left-rating-text {{optionLeftExtraClass}}\\\" style=\\\"max-width:maxWidth;\\\" >{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text {{optionRightExtraClass}}\\\" style=\\\"max-width:maxWidth;\\\" >{{rightLabel}}</span>\\r\\n      <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n   {{style}}\\r\\n  \";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n      <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n      <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n      <div class=\\\"cc-question-container__list\\\">\\r\\n        <span class=\\\"option-csat option-smile-box one\\\" data-rating=\\\"1\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Completely Agree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box two\\\" data-rating=\\\"2\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Somewhat Agree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box three\\\" data-rating=\\\"3\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Agree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box four\\\" data-rating=\\\"4\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Somewhat Disagree</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box five\\\" data-rating=\\\"5\\\">\\r\\n           <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Completely Disagree</span>\\r\\n      </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n      <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n      <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n      <div class=\\\"cc-question-container__list\\\">\\r\\n        <span class=\\\"option-csat option-smile-box one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Extremely Satisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Very Satisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Satisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Somewhat Dissatisfied</span>\\r\\n      </span>\\r\\n        <span class=\\\"option-csat option-smile-box five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n          <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-yes\\\">\\r\\n          <label class=\\\"ui checkbox\\\" for=\\\"service-yes\\\"></label>\\r\\n        </div>\\r\\n        <span>Very Dissatisfied</span>\\r\\n      </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"nps\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div class=\\\"cc-options-container\\\">\\r\\n          <span data-rating=\\\"0\\\" class=\\\"option-number-item mobile-hide option-zero\\\">0</span>\\r\\n          <span data-rating=\\\"1\\\" class=\\\"option-number-item mobile-hide option-one\\\">1</span>\\r\\n          <span data-rating=\\\"2\\\" class=\\\"option-number-item mobile-hide option-two\\\">2</span>\\r\\n          <span data-rating=\\\"3\\\" class=\\\"option-number-item mobile-hide option-three\\\">3</span>\\r\\n          <span data-rating=\\\"4\\\" class=\\\"option-number-item mobile-hide option-four\\\">4</span>\\r\\n          <span data-rating=\\\"5\\\" class=\\\"option-number-item mobile-hide option-five\\\">5</span>\\r\\n          <span data-rating=\\\"6\\\" class=\\\"option-number-item mobile-hide option-six\\\">6</span>\\r\\n          <span data-rating=\\\"7\\\" class=\\\"option-number-item mobile-hide option-seven\\\">7</span>\\r\\n          <span data-rating=\\\"8\\\" class=\\\"option-number-item mobile-hide option-eight\\\">8</span>\\r\\n          <span data-rating=\\\"9\\\" class=\\\"option-number-item mobile-hide option-nine\\\">9</span>\\r\\n          <span data-rating=\\\"10\\\" class=\\\"option-number-item mobile-hide option-ten\\\">10</span>\\r\\n          <div class=\\\"circle-image desktop-hide\\\">\\r\\n            <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/circle.svg\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n            <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"86,199,61,177,25,201,38,219,52,230,66,238\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"59,173,22,198,12,180,5,160,4,146,44,138\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"44,134,49,101,8,84,3,98,0,116,2,141\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"49,97,71,68,42,33,25,54,14,71,10,81\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"74,65,106,47,94,5,70,14,46,31\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"144,47,154,4,135,1,114,1,98,4,108,48\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"149,48,157,5,183,15,209,30,180,65\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"183,67,211,34,231,56,243,79,204,97\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"203,100,245,85,251,106,252,124,251,141,207,135\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"208,140,251,146,245,169,231,197,194,172\\\" shape=\\\"poly\\\">\\r\\n              <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,179,229,201,218,218,202,230,185,238,166,200\\\" shape=\\\"poly\\\">\\r\\n            </map>\\r\\n            <!-- <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"49,192,91,229,111,191,83,169\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"29,139,47,189,83,166,70,135\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"35,83,29,136,71,131,75,96\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"36,79,67,35,95,66,75,94\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"69,32,117,7,127,49,97,64\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"120,7,175,7,165,48,131,48\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"178,7,168,49,197,64,225,32\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"200,67,220,95,260,80,229,35\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"221,98,224,131,266,136,259,83\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"224,135,266,139,248,191,212,167\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"184,191,203,230,246,194,211,169\\\" />\\r\\n            </map> -->\\r\\n            <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n        </div>    \\r\\n        <span class=\\\"clearfix\\\"></span>\\r\\n        <span class=\\\"option-left-rating-text mobile-hide\\\">Not at all likely</span>\\r\\n        <span class=\\\"option-right-rating-text mobile-hide\\\">Very likely</span>\\r\\n        <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n      </div>\\r\\n    \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select sources\\\" placeholder=\\\"Select\\\">\\r\\n          {{options}}\\r\\n        </select>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select sources\\\" placeholder=\\\"Select\\\" data-type=\\\"multiple\\\">\\r\\n          {{options}}\\r\\n        </select>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <span class=\\\"option-smile-box one\\\" data-rating=\\\"1\\\"></span>\\r\\n      <span class=\\\"option-smile-box two\\\" data-rating=\\\"2\\\"></span>\\r\\n      <span class=\\\"option-smile-box three\\\" data-rating=\\\"3\\\"></span>\\r\\n      <span class=\\\"option-smile-box four\\\" data-rating=\\\"4\\\"></span>\\r\\n      <span class=\\\"option-smile-box five\\\" data-rating=\\\"5\\\"></span>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=\\\"max-width:200px\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=\\\"max-width:200px\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n        <span class=\\\"option-smile-box five\\\" data-rating=\\\"5\\\"></span>\\r\\n        <span class=\\\"option-smile-box four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box two\\\" data-rating=\\\"2\\\"></span>\\r\\n      <span class=\\\"option-smile-box one\\\" data-rating=\\\"1\\\"></span>\\r\\n      <span class=\\\"option-right-rating-text\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-left-rating-text\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"star\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"1\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"2\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"3\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"4\\\"></span>\\r\\n      <span class=\\\"option-star-box\\\" data-rating=\\\"5\\\"></span>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\" style=\\\"max-width:200px;\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\" style=\\\"max-width:200px;\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"slider\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n        <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n        <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n        \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content rating-color range-slider\\\" id=\\\"{{questionId}}\\\">\\r\\n        <div class=\\\"cc-question-container__slider\\\">\\r\\n            <input type=\\\"range\\\" name=\\\"\\\" value=\\\"{{min}}\\\" min=\\\"{{min}}\\\" max=\\\"{{max}}\\\" class=\\\"range blue\\\">\\r\\n            <span class=\\\"option-left-rating-text\\\">{{minLabel}}{{min}}</span>\\r\\n            <span class=\\\"option-right-rating-text\\\">{{maxLabel}}{{max}}</span>\\r\\n            <span class=\\\"slider-tip act-slider-tip\\\"></span>\\r\\n            <!-- <span class=\\\"slider-tip act-slider-tip\\\">{{min}}</span> -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-img-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label class=\\\"ui checkbox\\\" for=\\\"{{qId}}-img-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span><label for=\\\"{{qId}}-img-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\"><img src=\\\"{{image}}\\\" /> {{label}}</label></span>\\r\\n</li>\\r\\n\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label class=\\\"ui checkbox\\\" for=\\\"{{qId}}-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span><label for=\\\"{{qId}}-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label></span>\\r\\n</li>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n    <div class=\\\"cc-checkbox\\\">\\r\\n      <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n      <label class=\\\"ui checkbox\\\" for=\\\"check-{{labelFor}}\\\">\\r\\n      </label>\\r\\n    </div>\\r\\n    <span><label for=\\\"check-{{labelFor}}\\\">{{label}}</label></span>\\r\\n  </li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n    <div class=\\\"cc-checkbox\\\">\\r\\n      <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n      <label class=\\\"ui checkbox\\\" for=\\\"check-{{labelFor}}\\\">\\r\\n      </label>\\r\\n    </div>\\r\\n    <span><label for=\\\"check-{{labelFor}}\\\"><img src=\\\"{{image}}\\\" /> {{label}}</label></span>\\r\\n  </li>  \\r\\n\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=\\\"cc-thankyou-container\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>{{question}}</p>\\r\\n    <p class=\\\"cc-thankyou-powered\\\"><span class=\\\"cc-thankyou-logo\\\"></span>Delight powered by Cloudcherry</p>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <!-- <button>{{button}}</button> -->\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n      <p class=\\\"\\\"><span class=\\\"cc-question-container__required-label\\\"></span>Select language</p>\\r\\n      <span class=\\\"cc-question-container__required\\\">* Mandatory</span>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n      <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n      <div class=\\\"cc-select-wrapper\\\">\\r\\n        <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select sources\\\" placeholder=\\\"Select\\\">\\r\\n            {{options}}\\r\\n          </select>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(4);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionaText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionaText_1 = question.text.split(':');\r\n            if (question.text.includes(\":\")) {\r\n                conditionaText_1 = conditionaText_1[0] + ': <br><span class=\"text-normal\">' + conditionaText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionaText_1 = conditionaText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionaText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionaText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionaText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionaText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (ConditionalTextFilter.isAnd(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalTextFilter.isOr(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        conditionaText = fOption.text;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionaText;\r\n    };\r\n    ConditionalTextFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isNumberCheck = function (filterQuestion) {\r\n        if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"gt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"eq\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                        iFoundAll = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        iFoundAll = false;\r\n                        break;\r\n                    }\r\n            }\r\n            if (iFoundAll)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(8);\r\nvar Theme_1 = __webpack_require__(45);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar Slider_1 = __webpack_require__(46);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (typeof this.ccsdk.surveyData.translated == undefined || Object.keys(this.ccsdk.surveyData.translated).length < 1) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    console.log('test regex text', regex.test(this.qResponse.text));\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            window.ccsdkDebug ? console.log('previous answer', this.ccsdk.survey.answers[this.currentQuestionId]) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        window.ccsdkDebug ? console.log('next question q response end', this.qResponse) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        window.ccsdkDebug ? console.log(this.qIndex) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"language select - previous listeners exists\") : '';\r\n            this.removePrevListener('.cc-language-select');\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"scale question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('scale question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('scale previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"nps question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            console.log(qId);\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n                console.log(c, 'control');\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            window.ccsdkDebug ? console.log('Checkbox selected', rating) : '';\r\n            console.log('Checkbox selected', rating);\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        console.log('singleline qResponse', self.qResponse);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = '\\\r\n\t\t.cc-sdk #progressBar{ \\\r\n\t\t\tbackground : ' + this.brandColorDark + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk #progress-line{ \\\r\n\t\t\tbackground: ' + brandColor + ' \\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\r\n\t\t\tbackground:' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.overlay.glass{\\\r\n\t\t\tbackground-color:' + this.util.hexToRGB(brandColor, .5) + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\r\n\t\t\tborder-color: #fff;\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\\\r\n\t\t\tbackground: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .form-control:focus {\\\r\n\t\t\tborder-color: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-message-box__btn{\\\r\n\t\t\tbackground: ' + brandColor + ';\\\r\n\t\t\tcolor:#fff;\\\r\n\t\t}\\\r\n\t\t.cc-sdk .submit-icon{\\\r\n\t\t\t background-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3Cfilter x=\\'-18.1%25\\' y=\\'-12.9%25\\' width=\\'136.2%25\\' height=\\'136.2%25\\' filterUnits=\\'objectBoundingBox\\' id=\\'filter-2\\'%3E%3CfeOffset dx=\\'0\\' dy=\\'2\\' in=\\'SourceAlpha\\' result=\\'shadowOffsetOuter1\\'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation=\\'2\\' in=\\'shadowOffsetOuter1\\' result=\\'shadowBlurOuter1\\'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values=\\'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0\\' type=\\'matrix\\' in=\\'shadowBlurOuter1\\'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'1-copy-20\\' transform=\\'translate%28-1246.000000, -664.000000%29\\'%3E%3Cg id=\\'Group-16\\' transform=\\'translate%281250.000000, 666.000000%29\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cuse fill=\\'white\\' fill-opacity=\\'1\\' filter=\\'url%28%23filter-2%29\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3Cuse fill=\\'' + encodeURI(brandColor) + '\\' fill-rule=\\'evenodd\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23FFFFFF\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\\\r\n\t\t }\\\r\n\t\thtml[dir=\"rtl\"] .cc-sdk .submit-icon{\\\r\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'Submit_Icon\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cg id=\\'path-1-link\\' fill-rule=\\'nonzero\\' fill=\\'%23white\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3Cg id=\\'path-1-link\\' fill=\\'' + encodeURI(brandColor) + '\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23ffffff\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\' transform=\\'translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 \\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\");\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-question-container__required-label{\\\r\n\t\t\tcolor: ' + brandColor + ';\\\r\n\t\t}\\\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\\\r\n\t\t\tbackground: ' + brandColor + ' !important;\\\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   background: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\r\n\t\t   }\\\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\\\r\n\t\t\tbackground: ' + brandColor + ' !important;\\\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tbackground: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\r\n\t\t}\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\\\r\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\\\r\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk svg.timer circle {\\\r\n\t\t\tanimation: countdown ' + time + 's linear 1 forwards;\\\r\n\t\t\tstroke: ' + brandColor + ';\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\\r\n\t\t\t\tbackground-color: ' + brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\\r\n\t\t\t\tbackground-color: ' + brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\\\r\n\t\t\t\tborder: solid 1px ' + brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t @media (max-width: 767px){\\\r\n\t \t\t\t.overlay.glass{\\\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\r\n\t \t\t\tbackground-image:none;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container{\\\r\n\t\t\t\t\tbackground-color : transparent;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .overlay.glass{\\\r\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB(brandColor, .9) + ';\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\\r\n\t\t\t\t\tcolor:#fff;\\\r\n\t\t\t\t}\\\r\n\t\t';\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\r\n        // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\r\n        // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\r\n        // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\r\n        // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\r\n        // } else {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\r\n        // }\r\n        // if(parseInt(this.rangeTip.style.left) <= 50 ){\r\n        //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\r\n        // }else{\r\n        //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\r\n        // }\r\n        // console.log(this.rangeTip.style.left);\r\n        // if(this.timeout){\r\n        //   clearTimeout(this.timeout);\r\n        // }\r\n        // this.timeout = setTimeout(function(){\r\n        //   self.rangeTip.style.display = 'none' ;\r\n        // },300)\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(49);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a33bc11b1d295cb08fce","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( t.matches( sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && opt.includes( ';' ) && opt.includes( '.' );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, opt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, opt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: any, id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        optHtml = optHtml.replace( /{{label}}/g, arr[ i ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, arr[ i ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, arr[ i ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue : any = [];\r\n  static processQueueInterval : any = null;\r\n\r\n  static surveyInstances : any = {};\r\n\r\n  static initializeSurvey(surveyId : string) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n  }\r\n\r\n  static addSurvey(surveyId) {\r\n    (window as any).ccsdkDebug?console.log(\"Adding survey ID : \" + surveyId):'';\r\n    SurveyManager.surveyQueue.push(surveyId);\r\n    if(SurveyManager.processQueueInterval == null) {\r\n      SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId) {\r\n    if(SurveyManager.surveyQueue.length > 0) {\r\n      for(let survey in SurveyManager.surveyQueue) {\r\n        if(SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n          SurveyManager.surveyQueue.splice(survey, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if(SurveyManager.surveyQueue.length == 0) {\r\n      clearInterval(SurveyManager.processQueueInterval);\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if((window as any).globalSurveyRunning == true) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      (window as any).ccsdkDebug?console.log(\"Processing survey ID \" + surveyId):'';\r\n      if(surveyId == undefined) {\r\n        clearInterval(SurveyManager.processQueueInterval);\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        (window as any).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey(surveyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    (window as any).globalSurveyRunning = true;\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    (window as any).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText(surveyHandler : any, question : any) {\r\n        if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if( question.translated != null && \r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    let qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                } else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            } else {\r\n                if(question.text != null){\r\n                    let qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText ;\r\n                }else{\r\n                    return question.text == null ? '':question.text;\r\n                }\r\n            }\r\n        } else {\r\n            if (question.text != null) {\r\n                let qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            } else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateMessages(surveyHandler : any, type : string) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    } else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption(surveyHandler: any, question: any, option: any){\r\n        let effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        // console.log(effectiveMultiselect);\r\n        if ( (effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0 ){\r\n            for(let i=0; i < question.multiSelect.length; i++){\r\n                let opt: any = question.multiSelect[i].split(';')\r\n                if(opt[0] == option ){\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }else{\r\n    \r\n                }\r\n            }\r\n        }\r\n        return option;\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\r\n  static API_URL : String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL : string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL : string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n}\r\n\r\nexport {Config};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest (method : string, url : string, postParams : string, headers : any) : any {\r\n  return new Promise(function (resolve, reject) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n      if ((this as any).status >= 200 && (this as any).status < 300) {\r\n        let res : any = xhr.response?JSON.parse(xhr.response):'';\r\n        resolve(res);\r\n      } else {\r\n        reject({\r\n          status: (this as any).status,\r\n          statusText: xhr.statusText\r\n        });\r\n      }\r\n    };\r\n    xhr.onerror = function () {\r\n      reject({\r\n        status: (this as any).status,\r\n        statusText: xhr.statusText\r\n      });\r\n    };\r\n    if (headers) {\r\n      Object.keys(headers).forEach(function (key) {\r\n        xhr.setRequestHeader(key, headers[key]);\r\n      });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n  });\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders(url : string, headers : any) {\r\n    return makeRequest(\"GET\", url, null, headers);\r\n  }\r\n\r\n  static postWithHeaders(url : string, data : Object, headers : any) {\r\n    headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n    return makeRequest(\"POST\", url, JSON.stringify(data), headers);\r\n    \r\n  }\r\n\r\n  static get(url : string) {\r\n    return makeRequest(\"GET\", url, null, null);\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post(url : string, data : Object) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    (window as any).ccsdkDebug?console.log(\"Sending : \" + data):'';\r\n    return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\" : \"application/json; charset=utf-8\" });\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","import '../css/main.scss';\r\nimport  * as QuestionSurvey from '../templates/Survey.html';\r\nimport  * as QuestionStart from '../templates/QuestionStart.html';\r\nimport  * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport  * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport  * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport  * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport  * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport  * as QuestionRadioMore from '../templates/QuestionRadioMore.html';\r\nimport  * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport  * as QuestionScale from '../templates/QuestionScale.html';\r\nimport  * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport  * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport  * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport  * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport  * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport  * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport  * as QuestionStar from '../templates/QuestionStar.html';\r\nimport  * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport  * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport  * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport  * as ThankYou from '../templates/ThankYou.html';\r\n\r\nimport  * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey : \"\",\r\n  question_start : \"\",\r\n  question_text : \"\",\r\n  question_number: \"\",\r\n  question_scale : \"\",\r\n  question_csat_agreement_5 : \"\",\r\n  question_csat_satisfaction_5 : \"\",\r\n  question_nps : \"\",\r\n  question_multi_line_text : \"\",\r\n  question_multi_select : \"\",\r\n  question_radio_more : \"\",\r\n  question_radio : \"\",\r\n  question_radio_image : \"\",\r\n  question_checkbox : \"\",\r\n  question_select : \"\",\r\n  question_smile_5: \"\",\r\n  question_smile_5_inverted : \"\",\r\n  question_star_5 : \"\",\r\n  question_slider : \"\",\r\n  option_radio_image: \"\",\r\n  option_radio : \"\",\r\n  option_checkbox: \"\",\r\n  option_checkbox_image : \"\",\r\n  thankyou : \"\",\r\n  language_selector : \"\"\r\n\r\n};\r\n\r\n\r\ntemplates.question_survey = QuestionSurvey;\r\n\r\ntemplates.question_start = QuestionStart;\r\n\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number= QuestionNumber;\r\n\r\n\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\n\r\ntemplates.question_slider = QuestionSlider;\r\n\r\n\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\n\r\n\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\n\r\n\r\ntemplates.question_select = QuestionSelect;\r\n\r\n\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\n\r\ntemplates.question_star_5 = QuestionStar;\r\n\r\ntemplates.question_checkbox = QuestionCheckbox;\r\n\r\ntemplates.question_radio = QuestionRadio;\r\n\r\ntemplates.question_radio_more = QuestionRadioMore;\r\n\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\n\r\ntemplates.thankyou = ThankYou;\r\n\r\ntemplates.language_selector = LanguageSelector;\r\n\r\n\r\nexport {templates};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","import { DomUtilities } from \"./DomUtilities\";\r\nclass Select{\r\n  util : DomUtilities;\r\n  $body : any ;\r\n  $html : any ;\r\n  qId : any ;\r\n  select : any;\r\n  type : string;\r\n  listeners : any = [];\r\n  constructor(qId : string){\r\n    this.qId = qId;\r\n\t}\r\n  init(qId : string){\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    this.$html = document.querySelectorAll(\"html\")[0];\r\n    var select = document.querySelectorAll(\"#\"+qId+\" .cc-select\");\r\n\r\n  \t\t// var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n      // this.util.removeAll(divSelect);\r\n      let parent = this;\r\n\r\n      //Assumption: iterating over array but there will always be one select at a time\r\n      this.type = select[0].getAttribute('data-type');\r\n  \t\tArray.prototype.forEach.call(select, function(el, i){\r\n  \t\t  var self = el;\r\n  \t\t\tvar $selectOptions = document.querySelectorAll(\"#\"+qId+\" .cc-select-options\");\r\n  \t\t  var classes = self.getAttribute(\"class\"),\r\n  \t\t      id      = self.getAttribute(\"id\"),\r\n  \t\t      name    = self.getAttribute(\"name\");\r\n  \t\t  var template =  '<div class=\"' + classes + '\">';\r\n  \t\t      template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n  \t\t      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n  \t\t\tvar options = self.querySelectorAll(\"option\");\r\n  \t\t\t\tArray.prototype.forEach.call(options, function(el, i){\r\n  \t\t        template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML+ '</span>';\r\n  \t\t      });\r\n  \t\t  template += '</div></div></div>';\r\n  \t\t  parent.util.addClass(self, 'hide');\r\n  \t\t  self.insertAdjacentHTML('afterend',template);\r\n  \t\t});\r\n      this.setupListeners();\r\n  }\r\n\r\n  \r\n  setupListeners(){\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener('click',  \"#\"+qId+\" .cc-select-option\", function(e){      \r\n    // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      (window as any).ccsdkDebug?console.log('click cc-select-option',this):'';\r\n      let selfOption = this;\r\n      let value = this.getAttribute('data-value');\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      (window as any).ccsdkDebug?console.log(select):'';\r\n      (window as any).ccsdkDebug?console.log(selectOptions):'';\r\n      (window as any).ccsdkDebug?console.log(selectWrapper):'';\r\n      //select all cc-select-option and remove class selection\r\n      // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\r\n      // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\r\n\r\n      self.util.addClass(this,\"selection\");\r\n      let selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\r\n      (window as any).ccsdkDebug?console.log('select type', self.type):'';\r\n      if(self.type !== 'multiple'){\r\n        (window as any).ccsdkDebug?console.log('select type', self.type):'';\r\n        selectedOptionText = selfOption.textContent;\r\n        (window as any).ccsdkDebug?console.log('selected option', selectedOptionText):'';\r\n        self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n        select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n        self.util.addClass(self, 'selection');\r\n      \r\n      }else{\r\n        (window as any).ccsdkDebug?console.log(selectedOptionText):'' ;\r\n        if(selectedOptionText != 'Select'){\r\n          if(selectedOptionText.indexOf(selfOption.textContent) == 0){\r\n            selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '') ;   \r\n            selectedOptionText = selectedOptionText.replace(selfOption.textContent, '') ;   \r\n            self.util.removeClass(this,\"selection\");\r\n          }else if(selectedOptionText.indexOf(selfOption.textContent) > 0){\r\n            selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '') ;    \r\n            self.util.removeClass(this,\"selection\");\r\n          }else{\r\n            selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\r\n          }\r\n        \r\n        }else{\r\n          (window as any).ccsdkDebug?console.log(selfOption.textContent):'';\r\n          selectedOptionText = selfOption.textContent;\r\n        }\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\r\n        \r\n        if(selectedOptionText.length < 1){\r\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\r\n        }else{\r\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n        \r\n      }\r\n\r\n    });\r\n    this.listeners.push(ref2);    \r\n    ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n    let ref = this.util.initListener('click',  \"#\"+qId+\" .cc-select-trigger\", function(e){\r\n      self.$html.addEventListener('click',function(e){\r\n        if(!self.util.hasClass(e.target, 'cc-select-option')){\r\n          self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n          self.$html.removeEventListener('click', function(){\r\n          });\r\n        }\r\n      })\r\n      var ccSelect = this.parentNode;\r\n      (window as any).ccsdkDebug?console.log('click cc-select-trigger',ccSelect):'';\r\n      self.util.toggleClass(ccSelect, \"opened\");\r\n      e.stopPropagation();\r\n    });\r\n    this.listeners.push(ref);    \r\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n  \r\n  }\r\n\r\n  destroyListeners(){\r\n    for(let listener of this.listeners) {\r\n        this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue(value : string){\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select :any;\r\n\r\n    select =  document.querySelectorAll(\"#\"+qId+\" select\")[0];\r\n    select.value = value;\r\n    document.querySelectorAll(\"#\"+qId+\" .cc-select-trigger\")[0].textContent = value;\r\n  }\r\n\r\n  selectOption(el:any){\r\n    this.util.addClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions(csv : string){\r\n    let self = this;\r\n    if(csv){\r\n      let allOptions = csv.split(',');\r\n      for(let option of allOptions){\r\n        let domOptions = document.querySelectorAll(\"#\"+self.qId+\" .cc-select-option\");\r\n        Array.prototype.forEach.call(domOptions, function(el, i){\r\n          if(el.getAttribute('data-value') == option){\r\n            self.selectOption(el);\r\n          }\r\n        });\r\n          \r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nexport { Select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\n\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( ConditionalFlowFilter.isAnd( aFilterByQuestion ) ) {\r\n              if ( ConditionalFlowFilter.doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( ConditionalFlowFilter.isOr( aFilterByQuestion ) ) {\r\n              if ( ConditionalFlowFilter.doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( !surveyHandler.getSurveyQuestions().includes( aQuestion ) ) {\r\n              surveyHandler.getSurveyQuestions().push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyHandler.getSurveyQuestions().includes( aQuestion ) ) {\r\n              aRemovedCount++;\r\n              surveyHandler.getSurveyQuestions().splice( surveyHandler.getSurveyQuestions().indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( ConditionalFlowFilter.questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n\r\n  private static questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  private static isAnd( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\" ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isOr( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\" ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isNumberCheck( filterQuestion: any ): boolean {\r\n    if ( filterQuestion.answerCheck[ 0 ].includes( \"lt\" ) || filterQuestion.answerCheck[ 0 ].includes( \"gt\" ) || filterQuestion.answerCheck[ 0 ].includes( \"eq\" ) ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n   *\r\n   * @param filterQuestion\r\n   * @return\r\n   */\r\n  private static doesSatisfy( surveyHandler: any, filterQuestion: any ): boolean {\r\n    if ( ConditionalFlowFilter.isNumberCheck( filterQuestion ) ) {\r\n      if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"lt\" ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput < filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"gt\" ) ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput > filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"eq\" ) ) {\r\n        if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ) != null )\r\n          if ( surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput != null && surveyHandler.getAnswerForQuestionId( filterQuestion.questionId ).numberInput == filterQuestion.number ) {\r\n            return true;\r\n          }\r\n      }\r\n    } else {\r\n      let iFoundAll = false;\r\n      let question = surveyHandler.getQuestionById( filterQuestion.questionId );\r\n      let questionAnswer = surveyHandler.getAnswerForQuestionId( filterQuestion.questionId );\r\n      let questionAnswerText = questionAnswer != null && questionAnswer.textInput != null ? questionAnswer.textInput : '';\r\n      if ( !questionAnswer ) {\r\n        return false;\r\n      }\r\n      for ( let aAnswer of filterQuestion.answerCheck ) {\r\n        if ( question.multiSelect instanceof Array ) {\r\n          aAnswer = LanguageTextFilter.translateMultiSelectOption( surveyHandler, question, aAnswer );\r\n        }\r\n        //   console.log('hello', question.multiSelect instanceof Array,surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n        console.log( questionAnswerText, aAnswer );\r\n\r\n        if ( question.displayType === 'MultiSelect' ) {\r\n          let selectedOptions = questionAnswer.textInput.split( ',' );\r\n          if ( selectedOptions.indexOf( aAnswer ) !== -1 ) {\r\n            iFoundAll = true;\r\n          }\r\n        } else if ( questionAnswerText === aAnswer ) {\r\n          iFoundAll = true;\r\n        }\r\n      }\r\n\r\n      return iFoundAll;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { Survey } from \"./Survey\";\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n\r\n\r\nlet localCCSDK = {\r\n  init : init,\r\n  destroy : destroy,\r\n  trigger : trigger,\r\n  hide : hide,\r\n  show : show,\r\n  on : on,\r\n  prefill : prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote : prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n(window as any).globalSurveyRunning = false;\r\n(window as any).ccsdkDebug = false;\r\n(window as any).isMobile = window.innerWidth <= 768 ? true:false;\r\n\r\nif(typeof (window as any).CCSDK !== 'undefined') {\r\n  var queue = (window as any).CCSDK.q;\r\n  (window as any).CCSDK = function()   {\r\n      if(arguments && arguments.length == 0)   {\r\n          var time = new Date();\r\n          // console.log(this.time);\r\n      } else {\r\n          (window as any).ccsdkDebug?console.log(arguments):'';\r\n          var args = (Array as any).from(arguments);\r\n          // console.log(arguments);\r\n          //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n          var functionName = args.splice(0,1)[0];\r\n        (window as any).ccsdkDebug ?console.log(functionName):'';\r\n          return localCCSDK[functionName].apply(this, args);\r\n      }\r\n  };\r\n  if(queue){\r\n    for(var q of queue) {\r\n        var args = (Array as any).from(q);\r\n        var functionName = args.splice(0, 1)[0];\r\n        localCCSDK[functionName].apply(this, args);\r\n    }\r\n  }\r\n  let eventCCReady : Event = document.createEvent('Event');\r\n  eventCCReady.initEvent('ccready', true, true);\r\n  document.dispatchEvent(eventCCReady);\r\n\r\n}\r\n\r\nexport function init(surveyToken : any) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  // console.log(arguments[arguments.length - 1]);\r\n  let config = (typeof arguments[1] === 'object')? arguments[1] : {};\r\n  //create survey instance\r\n  if(typeof Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie.get(surveyToken + '-finish')) {\r\n    return;\r\n  }\r\n  if(typeof config.isActive !== 'undefined' && config.isActive) {\r\n    SurveyManager.surveyInstances[surveyToken] = (SurveyManager.surveyInstances[surveyToken]) ? SurveyManager.surveyInstances[surveyToken] : new Survey(surveyToken, config);\r\n    return SurveyManager.surveyInstances[surveyToken];\r\n  } else {\r\n    //do nothing\r\n  }\r\n  \r\n}\r\n\r\nexport function destroy(surveyToken : string){\r\n  //remove from trigger manager, delete instance.\r\n  SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[surveyToken].destroy();\r\n  delete SurveyManager.surveyInstances[surveyToken];\r\n}\r\n//\r\nexport function trigger(surveyToken : string, type : string, target : string) {\r\n  (window as any).ccsdkDebug ?console.log(SurveyManager.surveyInstances):'';\r\n  if(typeof SurveyManager.surveyInstances[surveyToken] != 'undefined'){\r\n    SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on(surveyToken : string, type : string, callback : any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n  }\r\n}\r\n\r\nexport function prefill(surveyToken : string, questionId : string, answerObject : any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n  }\r\n}\r\n\r\nexport function prefillByTag(surveyToken : string, questionTag : string, answer : any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') { \r\n    SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n  }\r\n}\r\n\r\nexport function prefillByNote(surveyToken : string, questionNote : string, answer : any){\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n  }\r\n}\r\n\r\nexport function show(surveyToken : string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].show();\r\n  }\r\n}\r\n\r\nexport function hide(surveyToken : string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \r\n    SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[surveyToken].destroy();\r\n    SurveyManager.surveyInstances[surveyToken].hide();\r\n  }\r\n}\r\n\r\n//on exit detect\r\n\r\n\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\n\r\nimport { templates } from \"./helpers/templates\"\r\n\r\nclass Survey {\r\n  survey : SurveyHandler;\r\n  dom : DomSurvey;\r\n  surveyData : any;\r\n  util : DomUtilities;\r\n  scrollbar : Scrollbar;\r\n  slider : Slider;\r\n  config : CCSDKConfig;\r\n  surveyToken : string;\r\n  triggers : Triggers;\r\n  surveyRunning : boolean;\r\n  surveyDone : boolean;\r\n  surveyStatus : string;\r\n  isThrottled : boolean;\r\n  thorttlingLogic : any;\r\n  loginData : any;\r\n  debug : false;\r\n  surveyStartTime : number;\r\n\r\n  constructor(surveyToken : string, config : CCSDKConfig) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    if(typeof this.config.textDirection === 'undefined') {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n    // this.setupSurvey();\r\n    this.triggers = new Triggers(this);\r\n    TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n    this.survey = new SurveyHandler(this);\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor )?\r\n    this.config.brandColor:\"#db3c39\";\r\n      //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger(document, this.surveyToken + '-ready', {'survey' : this});\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger(\"click\", this.config.cssSelector);\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers(this.config);\r\n    // this.login(function() {\r\n      //on login\r\n    // });\r\n  }\r\n\r\n  login(cb) {\r\n    let loginURL = Config.API_URL + Config.POST_LOGIN_TOKEN;\r\n    let loginResponse = RequestHelper.post(loginURL,  { grant_type : Constants.GRANT_TYPE, username : this.config.username, password : this.config.password });\r\n    let self = this;\r\n    this.debug?console.log(\"login\"):'';\r\n    loginResponse.then(function(logindata) {\r\n      self.debug?console.log(logindata):'';\r\n      self.loginData = logindata;\r\n      if(self.isThrottled) {\r\n        self.getSurveyThrottlingLogic(cb);\r\n      } else {\r\n        cb();\r\n        return;\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  getSurveyThrottlingLogic(cb) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let getThrottleResponse = RequestHelper.getWithHeaders(getThrottleUrl, headers);\r\n    let self = this;\r\n    getThrottleResponse.then(function(data) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling(cb);\r\n    });\r\n  }\r\n\r\n  checkThrottling(cb) {\r\n    if(this.thorttlingLogic != null) {\r\n      if (this.thorttlingLogic.inputIds == null) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n      if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n          this.thorttlingLogic.logics[0].filter.location = [];\r\n          this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let postThrottleResponse = RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers);\r\n    postThrottleResponse.then(function(throttleResponse) {\r\n      \r\n      if(typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    });\r\n  }\r\n\r\n  addThrottlingEntries(isOpen : boolean) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token : \"help\" };\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let addThrottleUrlResponse = RequestHelper.postWithHeaders(addThrottleUrl, { \r\n      user : \"\", \r\n      mobile : \"\", \r\n      emailId : \"\", \r\n      customId : \"\", \r\n      surveySentDate : \"\", \r\n      surveyOpenDate : \"\", \r\n      channel : \"\", \r\n      isOpened : isOpen\r\n    }, headers);\r\n    addThrottleUrlResponse.then(function(throttleResponse) {\r\n      this.debug?console.log(throttleResponse):'';\r\n    })\r\n  }\r\n\r\n  setupSurvey(){\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection(){\r\n    let htmlDir : string = document.getElementsByTagName('html')[0].getAttribute('dir');\r\n    let direction : string = ( this.config && this.config.textDirection )?\r\n    this.config.textDirection:(htmlDir?htmlDir:\"ltr\");\r\n    document.getElementsByTagName('html')[0].setAttribute('dir', direction);\r\n  }\r\n\r\n  setDisplayOptions(){\r\n    this.survey.surveyDisplay.position =  this.config && this.config.position ?\r\n    this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch (this.survey.surveyDisplay.position) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData(){\r\n    let data = this.survey.fetchQuestions();\r\n    let self : Survey = this;\r\n    data.then(function(surveyData) {\r\n        self.debug?console.log(surveyData):'';\r\n        // console.log(surveyData);\r\n\r\n        self.surveyData = surveyData;\r\n        //copy data.\r\n        let event = new CustomEvent(Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken , { detail : JSON.parse(JSON.stringify(surveyData)) });\r\n        document.dispatchEvent(event);\r\n        self.dom.hideLoader();\r\n        self.initSurveyQuestions();\r\n    });\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self : Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey(this);\r\n    self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive:0);\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    \r\n    self.survey.displayWelcomeQuestion();\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions(){\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey(this.surveyData);\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  public on(type: string, callback : any) {\r\n    document.addEventListener(type + \"-\" + this.surveyToken, function(e : any) {\r\n      callback(e.detail);\r\n    });\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n  \r\n\r\n  public prefill(questionId : string, answer : any) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect(questionId, answer);\r\n  }\r\n\r\n  public fillPrefill(questionTag : string, answer : any) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill(questionTag, answer);\r\n  }\r\n\r\n  public fillPrefillByNote(questionNote : string, answer : any){\r\n    this.survey.fillPrefillByNote(questionNote, answer);\r\n  }\r\n\r\n  public trigger(type : string, target : any) {\r\n    let self : Survey = this;\r\n    switch( type ){\r\n      case 'click':\r\n        this.triggers.enableClickTrigger(target, function(){\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey(self.surveyToken);\r\n\r\n        });\r\n        break;\r\n      case 'page-count':\r\n        let count : number  = parseInt(target);\r\n        this.triggers.enablePageCountTrigger(count);\r\n\r\n      break;\r\n      case 'site-count':\r\n        let count2 : number  = parseInt(target);\r\n        this.triggers.enableSiteCountTrigger(count2);\r\n      break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger(parseInt(target));\r\n      break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n      break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger(target);\r\n      break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n      break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey(self.surveyToken);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\r\n// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from './helpers/dom/Select';\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\r\n\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor( ccsdk ) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      'position': '',\r\n      'surveyPosition': '',\r\n      'welcomePopupAnimation': '',\r\n      'surveyPopupAnimation': '',\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = ( e: any ) => {\r\n      //perform final post\r\n      this.finalPost();\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : ( this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You' );\r\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n      thankyouHtml = thankyouHtml.replace( \"{{question}}\", thankyouText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{button}}\", startText );\r\n      this.ccsdk.dom.replaceInQuestionsContainer( thankyouHtml );\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get( \"#cc-thankyou-container\" );\r\n      ( window as any ).ccsdkDebug ? console.log( thankyouContainer ) : '';\r\n      this.util.addClass( thankyouContainer[ 0 ], 'show-thankyou-slide' );\r\n      // let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyEndEvent);\r\n      //set done cookie for 30 days.\r\n      Cookie.set( this.surveyToken + '-finish', 'true', 30, '/' );\r\n      setTimeout( () => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000 );\r\n    }\r\n\r\n    this.destroySurveyCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      self.destroy();\r\n    }\r\n\r\n    this.acceptAnswersCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n      switch ( data.type ) {\r\n        case 'scale':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'nps':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radio':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radioImage':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'smile':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'star':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'multiline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'singleline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'number':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'checkbox':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'select':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'slider':\r\n          response.text = data.data.text;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchQuestions() {\r\n    this.randomNumber = parseInt( ( String )( Math.random() * 1000 ) );\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace( \"{token}\", \"\" + this.surveyToken );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    let data = RequestHelper.get( surveyUrl );\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    return data;\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer( questionId ) {\r\n    delete this.answers[ questionId ];\r\n    delete this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  attachSurvey( surveyData: any ) {\r\n    this.surveyData = surveyData;\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    surveyHtml = surveyHtml.replace( \"{{animation}}\", this.surveyDisplay.surveyPopupAnimation );\r\n    surveyHtml = surveyHtml.replace( /{{location}}/g, this.surveyDisplay.surveyPosition );\r\n    this.ccsdk.dom.appendInBody( surveyHtml );\r\n  }\r\n\r\n  displayQuestionSelector() {\r\n\r\n  }\r\n\r\n  displayWelcomeQuestion() {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyImpressionEvent );\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n    welcomeHtml = welcomeHtml.replace( \"{{question}}\", welcomeText );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n    welcomeHtml = welcomeHtml.replace( \"{{button}}\", startText );\r\n    welcomeHtml = welcomeHtml.replace( \"{{location}}\", this.surveyDisplay.position );\r\n    welcomeHtml = welcomeHtml.replace( \"{{animation}}\", this.surveyDisplay.welcomePopupAnimation );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody( welcomeHtml );\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    if ( ( typeof this.ccsdk.config.keepAlive != undefined ) && ( this.ccsdk.config.keepAlive > 0 ) ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval( () => { self.checkWelcomeQuestionDisplay( self.ccsdk.config.keepAlive ) }\r\n        , 1000 );\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay( keepAlive ) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if ( keepAlive ) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if ( keepAlive <= ( now.getTime() - this.welcomeQuestionDisplayTime.getTime() ) / 1000 ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = 'languageSelector';\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions( [ \"default\" ].concat( Object.keys( this.surveyData.translated ) ) );\r\n    cTemplate1 = cTemplate1.replace( /{{questionId}}/g, qId );\r\n    cTemplate1 = cTemplate1.replace( \"{{options}}\", options1 );\r\n    cTemplate1 = cTemplate1.replace( \"{{requiredLabel}}\", true ? \"*\" : \"\" );\r\n    this.ccsdk.dom.replaceInQuestionsContainer( cTemplate1 );\r\n    let $questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    let $body = document.getElementsByTagName( \"body\" )[ 0 ];\r\n\r\n    this.util.addClass( $questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.languageSelect = new Select( qId );\r\n    let submitBtn = document.querySelectorAll( '.submit-icon' );\r\n    this.util.removeClassAll( submitBtn, 'act-cc-button-next' );\r\n    this.util.addClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n    if ( this.languageSelect ) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init( qId );\r\n    let selectRes = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"display language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageSelectOption' ) : '';\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n    } );\r\n    this.domListeners.push( ref );\r\n    ref.internalHandler = this.util.listener( $body, ref.type, ref.id, ref.cb );\r\n\r\n\r\n    let languageSelect2 = this.util.initListener( \"click\", \".act-cc-button-lang-next\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageNext' ) : '';\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n      //set config rtl or ltr\r\n      let isRTL = /[\\u0600-\\u06FF]/.test( selectRes );\r\n      self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n      self.ccsdk.setHtmlTextDirection();\r\n      self.util.removeClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n      self.util.addClassAll( submitBtn, 'act-cc-button-next' );\r\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\r\n      self.postPrefillPartialAnswer();\r\n\r\n\r\n    } );\r\n    this.domListeners.push( languageSelect2 );\r\n\r\n    languageSelect2.internalHandler = this.util.listener( $body, languageSelect2.type, languageSelect2.id, languageSelect2.cb );\r\n\r\n\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    ( window as any ).ccsdkDebug ? console.log( cTemplate1 ) : '';\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccdone', this.displayThankYouCb );\r\n  }\r\n\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort( this.questionCompare );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName( \"cc-questions-container\" );\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[ 0 ];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for ( let question of this.questionsToDisplay ) {\r\n      if ( this.checkConditionals( question ) ) {\r\n        let compiledTemplate = this.compileTemplate( question );\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if ( this.isPrefillQuestion( question ) ) {\r\n          this.prefillQuestions.push( question );\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId( questionId: string ) {\r\n    let answer = this.surveyAnswers[ questionId ];\r\n    if ( typeof answer === 'undefined' ) {\r\n      for ( let response of this.prefillResponses ) {\r\n        if ( response.questionId == questionId ) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener( 'q-answered', this.acceptAnswersCb );\r\n  }\r\n\r\n  fillPrefillQuestionObject( id: any, response: any ) {\r\n    let question: any = this.getQuestionById( id );\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n  }\r\n\r\n  fillPrefill( tag: any, value: object ) {\r\n    this.prefillWithTags[ tag.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByTag', this.prefillWithTags ) : '';\r\n  }\r\n\r\n  fillPrefillByNote( note: any, value: object ) {\r\n    this.prefillWithNote[ note.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByNote', this.prefillWithNote ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillDirect( questionId: string, value: object ) {\r\n    this.prefillDirect[ questionId ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillDirect', this.prefillDirect ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillQuestion( id: any, value: any, valueType: string ) {\r\n    let question: any = this.getQuestionById( id );\r\n    // console.log(this.questions);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType( question.displayType );\r\n\r\n    if ( valueType.toLowerCase() == \"number\" ) {\r\n      response.numberInput = value;\r\n    }\r\n    if ( valueType.toLowerCase() == \"text\" ) {\r\n      response.textInput = value;\r\n    }\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n\r\n  }\r\n\r\n  postPrefillPartialAnswer() {\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", \"false\" );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{tabletId}\", \"\" + this.randomNumber );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    ( window as any ).ccsdkDebug ? console.log( \"Posting Prefill Responses to Server\" ) : '';\r\n    ( window as any ).ccsdkDebug ? console.log( this.prefillResponses ) : '';\r\n    if ( typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0 ) {\r\n      return RequestHelper.post( surveyPartialUrl, this.prefillResponses );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById( id: any, resp: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        response = resp;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById( id: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        return response;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getQuestionById( id: any ) {\r\n    for ( let question of this.questions ) {\r\n      if ( question.id == id ) {\r\n        return question;\r\n      }\r\n    }\r\n  }\r\n\r\n  postPartialAnswer( index: any, response: any, complete = false ) {\r\n    // let data = new FormData();\r\n    //in case of file.\r\n    // let input = document.querySelector('input[type=\"file\"]') ;\r\n    // data.append('file', input.files[0]);\r\n    let question: any = this.questionsToDisplay[ index ];\r\n    if ( typeof question === 'undefined' ) {\r\n      //now?\r\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n    }\r\n    let data: any = {\r\n      comparator: 0,\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n    // if(this.isPartialAvailable == false) {\r\n    //   this.answers.push(data);\r\n    //   return;\r\n    // }\r\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    //if this is the last of displayed question\r\n    ( window as any ).ccsdkDebug ? console.log( \"partial response\", question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) : '';\r\n    // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n    //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    // } else {\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", `${ complete }` );\r\n    // }\r\n    // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[ question.id ] = data;\r\n\r\n    data = [ data ];\r\n    // let result = RequestHelper.post(surveyPartialUrl, \"[\" + JSON.stringify(data) + \"]\");\r\n    let onSurveyAnswerEvent = new CustomEvent( Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyAnswerEvent );\r\n    if ( question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) {\r\n      //last question post moved to separate function\r\n      return RequestHelper.post( surveyPartialUrl, data );\r\n\r\n    } else {\r\n      return RequestHelper.post( surveyPartialUrl, data );\r\n    }\r\n\r\n  }\r\n\r\n  finalPost() {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace( \"{tokenId}\", this.ccsdk.surveyToken );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n    for ( let answer in this.surveyAnswers ) {\r\n      answersAll.push( this.surveyAnswers[ answer ] );\r\n      lastAnswer = this.surveyAnswers[ answer ];\r\n    }\r\n    for ( let answer in this.prefillResponses ) {\r\n      answersAll.push( this.prefillResponses[ answer ] );\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor( ( timeAtPost - this.ccsdk.surveyStartTime.getTime() ) / 1000 )\r\n    };\r\n    console.log( lastAnswer );\r\n    let _lastAnswer = {\r\n      text: lastAnswer.textInput,\r\n      number: lastAnswer.numberInput\r\n    }\r\n    this.postPartialAnswer( this.questionsToDisplay.length - 1, _lastAnswer, true )\r\n\r\n    return RequestHelper.post( postSurveyFinalUrl, finalData );\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals( question: any ) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate( question: any ) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if ( question != 'undefined' ) {\r\n      switch ( question.displayType ) {\r\n        case \"Slider\":\r\n          let opt: any = question.multiSelect[ 0 ].split( \"-\" );\r\n          let optMin: any = opt[ 0 ].split( \";\" );\r\n          let optMax: any = opt[ 1 ].split( \";\" );\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{min}}/g, optMin[ 0 ] );\r\n          if ( optMin[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, optMin[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{max}}/g, optMax[ 0 ] );\r\n          if ( optMax[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, optMax[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          ( window as any ).ccsdkDebug ? console.log( question.questionTags ) : '';\r\n          if ( question.questionTags.includes( \"NPS\" ) ) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else if ( question.questionTags.includes( \"CSAT\" ) ) {\r\n            if ( question.questionTags.includes( \"csat_satisfaction_5\" ) ) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if ( question.questionTags.includes( \"csat_agreement_5\" ) ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else {\r\n            let tileColor = '';\r\n            let style = '';\r\n            if ( question.attributes != null && question.attributes.scaleColor.length > 0 ) {\r\n              tileColor = question.attributes.scaleColor;\r\n            } else if ( question.presentationMode != null && question.presentationMode.includes( \"Color\" ) ) {\r\n              tileColor = question.presentationMode.split( ':' )[ 1 ];\r\n            }\r\n            if ( tileColor.length > 0 ) {\r\n              let tileColorDark = this.util.shadeBlendConvert( -0.3, tileColor, undefined );\r\n              style = '\\\r\n                <style>\\\r\n                #id'+ question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : '+ tileColor + ';\\\r\n                }\\\r\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : '+ tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace( /{{style}}/g, style );\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend( this, question );\r\n            if ( displayLegend ) {\r\n              if ( displayLegend.length > 0 ) {\r\n                startRangeLabel = displayLegend[ 0 ] ? displayLegend[ 0 ] : null;\r\n                endRangeLabel = displayLegend[ 1 ] ? displayLegend[ 1 ] : null;\r\n              }\r\n            }\r\n            if ( question.multiSelect.length > 0 ) {\r\n              startRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 0 ] );\r\n              if ( startRangeLabel == null ) {\r\n                startRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 0 ].split( \";\" )[ 1 ];\r\n              }\r\n              endRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 1 ] );\r\n              if ( endRangeLabel == null ) {\r\n                endRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 1 ].split( \";\" )[ 1 ];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = '';\r\n            let imageVisibility010 = 'hide';\r\n            let imageVisibility110 = 'hide';\r\n            let scaleVisibility = 'show-inline';\r\n            let scaleImageContainer = '';\r\n            if ( startRange == 0 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = 'show';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            } else if ( startRange == 1 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'show';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if ( endRange < 11 ) {\r\n            } else {\r\n              divider = ( endRange - startRange ) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = '';\r\n            // console.log((window as any).isMobile);\r\n            if ( ( window as any ).isMobile ) {\r\n              if ( endRange > 6 && endRange < 11 ) {\r\n                optionStyle = 'width:' + ( ( 100 / ( endRange - startRange + 1 ) ) - .5 ) + '%';\r\n              }\r\n            } else {\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'show-inline';\r\n              scaleImageContainer = '';\r\n              mobileImageUrl = \"\";\r\n\r\n            }\r\n            for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n              options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n            }\r\n            if ( ( endRange - startRange + 1 ) <= 11 ) {\r\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n              var optionMaxWidth = ( ( ( endRange - startRange + 1 ) * 38 / 2 ) - 5 ) + 'px';\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{optionsRange}}\", options );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace( /maxWidth/g, optionMaxWidth );\r\n            questionTemplate = questionTemplate.replace( /{{optionLeftExtraClass}}/g, optionLeftExtraClass );\r\n            questionTemplate = questionTemplate.replace( /{{optionRightExtraClass}}/g, optionRightExtraClass );\r\n            questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n            questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n            questionTemplate = questionTemplate.replace( /{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"' );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility010}}\", imageVisibility010 );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility110}}\", imageVisibility110 );\r\n            questionTemplate = questionTemplate.replace( \"{{scaleImageContainer}}\", scaleImageContainer );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if ( ( ( question.displayStyle == 'radiobutton/checkbox' ) || ( question.displayStyle == 'icon' ) ) && ( multiSelect1.length < 6 ) ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect1 );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].includes( \"Male\" ) )\r\n                || ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].includes( \"Yes\" ) )\r\n                || ( ( multiSelect1.length > 1 ) && multiSelect1[ 1 ].includes( \"Yes\" ) ) )\r\n\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions( multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions( multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions( multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions( multiSelect1 );\r\n\r\n            if ( !self.ccsdk.config.language.includes( 'Default' ) ) {\r\n              if (\r\n                typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions( multiSelect1 );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log( options3 ) : '';\r\n            questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n            acTemplate = questionTemplate;\r\n\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          if ( ( question.displayStyle == 'radiobutton/checkbox' ) && ( multiSelect.length < 6 ) ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].includes( \"Male\" ) )\r\n                || ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].includes( \"Yes\" ) )\r\n                || ( ( multiSelect.length > 1 ) && multiSelect[ 1 ].includes( \"Yes\" ) ) )\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioImageOptions( multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions( multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n              options1 = self.util.generateRadioOptions( multiSelect, question.id );\r\n              questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n            }\r\n          } else if ( ( question.displayStyle == 'icon' ) && ( multiSelect.length < 6 ) ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            options1 = self.util.generateRadioOptions( multiSelect, question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n          } else {\r\n\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions( multiSelect );\r\n            if ( !self.ccsdk.config.language.includes( 'Default' ) ) {\r\n              if ( typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions( multiSelect );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n\r\n          }\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if ( question.presentationMode == \"Invert\" ) {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n\r\n          } else {\r\n\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend2 ) {\r\n            if ( displayLegend2.length > 0 ) {\r\n              startRangeLabel = displayLegend2[ 0 ] ? displayLegend2[ 0 ] : null;\r\n              endRangeLabel = displayLegend2[ 1 ] ? displayLegend2[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend3 ) {\r\n            if ( displayLegend3.length > 0 ) {\r\n              startRangeLabel1 = displayLegend3[ 0 ] ? displayLegend3[ 0 ] : null;\r\n              endRangeLabel1 = displayLegend3[ 1 ] ? displayLegend3[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel1 );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel1 );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType( displayType: string ) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch ( displayType ) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for ( let question of this.questions ) {\r\n      if ( !question.isRetired ) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if ( this.isPrefillTags( question ) ) {\r\n          self.ccsdk.debug ? console.log( 'prefillTags', this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillNote( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillDirect( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( !( this.isPrefillQuestion( question ) ) ) {\r\n\r\n          // if (this.isPrefillTags(question)) {\r\n          //   self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n          //   continue;\r\n          // }\r\n          if (\r\n            question.conditionalFilter != null &&\r\n            ( question.conditionalFilter.filterquestions == null\r\n              || question.conditionalFilter.filterquestions.length == 0 )\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n            if ( supportedDisplayTypes.indexOf( question.displayType ) > -1 ) {\r\n              this.questionsToDisplay.push( question );\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if ( ConditionalFlowFilter.filterQuestion( this, question ) ) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push( question );\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags( question );\r\n          this.fillPrefillWithNote( question );\r\n          ConditionalFlowFilter.filterQuestion( this, question );\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for ( let question of this.questions ) {\r\n      ConditionalFlowFilter.filterQuestion( this, question );\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags( question: any ) {\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        switch ( tag.toLowerCase() ) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion( question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\" );\r\n            return true;\r\n          default:\r\n            console.log( \"isPrefillTags\", typeof this.prefillWithTags[ tag.toLowerCase() ] );\r\n            if ( typeof this.prefillWithTags[ tag.toLowerCase() ] != 'undefined' ) {\r\n              let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n              this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined'\r\n      && question.note != null\r\n      && question.note.length > 0\r\n      && this.prefillWithNote[ question.note.toLowerCase() ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect( question: any ) {\r\n    if ( typeof question !== 'undefined'\r\n      && this.prefillDirect[ question.id ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillDirect[ question.id ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags( question: any ) {\r\n    ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', this.prefillWithTags ) : '';\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', tag ) : '';\r\n        if ( typeof this.prefillWithTags[ tag.toLowerCase() ] !== 'undefined' ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'prefil ', tag.toLowerCase(), this.prefillWithTags[ tag.toLowerCase() ], this.prefillWithTags ) : '';\r\n\r\n          let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n          this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined' && question.note != null && question.note.length > 0 ) {\r\n      if ( typeof this.prefillWithNote[ question.note.toLowerCase() ] !== 'undefined' ) {\r\n        let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n        this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion( question: any ) {\r\n    if ( question.apiFill == true ) {\r\n      return true;\r\n    }\r\n    if ( question.staffFill == true ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled( question: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == question.questionId ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccclose', this.destroySurveyCb );\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer( this.surveyToken );\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer( this.surveyToken );\r\n    if ( typeof surveyContainer != 'undefined' ) {\r\n      this.util.remove( surveyContainer );\r\n    }\r\n    if ( typeof welcomeContainer != 'undefined' ) {\r\n      this.util.remove( welcomeContainer );\r\n    }\r\n    document.removeEventListener( 'ccclose', this.destroySurveyCb );\r\n    document.removeEventListener( 'ccdone', this.displayThankYouCb );\r\n    document.removeEventListener( 'q-answered', this.acceptAnswersCb );\r\n    ( window as any ).globalSurveyRunning = false;\r\n    let bodyElement = <HTMLElement>document.\r\n      getElementsByTagName( \"body\" )[ 0 ];\r\n    this.util.removeClass( bodyElement, \"blurr\" );\r\n\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 13\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 15\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 16\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 17\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nclass ConditionalTextFilter {\r\n  public static filterText(surveyHandler : any, question : any) : string {\r\n      let conditionaText = question.text == null ? '' : LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n      if(question.text != null){\r\n          let conditionaText : string = question.text.split(':');\r\n          if(question.text.includes(\":\")){\r\n              conditionaText = conditionaText[0] + ': <br><span class=\"text-normal\">'+conditionaText[1]+'</span>';\r\n          } else {\r\n              conditionaText = conditionaText[0];\r\n          }\r\n        }\r\n          if (question.leadingDisplayTexts == null) {\r\n            conditionaText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n              return conditionaText;\r\n          } else if (question.leadingDisplayTexts.length == 0) {\r\n              conditionaText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n              return conditionaText;\r\n          } else {\r\n              for (let fOption of question.leadingDisplayTexts) {\r\n                  if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                      let iSatisfied : boolean = false;\r\n                      let iFailed : boolean = false;\r\n                      for (let filterByQuestion of fOption.filter.filterquestions) {\r\n                          if (ConditionalTextFilter.isAnd(filterByQuestion)) {\r\n                              if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                  iSatisfied = true;\r\n                              } else {\r\n                                  iFailed = true;\r\n                                  break;\r\n                              }\r\n                          } else if (ConditionalTextFilter.isOr(filterByQuestion)) {\r\n                              if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                  iSatisfied = true;\r\n                                  break;\r\n                              }\r\n                          }\r\n      \r\n                      }\r\n                      if (iSatisfied && !iFailed) {\r\n                          conditionaText = fOption.text;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      \r\n          return conditionaText;\r\n\r\n\r\n  }\r\n\r\n  private static isAnd(filterQuestion : any) : boolean {\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isOr(filterQuestion : any) : boolean {\r\n      if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  private static isNumberCheck(filterQuestion : any) : boolean  {\r\n    if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static doesSatisfy(surveyHandler : any, filterQuestion : any) : boolean {\r\n    if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        } else if (filterQuestion.answerCheck[0].toLowerCase() == \"gt\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        } else if (filterQuestion.answerCheck[0].toLowerCase() == \"eq\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    } else {\r\n        let iFoundAll : boolean = false;\r\n        for (let aAnswer of filterQuestion.answerCheck) {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                    iFoundAll = true;\r\n                    break;\r\n                } else {\r\n                    iFoundAll = false;\r\n                    break;\r\n                }\r\n        }\r\n        if (iFoundAll)\r\n            return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from './Select';\r\nimport { Theme } from './Theme';\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\nimport { setInterval } from 'timers';\r\n\r\nclass DomSurvey {\r\n\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n\r\n  constructor( ccsdk: any ) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities()\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready( function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    } );\r\n  }\r\n\r\n  setTheme( brandColor, time ) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready( function () {\r\n      self.theme = new Theme( brandColor, time );\r\n    } );\r\n  }\r\n\r\n  setQIndex( index: number ) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    this.$popupContainer = document.querySelectorAll( \".cc-popup-container\" );\r\n    this.$popupContainer2 = document.querySelectorAll( \".cc-popup-container-2\" );\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    // this.select = new Select();\r\n\r\n  }\r\n\r\n\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener( \"click\", \".act-cc-survey-start\", function () {\r\n      if ( ( !self.util.hasClass( self.$startBtn, 'disabled' ) ) && ( self.ccsdk.surveyStatus != 'minimized' ) ) {\r\n        let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n        document.dispatchEvent( onSurveyClickEvent );\r\n        self.util.addClass( self.$startBtn, 'disabled' );\r\n        self.showLoader();\r\n        self.startSurvey();\r\n      } else {\r\n        self.initSurveyDom();\r\n      }\r\n    } );\r\n    this.domListeners.push( startSurvey );\r\n\r\n\r\n    startSurvey.internalHandler = this.util.listener( this.$body, startSurvey.type, startSurvey.id, startSurvey.cb );\r\n\r\n    let nextQue = this.util.initListener( \"click\", \".act-cc-button-next\", function () {\r\n      // alert(\"working\");\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( nextQue );\r\n\r\n    nextQue.internalHandler = this.util.listener( this.$body, nextQue.type, nextQue.id, nextQue.cb );\r\n\r\n    let prevQue = this.util.initListener( \"click\", \".act-cc-button-prev\", function () {\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.prevQuestion();\r\n    } );\r\n    this.domListeners.push( prevQue );\r\n\r\n    prevQue.internalHandler = this.util.listener( this.$body, prevQue.type, prevQue.id, prevQue.cb );\r\n\r\n    let closeSurvey = this.util.initListener( \"click\", \".act-cc-button-close\", function () {\r\n      let onSurveyCloseEvent = new CustomEvent( Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyCloseEvent );\r\n      self.ccsdk.survey.answers = {};\r\n      self.trackSelects = [];\r\n      self.destroyListeners();\r\n      self.util.trigger( document, 'ccclose', undefined );\r\n      self.bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      self.util.removeClass( self.bodyElement, \"blurr\" )\r\n      self.ccsdk.survey.destroy();\r\n\r\n    } );\r\n    this.domListeners.push( closeSurvey );\r\n\r\n\r\n    closeSurvey.internalHandler = this.util.listener( this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb );\r\n\r\n    let minSurvey = this.util.initListener( \"click\", \".act-cc-button-minimize\", function () {\r\n      self.minimizeSurvey();\r\n    } );\r\n    this.domListeners.push( minSurvey );\r\n\r\n\r\n    minSurvey.internalHandler = this.util.listener( self.$body, minSurvey.type, minSurvey.id, minSurvey.cb );\r\n  }\r\n\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.removeClass( this.$popupContainer2[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.addClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.ccsdk.surveyStatus = 'minimized';\r\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass( this.$startBtn, 'disabled' );\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for ( let listener of this.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    for ( let listener of this.ccsdk.survey.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    if ( this.ccsdk.survey.languageSelect ) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if ( this.select ) {\r\n      this.select.destroyListeners();\r\n    }\r\n\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll( this.$popupContainer2, 'show-slide' );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    if ( this.ccsdk.surveyStatus == 'minimized' ) {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      ( window as any ).ccsdkDebug ? console.log( this.ccsdk.surveyData ) : '';\r\n      if ( typeof this.ccsdk.surveyData.translated == undefined || Object.keys( this.ccsdk.surveyData.translated ).length < 1 ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll( \"#progress-line\" )[ 0 ];\r\n    el.style.width = ( this.qIndex / this.ccsdk.survey.questionsToDisplay.length ) * 100 + '%';\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics( this.$questionContainer, 0 );\r\n    this.util.removeClassAll( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n    this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n  }\r\n\r\n  nextQuestion() {\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response init', this.qResponse ) : '';\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[ 0 ].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__required\" )[ 0 ]\r\n    let validationSpan: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__validation\" )[ 0 ]\r\n    if ( span )\r\n      this.util.removeClass( span, \"show\" );\r\n    if ( validationSpan )\r\n      this.util.removeClass( validationSpan, \"show\" );\r\n\r\n\r\n    //check if question is required \r\n    isRequired = q.getAttribute( 'data-required' ).toLowerCase() == 'true' ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if ( isRequired && ( Object.keys( this.qResponse ).length === 0 ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else if ( isRequired && ( !this.qResponse.text ) && ( !this.qResponse.number ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else {\r\n      if ( span ) {\r\n        this.util.removeClass( span, \"show\" );\r\n        this.util.addClass( span, \"hide\" );\r\n      }\r\n\r\n\r\n\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[ this.qIndex ].validationRegex\r\n      if ( validationRegex ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'validationRegex', validationRegex ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( 'response', this.qResponse ) : '';\r\n        let pattern = validationRegex.match( new RegExp( '^/(.*?)/([gimy]*)$' ) );\r\n        let regex = new RegExp( validationRegex );\r\n        if ( this.qResponse.text ) {\r\n          console.log( 'test regex text', regex.test( this.qResponse.text ) );\r\n          if ( regex.test( this.qResponse.text ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        else if ( this.qResponse.number ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'test regex text', regex.test( this.qResponse.number ) ) : '';\r\n\r\n          if ( regex.test( this.qResponse.number ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n\r\n\r\n      if ( this.qResponse !== 'undefined' ) {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && this.qResponse.type == this.ccsdk.survey.answers[ this.currentQuestionId ].type\r\n          && this.qResponse.text == this.ccsdk.survey.answers[ this.currentQuestionId ].text\r\n          && this.qResponse.number == this.ccsdk.survey.answers[ this.currentQuestionId ].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && !this.qResponse.text\r\n          && !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n          this.submitQuestion( this.qIndex, this.qResponse, this.qResponse.type, qId );\r\n          //save response\r\n          this.ccsdk.survey.answers[ this.currentQuestionId ] = JSON.parse( JSON.stringify( this.qResponse ) );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion( this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[ this.qIndex ] );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = 'initial';\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if ( this.qIndex == this.ccsdk.survey.questionsToDisplay.length ) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      let rightIcon: any = this.util.get( '.cc-icon-right' );\r\n      let nextIcon: any = this.util.get( '.act-cc-button-next' );\r\n      this.util.addClassAll( leftIcon, 'hide' );\r\n      this.util.addClassAll( rightIcon, 'hide' );\r\n      this.util.addClassAll( nextIcon, 'hide' );\r\n      this.util.trigger( document, 'ccdone', undefined );\r\n      this.util.removeClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      this.updateProgress();\r\n    } else {\r\n      if ( ( this.qIndex > this.ccsdk.survey.questionsToDisplay.length ) ) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics( nextQ, this.qIndex );\r\n      this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    } else {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClass( leftIcon[ 0 ], 'show-slide' );\r\n      this.util.removeClass( leftIcon[ 0 ], 'hide-slide' );\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.qIndex--;\r\n    if ( !this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0 ) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics( null, this.qIndex );\r\n    this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n    ( window as any ).ccsdkDebug ? console.log( \"prevQuestion qResponse\", this.qResponse ) : '';\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.updateProgress();\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n      this.util.removeClassAll( leftIcon, 'show-slide' );\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.addClass( $loader, 'show' );\r\n    this.util.removeClass( $loader, 'hide' );\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.removeClass( $loader, 'show' );\r\n    this.util.addClass( $loader, 'hide' );\r\n  }\r\n\r\n  appendInBody( html ) {\r\n    document.querySelectorAll( \"body\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer( html ) {\r\n    this.$questionContainer[ 0 ].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer( html ) {\r\n    document.querySelectorAll( \".cc-questions-container\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".act-cc-welcome-question-box\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    this.$startBtn = document.querySelectorAll( \".act-cc-survey-start\" )[ 0 ];\r\n\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".cc-language-selector\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    let self = this;\r\n    if ( this.util.checkIfListenerExists( '.cc-language-select', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '.cc-language-select' );\r\n    }\r\n    let languageSelect = this.util.initListener( \"click\", \".cc-language-select\", function () {\r\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyClickEvent);\r\n      //select language show next question.\r\n      // self.startSurvey();\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n    } );\r\n\r\n    languageSelect.internalHandler = this.util.listener( this.$body, languageSelect.type, languageSelect.id, languageSelect.cb );\r\n  }\r\n\r\n  getSurveyContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-survey\" )[ 0 ];\r\n  }\r\n\r\n  getWelcomeContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-welcome\" )[ 0 ];\r\n  }\r\n\r\n  loadQuestionSpecifics( q: HTMLElement, index: number ) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[ 0 ].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate( this.ccsdk.survey.questionsToDisplay[ index ] );\r\n    this.$questionContainer[ 0 ].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-type' );\r\n    let qId: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-id' );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring( 2, qId.length );\r\n    switch ( qType ) {\r\n      case 'scale':\r\n        let allOptions1: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n        let optionWidth1 = ( 100 / allOptions1.length ) - .6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale( index, qId );\r\n        break;\r\n      case 'nps':\r\n        this.setupListenersQuestionNPS( index, qId );\r\n        break;\r\n      case 'multiline':\r\n        this.setupListenersQuestionMultiline( index, qId );\r\n        break;\r\n      case 'select':\r\n        if ( typeof this.select !== 'undefined' ) {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect( index, qId );\r\n        break;\r\n      case 'radio':\r\n        this.setupListenersQuestionRadio( index, qId );\r\n        break;\r\n      case 'radioImage':\r\n        this.setupListenersQuestionRadioImage( index, qId );\r\n        break;\r\n      case 'checkbox':\r\n        this.setupListenersQuestionCheckbox( index, qId );\r\n        break;\r\n      case 'star':\r\n        this.setupListenersQuestionStar( index, qId );\r\n        break;\r\n      case 'smile':\r\n        this.setupListenersQuestionSmile( index, qId );\r\n        break;\r\n      case 'csat':\r\n        this.setupListenersQuestionCsat( index, qId );\r\n        break;\r\n      case 'slider':\r\n        this.setupListenersQuestionSlider( index, qId );\r\n        break;\r\n      case 'singleline':\r\n        this.setupListenersQuestionSingleline( index, qId );\r\n        break;\r\n      case 'number':\r\n        this.setupListenersQuestionNumber( index, qId );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let selectedRating1 = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 1 ];\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'scale';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'scale';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      selectedRating1.innerHTML = '' + rating;\r\n\r\n      //move to next question automagically\r\n      // alert('calling next questions inside scale');\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionNPS( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'nps question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'nps previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        let $mobileRating = document.querySelectorAll( \".act-cc-nps-selected-rating\" )[ 0 ];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = 'nps';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'nps';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // alert('calling next questions inside scale');\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"checkbox question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValues = this.ccsdk.survey.answers[ questionId ].text;\r\n      if ( previousValues ) {\r\n        previousValues = previousValues.split( ',' );\r\n        for ( let previousValue of previousValues ) {\r\n          let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n          ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n          if ( typeof previousSelection !== 'undefined' ) {\r\n            this.util.addClass( previousSelection, \"selected\" );\r\n            previousSelection.setAttribute( 'checked', 'checked' );\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n      // let rating : number = this.querySelectorAll('input')[0].value;\r\n      console.log( qId )\r\n      let rating: string = [].filter.call( document.querySelectorAll( '#' + qId + ' .cc-checkbox input' ), function ( c ) {\r\n        return c.checked;\r\n        console.log( c, 'control' )\r\n      } ).map( function ( c ) {\r\n        return c.value;\r\n      } ).join( ',' );\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'Checkbox selected', rating ) : '';\r\n      console.log( 'Checkbox selected', rating );\r\n\r\n      self.qResponse.type = 'checkbox';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n    let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyClickEvent );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadio( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      // return;\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radio';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radio';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio image question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio image question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio image previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radioImage';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radioImage';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionStar( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-star-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'star question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'star previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'star';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-star-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-star-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous sibling\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n\r\n\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'star';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSmile( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'smile question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'smile previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous siblings\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n\r\n  setupListenersQuestionCsat( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"csat question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'csat question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'csat previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      this.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n      let child: any = this.previousSibling;\r\n      while ( ( child = child.previousSibling ) != null ) {\r\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n        self.util.addClass( child, \"selected\" );\r\n      }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionMultiline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"multiine question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'multiine question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'multiline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = 'multiline';\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSingleline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"singleline question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'singleline question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'singleline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = 'singleline';\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n    console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersQuestionNumber( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"number question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'number question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'number input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'number';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = 'number';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSlider( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = '';\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" input\" )[ 0 ];\r\n\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" input\", this.domListeners ) ) {\r\n      // return;\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'slider question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" .act-slider-tip\" )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = 'slider';\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( \"change\", '#' + qId + \" input\", function () {\r\n      sliderRes = this.value;\r\n      self.qResponse.type = 'slider';\r\n      self.qResponse.number = sliderRes;\r\n      self.qResponse.text = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSelect( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que', this.domListeners ) : '';\r\n    questionId = qId.substring( 2, qId.length );\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'select que listner exists' ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n\r\n      // return;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que' ) : '';\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que initialize select' ) : '';\r\n\r\n    self.select = new Select( qId );\r\n    self.select.destroyListeners();\r\n    self.select.init( qId );\r\n\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      if ( this.ccsdk.survey.answers[ questionId ].text ) {\r\n        self.select.setValue( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.select.selectOptions( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.qResponse.type = 'select';\r\n        self.qResponse.text = this.ccsdk.survey.answers[ questionId ].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push( qId );\r\n    // }\r\n    let selectRes: string = '';\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      // selectRes = this.getAttribute('data-value');\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n      self.qResponse.type = 'select';\r\n      self.qResponse.text = selectRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // self.nextQuestion();\r\n    } );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion( index: number, data: any, type: string, qId: string ) {\r\n    // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n    this.util.trigger( document, 'q-answered', {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.substring( 2, qId.length )\r\n    } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { DomSurvey }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme{\r\n   util : DomUtilities;\r\n   brandColorDark : string;\r\n   brandColorWhite : string;\r\n\t constructor(brandColor, time){\r\n\t this.util = new DomUtilities();\r\n\t this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n\t this.brandColorWhite= this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n\r\n\t\tlet css : string = '\\\r\n\t\t.cc-sdk #progressBar{ \\\r\n\t\t\tbackground : '+ this.brandColorDark+';\\\r\n\t\t}\\\r\n\t\t.cc-sdk #progress-line{ \\\r\n\t\t\tbackground: '+ brandColor+' \\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\r\n\t\t\tbackground:'+ brandColor +';\\\r\n\t\t}\\\r\n\t\t.overlay.glass{\\\r\n\t\t\tbackground-color:'+ this.util.hexToRGB(brandColor,.5)+';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\r\n\t\t\tborder-color: #fff;\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: '+brandColor+';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\\\r\n\t\t\tborder-color: '+brandColor+';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\\\r\n\t\t\tbackground: '+brandColor+';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .form-control:focus {\\\r\n\t\t\tborder-color: '+brandColor+';\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-message-box__btn{\\\r\n\t\t\tbackground: '+brandColor+';\\\r\n\t\t\tcolor:#fff;\\\r\n\t\t}\\\r\n\t\t.cc-sdk .submit-icon{\\\r\n\t\t\t background-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3Cfilter x=\\'-18.1%25\\' y=\\'-12.9%25\\' width=\\'136.2%25\\' height=\\'136.2%25\\' filterUnits=\\'objectBoundingBox\\' id=\\'filter-2\\'%3E%3CfeOffset dx=\\'0\\' dy=\\'2\\' in=\\'SourceAlpha\\' result=\\'shadowOffsetOuter1\\'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation=\\'2\\' in=\\'shadowOffsetOuter1\\' result=\\'shadowBlurOuter1\\'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values=\\'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0\\' type=\\'matrix\\' in=\\'shadowBlurOuter1\\'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'1-copy-20\\' transform=\\'translate%28-1246.000000, -664.000000%29\\'%3E%3Cg id=\\'Group-16\\' transform=\\'translate%281250.000000, 666.000000%29\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cuse fill=\\'white\\' fill-opacity=\\'1\\' filter=\\'url%28%23filter-2%29\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3Cuse fill=\\''+encodeURI(brandColor)+'\\' fill-rule=\\'evenodd\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23FFFFFF\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\\\r\n\t\t }\\\r\n\t\thtml[dir=\"rtl\"] .cc-sdk .submit-icon{\\\r\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'Submit_Icon\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cg id=\\'path-1-link\\' fill-rule=\\'nonzero\\' fill=\\'%23white\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3Cg id=\\'path-1-link\\' fill=\\''+encodeURI(brandColor)+'\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23ffffff\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\' transform=\\'translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 \\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\");\\\r\n\t\t}\\\r\n\t\t.cc-sdk .cc-question-container__required-label{\\\r\n\t\t\tcolor: '+brandColor+';\\\r\n\t\t}\\\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\\\r\n\t\t\tbackground: '+brandColor+' !important;\\\r\n\t\t\t   background: -moz-linear-gradient(-45deg, '+brandColor+' 0%, '+this.brandColorDark+' 100%)!important;\\\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\r\n\t\t\t   background: linear-gradient(135deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+brandColor+ ', endColorstr='+this.brandColorDark+',GradientType=1 );\\\r\n\t\t   }\\\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\\\r\n\t\t\tbackground: '+brandColor+' !important;\\\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, '+brandColor+' 0%, '+this.brandColorDark+' 100%)!important;\\\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\r\n\t\t\tbackground: linear-gradient(135deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+brandColor+ ', endColorstr='+this.brandColorDark+',GradientType=1 );\\\r\n\t\t}\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\\\r\n\t\t\tborder: 1px solid '+brandColor+' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\\\r\n\t\t\tborder: 1px solid '+brandColor+' ;\\\r\n\t\t\tbackground-color: #fff;\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk svg.timer circle {\\\r\n\t\t\tanimation: countdown '+time+'s linear 1 forwards;\\\r\n\t\t\tstroke: '+brandColor+';\\\r\n\t\t   }\\\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\\r\n\t\t\t\tbackground-color: '+brandColor+';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\\r\n\t\t\t\tbackground-color: '+brandColor+';\\\r\n\t\t\t}\\\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\\\r\n\t\t\t\tborder: solid 1px '+ brandColor + ';\\\r\n\t\t\t}\\\r\n\t\t @media (max-width: 767px){\\\r\n\t \t\t\t.overlay.glass{\\\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\r\n\t \t\t\tbackground-image:none;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container{\\\r\n\t\t\t\t\tbackground-color : transparent;\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .overlay.glass{\\\r\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB(brandColor,.9)+';\\\r\n\t\t\t\t}\\\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\\r\n\t\t\t\t\tcolor:#fff;\\\r\n\t\t\t\t}\\\r\n\t\t';\r\n\t\tthis.util.appendStyle(css);\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\r\nclass Slider{\r\n  inputRange : any;\r\n  rangeTip : any;\r\n  maxValue : number;\r\n  speed : number;\r\n  currValue : number;\r\n  rafID : any;\r\n  timeout : any;\r\n  util : any\r\n\r\n  constructor(){\r\n   this.inputRange = document.getElementsByClassName('range')[0];\r\n   this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n   this.util = new DomUtilities();\r\n  //  this.maxValue = 100; // the higher the smoother when dragging\r\n   this.speed = 5;\r\n   \r\n\r\n  // set min/max value\r\n  // this.inputRange.min = 0;\r\n  this.inputRange.min = this.inputRange.getAttribute('min');\r\n  // this.inputRange.max = this.maxValue;\r\n  this.inputRange.max = this.inputRange.getAttribute('max');\r\n  this.setupListeners();\r\n  }\r\n\r\n  setupListeners(){\r\n    let self : Slider = this;\r\n   \r\n    // bind events\r\n    this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n    // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\r\n    // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\r\n    // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\r\n    // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\r\n    // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\r\n    // move gradient\r\n    this.inputRange.addEventListener('input', function() {\r\n      self.updateRangeTip();\r\n      self.util.addClass(this, 'selected');\r\n      \r\n    //Change slide thumb color on way up\r\n    if (this.value > 20) {\r\n       self.inputRange.classList.add('ltpurple');\r\n    }\r\n    if (this.value > 40) {\r\n       self.inputRange.classList.add('purple');\r\n    }\r\n    if (this.value > 60) {\r\n       self.inputRange.classList.add('pink');\r\n    }\r\n\r\n    //Change slide thumb color on way down\r\n    if (this.value < 20) {\r\n       self.inputRange.classList.remove('ltpurple');\r\n    }\r\n    if (this.value < 40) {\r\n       self.inputRange.classList.remove('purple');\r\n    }\r\n    if (this.value < 60) {\r\n       self.inputRange.classList.remove('pink');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n  updateRangeTip(){\r\n    let self : Slider = this;\r\n    this.rangeTip.style.display = 'block' ;\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\r\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\r\n    // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\r\n    \r\n    // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\r\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\r\n      \r\n    // } else {\r\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\r\n      \r\n    // }\r\n    // if(parseInt(this.rangeTip.style.left) <= 50 ){\r\n    //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\r\n    // }else{\r\n    //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\r\n    // }\r\n    // console.log(this.rangeTip.style.left);\r\n    // if(this.timeout){\r\n    //   clearTimeout(this.timeout);\r\n    // }\r\n    // this.timeout = setTimeout(function(){\r\n    //   self.rangeTip.style.display = 'none' ;\r\n    // },300)\r\n    \r\n  }\r\n\r\n  clearTo(){\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if (this.currValue < 20) {\r\n       this.inputRange.classList.remove('ltpurple');\r\n    }\r\n    if (this.currValue < 40) {\r\n       this.inputRange.classList.remove('purple');\r\n    }\r\n    if (this.currValue < 60) {\r\n       this.inputRange.classList.remove('pink');\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if(this.currValue > -1) {\r\n     window.requestAnimationFrame(this.animateHandler);\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler(){\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif(Cookie.get(Constants.CCTriggerSiteStartTime) == null) {\r\n  Cookie.set(Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie.set(Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\n\r\nlet sitePageViewCount = Cookie.get(Constants.CCTriggerSitePageViewCount);\r\nif( sitePageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n} else {\r\n  sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get(Constants.CCTriggerIndividualPageViewCount);\r\nif( individualPageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n} else {\r\n  individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\n\r\n(window as any).click = 0;\r\n\r\nwindow.onscroll = function (e) {  \r\n  // called when the window is scrolled.  \r\n    let doc = document.documentElement;\r\n    let left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    let top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\r\n    (window as any).ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n}\r\n\r\n\r\ndocument.onclick = function(e) {\r\n  (window as any).click++;\r\n}\r\n\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval : any = null;\r\n  static triggerInstances : any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey(surveyId : any, trigger : Triggers) {\r\n    TriggerManager.triggerInstances[surveyId] = trigger;\r\n    if(Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n      (window as any).ccsdkDebug ?console.log(TriggerManager.triggerInterval):'';\r\n      if(TriggerManager.triggerInterval == null) {\r\n        (window as any).ccsdkDebug ?console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\"):'';\r\n        TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId : string) {\r\n    delete TriggerManager.triggerInstances[surveyId];\r\n    if(Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n      clearInterval(TriggerManager.triggerInterval);\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n    Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n    //set cookies and call every process Interval Triggers.\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers(scrollNow) {\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n    }\r\n  }\r\n\r\n  static disableTriggers(surveyId : string) {\r\n    TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk : any;\r\n  pageCountTrigger : boolean;\r\n  pageTimeTrigger : boolean;\r\n  siteCountTrigger : boolean;\r\n  siteTimeTrigger : boolean;\r\n  urlParamTrigger : boolean;\r\n  notUrlParamTrigger : boolean;\r\n  utmParamTrigger : boolean;\r\n  scrollPixelsTrigger : boolean;\r\n  minPageCount : number;\r\n  minSiteCount : number;\r\n  minPageTime : number;\r\n  minSiteTime : number;\r\n  minScrollPixels : number;\r\n  utm : string;\r\n  inUrl : RegExp;\r\n  notinUrl : RegExp;\r\n  pageCountTriggerEnabled : boolean;\r\n  siteCountTriggerEnabled : boolean;\r\n  pageTimeTriggerEnabled : boolean;\r\n  siteTimeTriggerEnabled : boolean;\r\n  urlParamTriggerEnabled : boolean;\r\n  notUrlParamTriggerEnabled : boolean;\r\n  utmParamTriggerEnabled : boolean;\r\n  scrollPixelsTriggerEnabled : boolean;\r\n\r\n  conditionalTriggers : any;\r\n\r\n  constructor(ccsdk) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger(target : string, cb : any) {\r\n    let item = document.querySelectorAll(target)[0];\r\n    if(typeof item !== 'undefined') {\r\n      item.addEventListener('click',cb);\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger(minPageCount : number) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger(minSiteCount : number) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger(minPageTime : number) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger(minSiteTime : number) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger(urlPattern : RegExp) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger(urlPattern : RegExp) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger(urlPattern : string) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger(minScrollPixels : number) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers(config : CCSDKConfig) {\r\n    (window as any).ccsdkDebug?console.log(config.grepURL):'';\r\n    //\r\n    if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ((typeof config.onExitDetect !== 'undefined')) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)){\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      (window as any).ccsdkDebug?console.log('returning'):'';\r\n      return;\r\n    }\r\n    if(typeof this.conditionalTriggers !== 'undefined') {\r\n      if(Object.keys(this.conditionalTriggers).length == 0) {\r\n        return false;\r\n      }\r\n      for(let conditionalTrigger in this.conditionalTriggers) {\r\n        if(this.conditionalTriggers[conditionalTrigger] != null) {\r\n          switch(conditionalTrigger) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                (window as any).ccsdkDebug?console.log(\"Mouse out\"):'';\r\n\r\n              });\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n\r\n            break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ((window as any).click >= this.conditionalTriggers.click);\r\n            break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n              let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('waitSeconds enabled', isEnabled):'';\r\n            break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( (window as any).ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('scrollPercent enabled', isEnabled):'';\r\n              \r\n            break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug?console.log('grepURL enabled', isEnabled):'';\r\n            break;\r\n            case \"grepInvertURL\":\r\n                isEnabled = isEnabled && !TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                (window as any).ccsdkDebug?console.log('grepInvertURL enabled', isEnabled):'';\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(isEnabled) {\r\n        SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers(scrollNow : number) {\r\n    this.TriggerPopUpByScrollPixels(scrollNow);\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt(Cookie.get(Constants.CCTriggerSitePageViewCount));\r\n    if(pageCount == NaN) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  \r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n    let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition(pageTime, pageStartTime,this.minPageTime) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date(Cookie.get(Constants.CCTriggerSiteStartTime)).getTime();\r\n    let siteTime = new Date(Cookie.get(Constants.CCTriggerSiteElapsedTime)).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n    \r\n  }\r\n\r\n  TriggerPopUpByScrollPixels(scrollNow : number) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll(scrollNow, this.minScrollPixels) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split(\"=\");\r\n    let utmVal = Cookie.getParameterByName(utmP[0], undefined); \r\n    //!(window as any).globalSurveyRunning && \r\n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]){\r\n      this.utmParamTrigger = true;\r\n      \r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts"],"sourceRoot":""}